; Copyright 2010, 2012-2023 Richard Dymond (rjdymond@gmail.com)

@rom
@defs=23552:9728 ; Clear all buffers
; Attribute buffer (cavern + Willy + guardians + items + portal)
;
; The routine at #R34574 initialises this buffer with the contents of the
; attribute buffer at #R24064 (empty cavern), writes the attributes for Willy,
; the guardians, the items and the portal into it, and then copies the result
; to the attribute file.
b23552 DEFS 512

; Attribute buffer (empty cavern)
;
; Initialised upon entry to a cavern by the routine at #R34436, and updated by
; the routines at #R35770 and #R37173.
b24064 DEFS 512

; Screen buffer (cavern + Willy + guardians + items + portal)
;
; The routine at #R34574 initialises this buffer with the contents of the
; screen buffer at #R28672 (empty cavern), draws Willy, the guardians, the
; items and the portal over this background, and then copies the result to the
; display file.
b24576 DEFS 4096

; Screen buffer (empty cavern)
;
; Initialised upon entry to a cavern by the routine at #R35445, and updated by
; the routines at #R35770, #R37125 and #R37173.
b28672 DEFS 4096

@start
@replace=/#n\i/#N\1,,,1($)
@replace=/#b\i/#N\1,,,1(0x)
@expand=#DEF(#BUG #LINK:Bugs)
@expand=#DEF(#FACT #LINK:Facts)
@expand=#DEF(#POKE #LINK:Pokes)
@expand=#DEF(#S #FORMAT({mode[case]}))
@expand=#DEF(#GBUF(a,b=0) #LINK:GameStatusBuffer#$a(#N$a#IF($b)(-#N$b)))
; Manic Miner disassembly
; https://skoolkit.ca
;
; Copyright 1983 Bug-Byte Ltd (Manic Miner)
; Copyright 2010, 2012-2023 Richard Dymond (this disassembly)

@isub+begin
@org
c32765 JP 33792
@isub+end

@set-handle-unsupported-macros=1
; Cavern name
;
; The cavern name is copied here and then used by the routine at #R34436.
@label=CAVERNNAME
g32768 DEFS 32

; Cavern tiles
;
; The cavern tiles are copied here by the routine at #R34436 and then used to
; draw the cavern by the routine at #R35445.
; .
; The extra tile at #R32863 behaves like a floor tile, and is used as such in
; #R54272(The Endorian Forest), #R55296(Attack of the Mutant Telephones),
; #R57344(Ore Refinery), #R58368(Skylab Landing Bay) and #R59392(The Bank). It
; is also used in #R47104(The Menagerie) as spider silk, and in #R52224(Miner
; Willy meets the Kong Beast) and #R56320(Return of the Alien Kong Beast) as a
; switch.
@label=BACKGROUND
g32800 DEFS 9        ; Background tile (also used by the routines at #R35515,
                     ; #R35770, #R36211, #R36344, #R37173 and #R37471)
@label=FLOOR
 32809 DEFS 9        ; Floor tile (also used by the routine at #R36211)
@label=CRUMBLING
 32818 DEFS 9        ; Crumbling floor tile (also used by the routine at
                     ; #R35515)
@label=WALL
 32827 DEFS 9        ; Wall tile (also used by the routines at #R35515, #R35805
                     ; and #R36211)
@label=CONVEYOR
 32836 DEFS 9        ; Conveyor tile (also used by the routine at #R35805)
@label=NASTY1
 32845 DEFS 9        ; Nasty tile 1 (also used by the routines at #R35515 and
                     ; #R37471)
@label=NASTY2
 32854 DEFS 9        ; Nasty tile 2 (also used by the routines at #R35515 and
                     ; #R37471)
@label=EXTRA
 32863 DEFS 9        ; Extra tile (also used by the routine at #R37403)

; Willy's y-coordinate
;
; Initialised by the routine at #R34436, and used by the routines at #R35515,
; #R35805, #R37434 and #R37503. Holds the LSB of the address of the entry in
; the screen buffer address lookup table at #R33536 that corresponds to Willy's
; pixel y-coordinate; in practice, this LSB is twice Willy's actual pixel
; y-coordinate.
@label=WILLY_Y
g32872 DEFB 0

; Willy's animation frame
;
; Initialised upon entry to a cavern or after losing a life by the routine at
; #R34436, used by the routine at #R37503, and updated by the routine at
; #R35805. Possible values are 0, 1, 2 and 3.
@label=FRAME
g32873 DEFB 0

; Willy's direction and movement flags
;
; Initialised by the routine at #R34436.
; .
; #TABLE(default,centre,:w)
; { =h Bit(s) | =h Meaning | =h Used by }
; { 0 | Direction Willy is facing (reset=right, set=left) | #R35805, #R37503 }
; { 1 | Willy's movement flag (set=moving) | #R35515, #R35805 }
; { 2-7 | Unused (always reset) | }
; TABLE#
@label=DMFLAGS
g32874 DEFB 0

; Airborne status indicator
;
; Initialised by the routine at #R34436, and used by the routines at #R34574,
; #R35515, #R35805 and #R36101. Possible values are:
; .
; #TABLE(default,centre,:w)
; { =h Value | =h Meaning }
; { #b0      | Willy is neither falling nor jumping }
; { #b1      | Willy is jumping }
; { #b2-#b11 | Willy is falling, and can land safely }
; { #b12+    | Willy is falling, and has fallen too far to land safely (see
; #R35805#35805) }
; { #b255    | Willy has collided with a nasty or a guardian (see #R36101) }
; TABLE#
@label=AIRBORNE
g32875 DEFB 0

; Address of Willy's location in the attribute buffer at #N23552
;
; Initialised by the routine at #R34436, used by the routines at #R35515,
; #R36805, #R37403, #R37434 and #R37503, and updated by the routine at #R35805.
@label=LOCATION
g32876 DEFW 0

; Jumping animation counter
;
; Initialised by the routine at #R34436, and used by the routines at #R35515
; and #R35805.
@label=JUMPING
g32878 DEFB 0

; Conveyor definition
;
; The conveyor definition is copied here by the routine at #R34436.
@label=CONVDIR
g32879 DEFB 0        ; Direction (0=left, 1=right; used by the routines at
                     ; #R35805 and #R37125)
@label=CONVLOC
 32880 DEFW 0        ; Address of the conveyor's location in the screen buffer
                     ; at #R28672 (used by the routine at #R37125)
@label=CONVLEN
 32882 DEFB 0        ; Length (used by the routine at #R37125)

; Border colour
;
; Initialised and used by the routine at #R34436, and also used by the routines
; at #R34574, #R35515 and #R37173.
@label=BORDER
g32883 DEFB 0

; Attribute of the last item drawn
;
; Used by the routines at #R36344 and #R36707. Holds the attribute byte of the
; last item drawn, or #b0 if all the items have been collected.
@label=ITEMATTR
g32884 DEFB 0

; Item definitions
;
; The item definitions are copied here by the routine at #R34436, and then used
; by the routine at #R36707. An item definition contains the following
; information:
; .
; #TABLE(default,centre,:w)
; { =h Byte(s) | =h Contents }
; { 0 | Current attribute }
; { 1,2 | Address of the item's location in the attribute buffer at #R23552 }
; { 3 | MSB of the address of the item's location in the screen buffer at
; #R24576 }
; { 4 | Unused (always #b255) }
; TABLE#
@label=ITEMS
g32885 DEFS 5        ; Item 1
 32890 DEFS 5        ; Item 2
 32895 DEFS 5        ; Item 3
 32900 DEFS 5        ; Item 4
 32905 DEFS 5        ; Item 5
 32910 DEFB 0        ; Terminator (set to #b255)

; Portal definition
;
; The portal definition is copied here by the routine at #R34436.
@label=PORTAL
g32911 DEFB 0        ; Attribute byte (used by the routines at #R36707 and
                     ; #R36805)
@label=PORTALG
 32912 DEFS 32       ; Graphic data (used by the routine at #R36805)
@label=PORTALLOC1
 32944 DEFW 0        ; Address of the portal's location in the attribute buffer
                     ; at #R23552 (used by the routine at #R36805)
@label=PORTALLOC2
 32946 DEFW 0        ; Address of the portal's location in the screen buffer at
                     ; #R24576 (used by the routine at #R36805)

; Item graphic
;
; The item graphic is copied here by the routine at #R34436, and then used by
; the routine at #R36707.
@label=ITEM
g32948 DEFS 8

; Remaining air supply
;
; Initialised (always to #b63 in practice) and used by the routine at #R34436,
; updated by the routine at #R35388, and also used by the routine at #R36904.
; Its value ranges from #b36 to #b63 and is actually the LSB of the display
; file address for the cell at the right end of the air bar. The amount of air
; to draw in this cell is determined by the value of the game clock at #R32957.
@label=AIR
g32956 DEFB 0

; Game clock
;
; Initialised by the routine at #R34436, updated on every pass through the main
; loop by the routine at #R35388, and used for timing purposes by the routines
; at #R36111, #R36344 and #R37173. Its value (which is always a multiple of 4)
; is also used by the routine at #R35388 to compute the amount of air to draw
; in the cell at the right end of the air bar.
@label=CLOCK
g32957 DEFB 0

; Horizontal guardians
;
; The horizontal guardian definitions are copied here by the routine at
; #R34436, and then used by the routines at #R36111 and #R36266. There are four
; slots, each one seven bytes long, used to hold the state of the horizontal
; guardians in the current cavern.
; .
; For each horizontal guardian, the seven bytes are used as follows:
; .
; #TABLE(default,centre,:w)
; { =h Byte | =h Contents }
; { =r2 0 | Bit 7: animation speed (0=normal, 1=slow) }
; { Bits 0-6: attribute (BRIGHT, PAPER and INK) }
; { 1,2 | Address of the guardian's location in the attribute buffer at #R23552
; }
; { 3 | MSB of the address of the guardian's location in the screen buffer at
; #R24576 }
; { 4 | Animation frame }
; { 5 | LSB of the address of the leftmost point of the guardian's path in the
; attribute buffer }
; { 6 | LSB of the address of the rightmost point of the guardian's path in the
; attribute buffer }
; TABLE#
@label=HGUARDS
g32958 DEFS 7        ; Horizontal guardian 1
@label=HGUARD2
 32965 DEFS 7        ; Horizontal guardian 2
 32972 DEFS 7        ; Horizontal guardian 3
 32979 DEFS 7        ; Horizontal guardian 4
 32986 DEFB 0        ; Terminator (set to #b255)

; Eugene's direction or the Kong Beast's status
;
; Initialised by the routine at #R34436, and used by the routines at #R36344
; (to hold Eugene's direction: 0=down, 1=up) and #R37173 (to hold the Kong
; Beast's status: 0=on the ledge, 1=falling, 2=dead).
@label=EUGDIR
g32987 DEFB 0

; Eugene's or the Kong Beast's pixel y-coordinate
;
; Initialised by the routine at #R34436, and used by the routines at #R34252
; (to hold the index into the message scrolled across the screen after the
; theme tune has finished playing), #R35140 (to hold the distance of the boot
; from the top of the screen as it descends onto Willy), #R36344 (to hold
; Eugene's pixel y-coordinate) and #R37173 (to hold the Kong Beast's pixel
; y-coordinate).
@label=EUGHGT
g32988 DEFB 0

; Vertical guardians
;
; The vertical guardian definitions are copied here by the routine at #R34436,
; and then used by the routines at #R36469 and #R36593. There are four slots,
; each one seven bytes long, used to hold the state of the vertical guardians
; in the current cavern.
; .
; For each vertical guardian, the seven bytes are used as follows:
; .
; #TABLE(default,centre,:w)
; { =h Byte | =h Contents }
; { 0 | Attribute }
; { 1 | Animation frame }
; { 2 | Pixel y-coordinate }
; { 3 | x-coordinate }
; { 4 | Pixel y-coordinate increment }
; { 5 | Minimum pixel y-coordinate }
; { 6 | Maximum pixel y-coordinate }
; TABLE#
; .
; In most of the caverns that do not have vertical guardians, this area is
; overwritten by unused bytes from the cavern definition. The exception is
; #R49152(Eugene's Lair): the routine at #R34436 copies the graphic data for
; the Eugene sprite into the last 32 bytes of this area, where it is then used
; by the routine at #R36344.
@label=VGUARDS
g32989 DEFS 7        ; Vertical guardian 1
 32996 DEFS 7        ; Vertical guardian 2
 33003 DEFS 7        ; Vertical guardian 3
 33010 DEFS 7        ; Vertical guardian 4
 33017 DEFB 0        ; Terminator (set to #b255 in caverns that have four
                     ; vertical guardians)
 33018 DEFS 6        ; Spare

; Guardian graphic data
;
; The guardian graphic data is copied here by the routine at #R34436, and then
; used by the routines at #R36266, #R36469, #R36593 and #R37173.
@label=GGDATA
g33024 DEFS 256

; Willy sprite graphic data
;
; Used by the routines at #R34252, #R34574 and #R37503.
; .
; #UDGTABLE
; { #FOR(0,3)//n/#UDGARRAY2,7,2,2;(33280+32*n)-(33297+32*n)-1-16(willyn*)/ | //
; | #UDGARRAY*willy0;willy1;willy2;willy3(willy_r) }
; { #FOR(4,7)//n/#UDGARRAY2,7,2,2;(33280+32*n)-(33297+32*n)-1-16(willyn*)/ | //
; | #UDGARRAY*willy7;willy6;willy5;willy4(willy_l) }
; TABLE#
@label=MANDAT
b33280 DEFB 6,0,62,0,124,0,52,0,62,0,60,0,24,0,60,0
 33296 DEFB 126,0,126,0,247,0,251,0,60,0,118,0,110,0,119,0
 33312 DEFB 1,128,15,128,31,0,13,0,15,128,15,0,6,0,15,0
 33328 DEFB 27,128,27,128,27,128,29,128,15,0,6,0,6,0,7,0
@label=WILLYR2
 33344 DEFB 0,96,3,224,7,192,3,64,3,224,3,192,1,128,3,192
 33360 DEFB 7,224,7,224,15,112,15,176,3,192,7,96,6,224,7,112
@label=WILLYR3
 33376 DEFB 0,24,0,248,1,240,0,208,0,248,0,240,0,96,0,240
 33392 DEFB 1,248,3,252,7,254,6,246,0,248,1,218,3,14,3,132
 33408 DEFB 24,0,31,0,15,128,11,0,31,0,15,0,6,0,15,0
 33424 DEFB 31,128,63,192,127,224,111,96,31,0,91,128,112,192,33,192
 33440 DEFB 6,0,7,192,3,224,2,192,7,192,3,192,1,128,3,192
 33456 DEFB 7,224,7,224,14,240,13,240,3,192,6,224,7,96,14,224
 33472 DEFB 1,128,1,240,0,248,0,176,1,240,0,240,0,96,0,240
 33488 DEFB 1,248,1,216,1,216,1,184,0,240,0,96,0,96,0,224
 33504 DEFB 0,96,0,124,0,62,0,44,0,124,0,60,0,24,0,60
 33520 DEFB 0,126,0,126,0,239,0,223,0,60,0,110,0,118,0,238

; Screen buffer address lookup table
;
; Used by the routines at #R35140, #R36344, #R36469, #R36593, #R37173 and
; #R37503. The value of the Nth entry (0<=N<=127) in this lookup table is the
; screen buffer address for the point with pixel coordinates (x,y)=(0,N), with
; the origin (0,0) at the top-left corner.
@label=SBUFADDRS
w33536 DEFW 24576    ; y=0
 33538 DEFW 24832    ; y=1
 33540 DEFW 25088    ; y=2
 33542 DEFW 25344    ; y=3
 33544 DEFW 25600    ; y=4
 33546 DEFW 25856    ; y=5
 33548 DEFW 26112    ; y=6
 33550 DEFW 26368    ; y=7
 33552 DEFW 24608    ; y=8
 33554 DEFW 24864    ; y=9
 33556 DEFW 25120    ; y=10
 33558 DEFW 25376    ; y=11
 33560 DEFW 25632    ; y=12
 33562 DEFW 25888    ; y=13
 33564 DEFW 26144    ; y=14
 33566 DEFW 26400    ; y=15
 33568 DEFW 24640    ; y=16
 33570 DEFW 24896    ; y=17
 33572 DEFW 25152    ; y=18
 33574 DEFW 25408    ; y=19
 33576 DEFW 25664    ; y=20
 33578 DEFW 25920    ; y=21
 33580 DEFW 26176    ; y=22
 33582 DEFW 26432    ; y=23
 33584 DEFW 24672    ; y=24
 33586 DEFW 24928    ; y=25
 33588 DEFW 25184    ; y=26
 33590 DEFW 25440    ; y=27
 33592 DEFW 25696    ; y=28
 33594 DEFW 25952    ; y=29
 33596 DEFW 26208    ; y=30
 33598 DEFW 26464    ; y=31
 33600 DEFW 24704    ; y=32
 33602 DEFW 24960    ; y=33
 33604 DEFW 25216    ; y=34
 33606 DEFW 25472    ; y=35
 33608 DEFW 25728    ; y=36
 33610 DEFW 25984    ; y=37
 33612 DEFW 26240    ; y=38
 33614 DEFW 26496    ; y=39
 33616 DEFW 24736    ; y=40
 33618 DEFW 24992    ; y=41
 33620 DEFW 25248    ; y=42
 33622 DEFW 25504    ; y=43
 33624 DEFW 25760    ; y=44
 33626 DEFW 26016    ; y=45
 33628 DEFW 26272    ; y=46
 33630 DEFW 26528    ; y=47
 33632 DEFW 24768    ; y=48
 33634 DEFW 25024    ; y=49
 33636 DEFW 25280    ; y=50
 33638 DEFW 25536    ; y=51
 33640 DEFW 25792    ; y=52
 33642 DEFW 26048    ; y=53
 33644 DEFW 26304    ; y=54
 33646 DEFW 26560    ; y=55
 33648 DEFW 24800    ; y=56
 33650 DEFW 25056    ; y=57
 33652 DEFW 25312    ; y=58
 33654 DEFW 25568    ; y=59
 33656 DEFW 25824    ; y=60
 33658 DEFW 26080    ; y=61
 33660 DEFW 26336    ; y=62
 33662 DEFW 26592    ; y=63
 33664 DEFW 26624    ; y=64
 33666 DEFW 26880    ; y=65
 33668 DEFW 27136    ; y=66
 33670 DEFW 27392    ; y=67
 33672 DEFW 27648    ; y=68
 33674 DEFW 27904    ; y=69
 33676 DEFW 28160    ; y=70
 33678 DEFW 28416    ; y=71
 33680 DEFW 26656    ; y=72
 33682 DEFW 26912    ; y=73
 33684 DEFW 27168    ; y=74
 33686 DEFW 27424    ; y=75
 33688 DEFW 27680    ; y=76
 33690 DEFW 27936    ; y=77
 33692 DEFW 28192    ; y=78
 33694 DEFW 28448    ; y=79
 33696 DEFW 26688    ; y=80
 33698 DEFW 26944    ; y=81
 33700 DEFW 27200    ; y=82
 33702 DEFW 27456    ; y=83
 33704 DEFW 27712    ; y=84
 33706 DEFW 27968    ; y=85
 33708 DEFW 28224    ; y=86
 33710 DEFW 28480    ; y=87
 33712 DEFW 26720    ; y=88
 33714 DEFW 26976    ; y=89
 33716 DEFW 27232    ; y=90
 33718 DEFW 27488    ; y=91
 33720 DEFW 27744    ; y=92
 33722 DEFW 28000    ; y=93
 33724 DEFW 28256    ; y=94
 33726 DEFW 28512    ; y=95
 33728 DEFW 26752    ; y=96
 33730 DEFW 27008    ; y=97
 33732 DEFW 27264    ; y=98
 33734 DEFW 27520    ; y=99
 33736 DEFW 27776    ; y=100
 33738 DEFW 28032    ; y=101
 33740 DEFW 28288    ; y=102
 33742 DEFW 28544    ; y=103
 33744 DEFW 26784    ; y=104
 33746 DEFW 27040    ; y=105
 33748 DEFW 27296    ; y=106
 33750 DEFW 27552    ; y=107
 33752 DEFW 27808    ; y=108
 33754 DEFW 28064    ; y=109
 33756 DEFW 28320    ; y=110
 33758 DEFW 28576    ; y=111
 33760 DEFW 26816    ; y=112
 33762 DEFW 27072    ; y=113
 33764 DEFW 27328    ; y=114
 33766 DEFW 27584    ; y=115
 33768 DEFW 27840    ; y=116
 33770 DEFW 28096    ; y=117
 33772 DEFW 28352    ; y=118
 33774 DEFW 28608    ; y=119
 33776 DEFW 26848    ; y=120
 33778 DEFW 27104    ; y=121
 33780 DEFW 27360    ; y=122
 33782 DEFW 27616    ; y=123
 33784 DEFW 27872    ; y=124
 33786 DEFW 28128    ; y=125
 33788 DEFW 28384    ; y=126
 33790 DEFW 28640    ; y=127

; The game has just loaded
@label=BEGIN
c33792 DI            ; Disable interrupts
@keep
 33793 LD SP,40190   ; Place the stack somewhere safe (near the end of the
                     ; source code remnants at #R37708)
 33796 JP 34252      ; Display the title screen and play the theme tune

; Current cavern number
;
; Initialised by the routine at #R34252, used by the routines at #R34436,
; #R34574, #R35445 and #R36266, and updated by the routine at #R36904.
@label=SHEET
g33799 DEFB 0

; Left-right movement table
;
; Used by the routine at #R35805. The entries in this table are used to map the
; existing value (V) of Willy's direction and movement flags at #R32874 to a
; new value (V'), depending on the direction Willy is facing and how he is
; moving or being moved (by 'left' and 'right' keypresses and joystick input,
; or by a conveyor).
; .
; One of the first four entries is used when Willy is not moving.
@label=LRMOVEMENT
b33800 DEFB 0        ; V=0 (facing right, no movement) + no movement: V'=0 (no
                     ; change)
 33801 DEFB 1        ; V=1 (facing left, no movement) + no movement: V'=1 (no
                     ; change)
 33802 DEFB 0        ; V=2 (facing right, moving) + no movement: V'=0 (facing
                     ; right, no movement) (i.e. stop)
 33803 DEFB 1        ; V=3 (facing left, moving) + no movement: V'=1 (facing
                     ; left, no movement) (i.e. stop)
; One of the next four entries is used when Willy is moving left.
 33804 DEFB 1        ; V=0 (facing right, no movement) + move left: V'=1
                     ; (facing left, no movement) (i.e. turn around)
 33805 DEFB 3        ; V=1 (facing left, no movement) + move left: V'=3 (facing
                     ; left, moving)
 33806 DEFB 1        ; V=2 (facing right, moving) + move left: V'=1 (facing
                     ; left, no movement) (i.e. turn around)
 33807 DEFB 3        ; V=3 (facing left, moving) + move left: V'=3 (no change)
; One of the next four entries is used when Willy is moving right.
 33808 DEFB 2        ; V=0 (facing right, no movement) + move right: V'=2
                     ; (facing right, moving)
 33809 DEFB 0        ; V=1 (facing left, no movement) + move right: V'=0
                     ; (facing right, no movement) (i.e. turn around)
 33810 DEFB 2        ; V=2 (facing right, moving) + move right: V'=2 (no
                     ; change)
 33811 DEFB 0        ; V=3 (facing left, moving) + move right: V'=0 (facing
                     ; right, no movement) (i.e. turn around)
; One of the final four entries is used when Willy is being pulled both left
; and right; each entry leaves the flags at #R32874 unchanged (so Willy carries
; on moving in the direction he's already moving, or remains stationary).
 33812 DEFB 0        ; V=V'=0 (facing right, no movement)
 33813 DEFB 1        ; V=V'=1 (facing left, no movement)
 33814 DEFB 2        ; V=V'=2 (facing right, moving)
 33815 DEFB 3        ; V=V'=3 (facing left, moving)

; 'AIR'
;
; Used by the routine at #R34436.
@label=MESSAIR
t33816 DEFM "AIR"

; Unused
u33819 DEFM "0000"

; High score
;
; Used by the routine at #R34574 and updated by the routine at #R35140.
@label=HGHSCOR
g33823 DEFM "000000"

; Score
;
; Initialised by the routine at #R34436, and used by the routines at #R34574,
; #R35140, #R36904 and #R37098.
@label=SCORE
g33829 DEFM "0000"   ; Overflow digits (these may be updated, but are never
                     ; printed)
@label=SCORBUF
 33833 DEFM "000000"

; 'High Score 000000#SPACE(3)Score 000000'
;
; Used by the routine at #R34436.
@label=MESSHSSC
t33839 DEFM "High Score 000000   Score 000000"

; 'Game'
;
; Used by the routine at #R35140.
@label=MESSG
t33871 DEFM "Game"

; 'Over'
;
; Used by the routine at #R35140.
@label=MESSO
t33875 DEFM "Over"

; Lives remaining
;
; Initialised to 2 by the routine at #R34252, and used and updated by the
; routines at #R34574 and #R37098.
@label=NOMEN
g33879 DEFB 0

; Screen flash counter
;
; Initialised by the routine at #R34252, and used by the routines at #R34574
; and #R37098.
@label=FLASH
g33880 DEFB 0

; Kempston joystick indicator
;
; Initialised by the routine at #R34252, and used by the routines at #R34574,
; #R35805 and #R37687. Holds 1 if a joystick is present, 0 otherwise.
@label=KEMP
g33881 DEFB 0

; Game mode indicator
;
; Initialised by the routine at #R34252, and used by the routines at #R34436,
; #R34574 and #R36904. Holds #b0 when a game is in progress, or a value from
; #b1 to #b64 when in demo mode.
@label=DEMO
g33882 DEFB 0

; In-game music note index
;
; Initialised by the routine at #R34252, and used and updated by the routine at
; #R34574.
@label=NOTEINDEX
g33883 DEFB 0

; Music flags
;
; The keypress flag in bit 0 is initialised by the routine at #R34252; bits 0
; and 1 are checked and updated by the routine at #R34574.
; .
; #TABLE(default,centre,:w)
; { =h Bit(s) | =h Meaning }
; { 0 | Keypress flag (set=H-ENTER being pressed, reset=no key pressed) }
; { 1 | In-game music flag (set=music off, reset=music on) }
; { 2-7 | Unused }
; TABLE#
@label=MUSICFLAGS
g33884 DEFB 0

; 6031769 key counter
;
; Used by the routines at #R34574 and #R36904.
@label=CHEAT
g33885 DEFB 0

; 6031769
;
; Used by the routine at #R34574. In each pair of bytes here, bits 0-4 of the
; first byte correspond to keys 1-2-3-4-5, and bits 0-4 of the second byte
; correspond to keys 0-9-8-7-6; among those bits, a zero indicates a key being
; pressed.
b33886 DEFB %00011111,%00011111 ; (no keys pressed)
@label=CHEATDT
 33888 DEFB %00011111,%00001111 ; 6
 33890 DEFB %00011111,%00011110 ; 0
 33892 DEFB %00011011,%00011111 ; 3
 33894 DEFB %00011110,%00011111 ; 1
 33896 DEFB %00011111,%00010111 ; 7
 33898 DEFB %00011111,%00001111 ; 6
 33900 DEFB %00011111,%00011101 ; 9

; Title screen tune data (The Blue Danube)
;
; Used by the routine at #R37596. The tune data is organised into 95 groups of
; three bytes each, one group for each note in the tune. The first byte in each
; group determines the duration of the note, and the second and third bytes
; determine the frequency (and also the piano keys that light up).
@label=THEMETUNE
b33902 DEFB 80,128,129
 33905 DEFB 80,102,103
 33908 DEFB 80,86,87
 33911 DEFB 50,86,87
 33914 DEFB 50,171,203
 33917 DEFB 50,43,51
 33920 DEFB 50,43,51
 33923 DEFB 50,171,203
 33926 DEFB 50,51,64
 33929 DEFB 50,51,64
 33932 DEFB 50,171,203
 33935 DEFB 50,128,129
 33938 DEFB 50,128,129
 33941 DEFB 50,102,103
 33944 DEFB 50,86,87
 33947 DEFB 50,96,86
 33950 DEFB 50,171,192
 33953 DEFB 50,43,48
 33956 DEFB 50,43,48
 33959 DEFB 50,171,192
 33962 DEFB 50,48,68
 33965 DEFB 50,48,68
 33968 DEFB 50,171,192
 33971 DEFB 50,136,137
 33974 DEFB 50,136,137
 33977 DEFB 50,114,115
 33980 DEFB 50,76,77
 33983 DEFB 50,76,77
 33986 DEFB 50,171,192
 33989 DEFB 50,38,48
 33992 DEFB 50,38,48
 33995 DEFB 50,171,192
 33998 DEFB 50,48,68
 34001 DEFB 50,48,68
 34004 DEFB 50,171,192
 34007 DEFB 50,136,137
 34010 DEFB 50,136,137
 34013 DEFB 50,114,115
 34016 DEFB 50,76,77
 34019 DEFB 50,76,77
 34022 DEFB 50,171,203
 34025 DEFB 50,38,51
 34028 DEFB 50,38,51
 34031 DEFB 50,171,203
 34034 DEFB 50,51,64
 34037 DEFB 50,51,64
 34040 DEFB 50,171,203
 34043 DEFB 50,128,129
 34046 DEFB 50,128,129
 34049 DEFB 50,102,103
 34052 DEFB 50,86,87
 34055 DEFB 50,64,65
 34058 DEFB 50,128,171
 34061 DEFB 50,32,43
 34064 DEFB 50,32,43
 34067 DEFB 50,128,171
 34070 DEFB 50,43,51
 34073 DEFB 50,43,51
 34076 DEFB 50,128,171
 34079 DEFB 50,128,129
 34082 DEFB 50,128,129
 34085 DEFB 50,102,103
 34088 DEFB 50,86,87
 34091 DEFB 50,64,65
 34094 DEFB 50,128,152
 34097 DEFB 50,32,38
 34100 DEFB 50,32,38
 34103 DEFB 50,128,152
 34106 DEFB 50,38,48
 34109 DEFB 50,38,48
 34112 DEFB 50,0,0
 34115 DEFB 50,114,115
 34118 DEFB 50,114,115
 34121 DEFB 50,96,97
 34124 DEFB 50,76,77
 34127 DEFB 50,76,153
 34130 DEFB 50,76,77
 34133 DEFB 50,76,77
 34136 DEFB 50,76,153
 34139 DEFB 50,91,92
 34142 DEFB 50,86,87
 34145 DEFB 50,51,205
 34148 DEFB 50,51,52
 34151 DEFB 50,51,52
 34154 DEFB 50,51,205
 34157 DEFB 50,64,65
 34160 DEFB 50,102,103
 34163 DEFB 100,102,103
 34166 DEFB 50,114,115
 34169 DEFB 100,76,77
 34172 DEFB 50,86,87
 34175 DEFB 50,128,203
 34178 DEFB 25,128,0
 34181 DEFB 25,128,129
 34184 DEFB 50,128,203
 34187 DEFB 255         ; End marker

; In-game tune data (In the Hall of the Mountain King)
;
; Used by the routine at #R34574.
@label=GAMETUNE
b34188 DEFB 128,114,102,96,86,102,86,86,81,96,81,81,86,102,86,86
 34204 DEFB 128,114,102,96,86,102,86,86,81,96,81,81,86,86,86,86
 34220 DEFB 128,114,102,96,86,102,86,86,81,96,81,81,86,102,86,86
 34236 DEFB 128,114,102,96,86,102,86,64,86,102,128,102,86,86,86,86

; Display the title screen and play the theme tune
;
; Used by the routines at #R33792, #R34574 and #R35140.
; .
; The first thing this routine does is initialise some game status buffer
; variables in preparation for the next game.
@label=START
c34252 XOR A         ; #REGa=0
 34253 LD (33799),A  ; Initialise the current cavern number at #R33799
 34256 LD (33881),A  ; Initialise the Kempston joystick indicator at #R33881
 34259 LD (33882),A  ; Initialise the game mode indicator at #R33882
 34262 LD (33883),A  ; Initialise the in-game music note index at #R33883
 34265 LD (33880),A  ; Initialise the screen flash counter at #R33880
 34268 LD A,2        ; {Initialise the number of lives remaining at #R33879
 34270 LD (33879),A  ; }
 34273 LD HL,33884   ; {Initialise the keypress flag in bit 0 at #R33884
 34276 SET 0,(HL)    ; }
; Next, prepare the screen.
 34278 LD HL,16384   ; {Clear the entire display file
 34281 LD DE,16385   ;
 34284 LD BC,6143    ;
 34287 LD (HL),0     ;
 34289 LDIR          ; }
 34291 LD HL,40960   ; {Copy the graphic data at #R40960 to the top two-thirds
 34294 LD DE,16384   ; of the display file
 34297 LD BC,4096    ;
 34300 LDIR          ; }
 34302 LD HL,18493   ; {Draw Willy at (9,29)
 34305 LD DE,33344   ;
 34308 LD C,0        ;
 34310 CALL 36852    ; }
 34313 LD HL,64512   ; {Copy the attribute bytes from #R64512 to the top third
 34316 LD DE,22528   ; of the attribute file
 34319 LD BC,256     ;
 34322 LDIR          ; }
 34324 LD HL,40448   ; {Copy the attribute bytes from #R40448 to the bottom
 34327 LD BC,512     ; two-thirds of the attribute file
 34330 LDIR          ; }
; Now check whether there is a joystick connected.
 34332 LD BC,31      ; This is the joystick port
 34335 DI            ; Disable interrupts (which are already disabled)
 34336 XOR A         ; #REGa=0
*34337 IN E,(C)      ; {Combine 256 readings of the joystick port in #REGa; if
 34339 OR E          ; no joystick is connected, some of these readings will
 34340 DJNZ 34337    ; have bit 5 set}
 34342 AND 32        ; Is a joystick connected (bit 5 reset)?
 34344 JR NZ,34351   ; Jump if not
 34346 LD A,1        ; {Set the Kempston joystick indicator at #R33881 to 1
 34348 LD (33881),A  ; }
; And finally, play the theme tune and check for keypresses.
; .
; #AUDIO4(tune.wav)(34351,34358)
@assemble=2
*34351 LD IY,33902   ; Point #REGiy at the theme tune data at #R33902
 34355 CALL 37596    ; Play the theme tune
 34358 JP NZ,34436   ; Start the game if ENTER or the fire button was pressed
 34361 XOR A         ; {Initialise the game status buffer variable at #R32988;
 34362 LD (32988),A  ; this will be used as an index for the message scrolled
                     ; across the screen}
*34365 LD A,(32988)  ; Pick up the message index from #R32988
 34368 LD IX,40192   ; {Point #REGix at the corresponding location in the
 34372 LD IXl,A      ; message at #R40192}
 34374 LD DE,20576   ; {Print 32 characters of the message at (19,0)
 34377 LD C,32       ;
 34379 CALL 37562    ; }
 34382 LD A,(32988)  ; Pick up the message index from #R32988
 34385 AND 6         ; {Keep only bits 1 and 2, and move them into bits 6 and
 34387 RRCA          ; 7, so that #REGa holds #b0, #b64, #b128 or #b192; this
 34388 RRCA          ; value determines the animation frame to use for Willy
 34389 RRCA          ; }
 34390 LD E,A        ; {Point #REGde at the graphic data for Willy's sprite
@ssub=LD D,33280/256
 34391 LD D,130      ; (#R33280+#REGa)}
 34393 LD HL,18493   ; {Draw Willy at (9,29)
 34396 LD C,0        ;
 34398 CALL 36852    ; }
 34401 LD BC,100     ; {Pause for about 0.1s
*34404 DJNZ 34404    ;
 34406 DEC C         ;
 34407 JR NZ,34404   ; }
@keep
 34409 LD BC,49150   ; {Read keys H-J-K-L-ENTER
 34412 IN A,(C)      ; }
 34414 AND 1         ; Keep only bit 0 of the result (ENTER)
 34416 CP 1          ; Is ENTER being pressed?
 34418 JR NZ,34436   ; If so, start the game
 34420 LD A,(32988)  ; Pick up the message index from #R32988
 34423 INC A         ; Increment it
 34424 CP 224        ; Set the zero flag if we've reached the end of the
                     ; message
 34426 LD (32988),A  ; Store the new message index at #R32988
 34429 JR NZ,34365   ; Jump back unless we've finished scrolling the message
                     ; across the screen
 34431 LD A,64       ; {Initialise the game mode indicator at #R33882 to #b64:
 34433 LD (33882),A  ; demo mode}
; This routine continues into the one at #R34436.

; Start the game (or demo mode)
;
; Used by the routine at #R34252.
@label=STARTGAME
c34436 LD HL,33829   ; {Initialise the score at #R33829
@ssub=LD DE,33829+1
 34439 LD DE,33830   ;
 34442 LD BC,9       ;
 34445 LD (HL),48    ;
 34447 LDIR          ; }
; This entry point is used by the routines at #R34574 (when teleporting into a
; cavern or reinitialising the current cavern after Willy has lost a life) and
; #R36904.
@label=NEWSHT
*34449 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34452 SLA A         ; {Point #REGhl at the first byte of the cavern definition
 34454 SLA A         ;
@ssub=ADD A,45056/256
 34456 ADD A,176     ;
 34458 LD H,A        ;
 34459 LD L,0        ; }
 34461 LD DE,24064   ; {Copy the cavern's attribute bytes into the buffer at
 34464 LD BC,512     ; #R24064
 34467 LDIR          ; }
@ignoreua
 34469 LD DE,32768   ; {Copy the rest of the cavern definition into the game
 34472 LD BC,512     ; status buffer at #GBUF32768
 34475 LDIR          ; }
 34477 CALL 35445    ; Draw the current cavern to the screen buffer at #R28672
 34480 LD HL,20480   ; {Clear the bottom third of the display file
 34483 LD DE,20481   ;
 34486 LD BC,2047    ;
 34489 LD (HL),0     ;
 34491 LDIR          ; }
 34493 LD IX,32768   ; {Print the cavern name (see #R32768) at (16,0)
 34497 LD C,32       ;
 34499 LD DE,20480   ;
 34502 CALL 37562    ; }
 34505 LD IX,33816   ; {Print 'AIR' (see #R33816) at (17,0)
 34509 LD C,3        ;
 34511 LD DE,20512   ;
 34514 CALL 37562    ; }
 34517 LD A,82       ; Initialise #REGa to #b82; this is the MSB of the display
                     ; file address at which to start drawing the bar that
                     ; represents the air supply
*34519 LD H,A        ; {Prepare #REGhl and #REGde for drawing a row of pixels
 34520 LD D,A        ; in the air bar
 34521 LD L,36       ;
 34523 LD E,37       ; }
 34525 LD B,A        ; Save the display file address MSB in #REGb briefly
 34526 LD A,(32956)  ; Pick up the value of the initial air supply from #R32956
 34529 SUB 36        ; {Now #REGc determines the length of the air bar (in cell
 34531 LD C,A        ; widths)}
 34532 LD A,B        ; Restore the display file address MSB to #REGa
 34533 LD B,0        ; Now #REGbc determines the length of the air bar (in cell
                     ; widths)
 34535 LD (HL),255   ; {Draw a single row of pixels across #REGc cells
 34537 LDIR          ; }
 34539 INC A         ; Increment the display file address MSB in #REGa (moving
                     ; down to the next row of pixels)
 34540 CP 86         ; Have we drawn all four rows of pixels in the air bar
                     ; yet?
 34542 JR NZ,34519   ; If not, jump back to draw the next one
 34544 LD IX,33839   ; {Print 'High Score 000000#SPACE(3)Score 000000' (see
 34548 LD DE,20576   ; #R33839) at (19,0)
 34551 LD C,32       ;
 34553 CALL 37562    ; }
 34556 LD A,(32883)  ; Pick up the border colour for the current cavern from
                     ; #R32883
 34559 LD C,254      ; {Set the border colour
 34561 OUT (C),A     ; }
 34563 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 34566 OR A          ; Are we in demo mode?
 34567 JR Z,34574    ; If not, enter the main loop now
 34569 LD A,64       ; {Reset the game mode indicator at #R33882 to #b64 (we're
 34571 LD (33882),A  ; in demo mode)}
; This routine continues into the main loop at #R34574.

; Main loop
;
; The routine at #R34436 continues here.
; .
; The first thing to do is check whether there are any remaining lives to draw
; at the bottom of the screen.
@label=LOOP
c34574 LD A,(33879)  ; Pick up the number of lives remaining from #R33879
 34577 LD HL,20640   ; Set #REGhl to the display file address at which to draw
                     ; the first Willy sprite
 34580 OR A          ; Are there any lives remaining?
 34581 JR Z,34608    ; Jump if not
 34583 LD B,A        ; Initialise #REGb to the number of lives remaining
; The following loop draws the remaining lives at the bottom of the screen.
*34584 LD C,0        ; #REGc=0; this tells the sprite-drawing routine at
                     ; #R36852 to overwrite any existing graphics
 34586 PUSH HL       ; {Save #REGhl and #REGbc briefly
 34587 PUSH BC       ; }
 34588 LD A,(33883)  ; Pick up the in-game music note index from #R33883; this
                     ; will determine the animation frame for the Willy sprites
 34591 RLCA          ; {Now #REGa=#b0 (frame 0), #b32 (frame 1), #b64 (frame 2)
 34592 RLCA          ; or #b96 (frame 3)
 34593 RLCA          ;
 34594 AND 96        ; }
 34596 LD E,A        ; {Point #REGde at the corresponding Willy sprite (at
@ssub=LD D,33280/256
 34597 LD D,130      ; #R33280+#REGa)}
 34599 CALL 36852    ; Draw the Willy sprite on the screen
 34602 POP BC        ; {Restore #REGhl and #REGbc
 34603 POP HL        ; }
 34604 INC HL        ; {Move #REGhl along to the location at which to draw the
 34605 INC HL        ; next Willy sprite}
 34606 DJNZ 34584    ; Jump back to draw any remaining sprites
; Now draw a boot if cheat mode has been activated.
*34608 LD A,(33885)  ; Pick up the 6031769 key counter from #R33885
 34611 CP 7          ; Has 6031769 been keyed in yet?
 34613 JR NZ,34623   ; Jump if not
 34615 LD DE,47840   ; Point #REGde at the graphic data for the boot (at
                     ; #R47840)
 34618 LD C,0        ; #REGc=0 (overwrite mode)
 34620 CALL 36852    ; Draw the boot at the bottom of the screen next to the
                     ; remaining lives
; Next, prepare the screen and attribute buffers for drawing to the screen.
*34623 LD HL,24064   ; {Copy the contents of the attribute buffer at #R24064
 34626 LD DE,23552   ; (the attributes for the empty cavern) into the attribute
 34629 LD BC,512     ; buffer at #R23552
 34632 LDIR          ; }
 34634 LD HL,28672   ; {Copy the contents of the screen buffer at #R28672 (the
 34637 LD DE,24576   ; tiles for the empty cavern) into the screen buffer at
 34640 LD BC,4096    ; #R24576
 34643 LDIR          ; }
 34645 CALL 36111    ; Move the horizontal guardians in the current cavern
 34648 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 34651 OR A          ; Are we in demo mode?
 34652 CALL Z,35515  ; If not, move Willy
 34655 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 34658 OR A          ; Are we in demo mode?
 34659 CALL Z,37434  ; If not, check and set the attribute bytes for Willy's
                     ; sprite in the buffer at #R23552, and draw Willy to the
                     ; screen buffer at #R24576
 34662 CALL 36266    ; Draw the horizontal guardians in the current cavern
 34665 CALL 37125    ; Move the conveyor in the current cavern
 34668 CALL 36707    ; Draw the items in the current cavern and collect any
                     ; that Willy is touching
 34671 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34674 CP 4          ; Are we in #R49152(Eugene's Lair)?
 34676 CALL Z,36344  ; If so, move and draw Eugene
 34679 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34682 CP 13         ; Are we in #R58368(Skylab Landing Bay)?
 34684 JP Z,36469    ; If so, move and draw the Skylabs
 34687 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34690 CP 8          ; Are we in #R53248(Wacky Amoebatrons) or beyond?
 34692 CALL NC,36593 ; If so, move and draw the vertical guardians
 34695 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34698 CP 7          ; Are we in #R52224(Miner Willy meets the Kong Beast)?
 34700 CALL Z,37173  ; If so, move and draw the Kong Beast
 34703 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34706 CP 11         ; Are we in #R56320(Return of the Alien Kong Beast)?
 34708 CALL Z,37173  ; If so, move and draw the Kong Beast
 34711 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 34714 CP 18         ; Are we in #R63488(Solar Power Generator)?
 34716 CALL Z,36211  ; If so, move and draw the light beam
; This entry point is used by the routine at #R36469.
*34719 CALL 36805    ; Draw the portal, or move to the next cavern if Willy has
                     ; entered it
; This entry point is used by the routine at #R36101.
*34722 LD HL,24576   ; {Copy the contents of the screen buffer at #R24576 to
 34725 LD DE,16384   ; the display file
 34728 LD BC,4096    ;
 34731 LDIR          ; }
 34733 LD A,(33880)  ; Pick up the screen flash counter from #R33880
 34736 OR A          ; Is it zero?
 34737 JR Z,34760    ; Jump if so
 34739 DEC A         ; {Decrement the screen flash counter at #R33880
 34740 LD (33880),A  ; }
 34743 RLCA          ; {Move bits 0-2 into bits 3-5 and clear all the other
 34744 RLCA          ; bits
 34745 RLCA          ;
 34746 AND 56        ; }
 34748 LD HL,23552   ; {Set every attribute byte in the buffer at #R23552 to
 34751 LD DE,23553   ; this value
 34754 LD BC,511     ;
 34757 LD (HL),A     ;
 34758 LDIR          ; }
*34760 LD HL,23552   ; {Copy the contents of the attribute buffer at #R23552 to
 34763 LD DE,22528   ; the attribute file
 34766 LD BC,512     ;
 34769 LDIR          ; }
 34771 LD IX,33833   ; {Print the score (see #R33833) at (19,26)
 34775 LD DE,20602   ;
 34778 LD C,6        ;
 34780 CALL 37562    ; }
 34783 LD IX,33823   ; {Print the high score (see #R33823) at (19,11)
 34787 LD DE,20587   ;
 34790 LD C,6        ;
 34792 CALL 37562    ; }
 34795 CALL 35388    ; Decrease the air remaining in the current cavern
 34798 JP Z,35071    ; Jump if there's no air left
; Now check whether SHIFT and SPACE are being pressed.
@keep
 34801 LD BC,65278   ; {Read keys SHIFT-Z-X-C-V
 34804 IN A,(C)      ; }
 34806 LD E,A        ; Save the result in #REGe
 34807 LD B,127      ; {Read keys B-N-M-SS-SPACE
 34809 IN A,(C)      ; }
 34811 OR E          ; Combine the results
 34812 AND 1         ; Are SHIFT and SPACE being pressed?
 34814 JP Z,34252    ; If so, quit the game
; Now read the keys A, S, D, F and G (which pause the game).
 34817 LD B,253      ; {Read keys A-S-D-F-G
 34819 IN A,(C)      ; }
 34821 AND 31        ; {Are any of these keys being pressed?
 34823 CP 31         ; }
 34825 JR Z,34837    ; Jump if not
*34827 LD B,2        ; {Read every half-row of keys except A-S-D-F-G
 34829 IN A,(C)      ; }
 34831 AND 31        ; {Are any of these keys being pressed?
 34833 CP 31         ; }
 34835 JR Z,34827    ; Jump back if not (the game is still paused)
; Here we check whether Willy has had a fatal accident.
*34837 LD A,(32875)  ; Pick up the airborne status indicator from #R32875
 34840 CP 255        ; Has Willy landed after falling from too great a height,
                     ; or collided with a nasty or a guardian?
 34842 JP Z,35071    ; Jump if so
; Now read the keys H, J, K, L and ENTER (which toggle the in-game music).
 34845 LD B,191      ; Prepare #REGb for reading keys H-J-K-L-ENTER
 34847 LD HL,33884   ; Point #REGhl at the music flags at #R33884
 34850 IN A,(C)      ; Read keys H-J-K-L-ENTER
 34852 AND 31        ; {Are any of these keys being pressed?
 34854 CP 31         ; }
 34856 JR Z,34868    ; Jump if not
 34858 BIT 0,(HL)    ; Were any of these keys being pressed the last time we
                     ; checked?
 34860 JR NZ,34870   ; Jump if so
 34862 LD A,(HL)     ; {Set bit 0 (the keypress flag) and flip bit 1 (the
 34863 XOR 3         ; in-game music flag) at #R33884
 34865 LD (HL),A     ; }
 34866 JR 34870      ;
*34868 RES 0,(HL)    ; Reset bit 0 (the keypress flag) at #R33884
*34870 BIT 1,(HL)    ; Has the in-game music been switched off?
 34872 JR NZ,34911   ; Jump if so
; The next section of code plays a note of the in-game music.
; .
; #AUDIO(in-game-tune.wav)(#INCLUDE(InGameTune))
 34874 LD A,(33883)  ; {Increment the in-game music note index at #R33883
 34877 INC A         ;
 34878 LD (33883),A  ; }
 34881 AND 126       ; {Point #REGhl at the appropriate entry in the tune data
 34883 RRCA          ; table at #R34188
 34884 LD E,A        ;
 34885 LD D,0        ;
 34887 LD HL,34188   ;
 34890 ADD HL,DE     ; }
 34891 LD A,(32883)  ; Pick up the border colour for the current cavern from
                     ; #R32883
 34894 LD E,(HL)     ; Initialise the pitch delay counter in #REGe
 34895 LD BC,3       ; Initialise the duration delay counters in #REGb (0) and
                     ; #REGc (3)
@label=TM51
*34898 OUT (254),A   ; {Produce a note of the in-game music
@label=SEE37708
 34900 DEC E         ;
 34901 JR NZ,34906   ;
 34903 LD E,(HL)     ;
 34904 XOR 24        ;
@label=NOFLP6
*34906 DJNZ 34898    ;
 34908 DEC C         ;
 34909 JR NZ,34898   ; }
; If we're in demo mode, check the keyboard and joystick and return to the
; title screen if there's any input.
@label=NONOTE4
*34911 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 34914 OR A          ; Are we in demo mode?
 34915 JR Z,34948    ; Jump if not
 34917 DEC A         ; We're in demo mode; is it time to show the next cavern?
 34918 JP Z,35071    ; Jump if so
 34921 LD (33882),A  ; Update the game mode indicator at #R33882
 34924 LD BC,254     ; {Read every row of keys on the keyboard
 34927 IN A,(C)      ; }
 34929 AND 31        ; {Are any keys being pressed?
 34931 CP 31         ; }
 34933 JP NZ,34252   ; If so, return to the title screen
 34936 LD A,(33881)  ; Pick up the Kempston joystick indicator from #R33881
 34939 OR A          ; Is there a joystick connected?
 34940 JR Z,34948    ; Jump if not
 34942 IN A,(31)     ; Collect input from the joystick
 34944 OR A          ; Is the joystick being moved or the fire button being
                     ; pressed?
 34945 JP NZ,34252   ; If so, return to the title screen
; Here we check the teleport keys.
@label=NODEM1
@keep
*34948 LD BC,61438   ; {Read keys 6-7-8-9-0
 34951 IN A,(C)      ; }
 34953 BIT 4,A       ; Is '6' (the activator key) being pressed?
 34955 JP NZ,34984   ; Jump if not
 34958 LD A,(33885)  ; Pick up the 6031769 key counter from #R33885
 34961 CP 7          ; Has 6031769 been keyed in yet?
 34963 JP NZ,34984   ; Jump if not
 34966 LD B,247      ; {Read keys 1-2-3-4-5
 34968 IN A,(C)      ; }
 34970 CPL           ; {Keep only bits 0-4 and flip them
 34971 AND 31        ; }
 34973 CP 20         ; Is the result #b20 or greater?
 34975 JP NC,34984   ; Jump if so (this is not a cavern number)
 34978 LD (33799),A  ; Store the cavern number at #R33799
 34981 JP 34449      ; Teleport into the cavern
; Now check the 6031769 keys.
@label=CKCHEAT
*34984 LD A,(33885)  ; Pick up the 6031769 key counter from #R33885
 34987 CP 7          ; Has 6031769 been keyed in yet?
 34989 JP Z,34574    ; If so, jump back to the start of the main loop
 34992 RLCA          ; {Point #REGix at the corresponding entry in the 6031769
 34993 LD E,A        ; table at #R33888
 34994 LD D,0        ;
 34996 LD IX,33888   ;
 35000 ADD IX,DE     ; }
@keep
 35002 LD BC,63486   ; {Read keys 1-2-3-4-5
 35005 IN A,(C)      ; }
 35007 AND 31        ; Keep only bits 0-4
 35009 CP (IX+0)     ; Does this match the first byte of the entry in the
                     ; 6031769 table?
 35012 JR Z,35032    ; Jump if so
 35014 CP 31         ; Are any of the keys 1-2-3-4-5 being pressed?
 35016 JP Z,34574    ; If not, jump back to the start of the main loop
 35019 CP (IX-2)     ; Does the keyboard reading match the first byte of the
                     ; previous entry in the 6031769 table?
 35022 JP Z,34574    ; If so, jump back to the start of the main loop
 35025 XOR A         ; {Reset the 6031769 key counter at #R33885 to 0 (an
 35026 LD (33885),A  ; incorrect key is being pressed)}
 35029 JP 34574      ; Jump back to the start of the main loop
@label=CKNXCHT
*35032 LD B,239      ; {Read keys 6-7-8-9-0
 35034 IN A,(C)      ; }
 35036 AND 31        ; Keep only bits 0-4
 35038 CP (IX+1)     ; Does this match the second byte of the entry in the
                     ; 6031769 table?
 35041 JR Z,35061    ; If so, jump to increment the 6031769 key counter
 35043 CP 31         ; Are any of the keys 6-7-8-9-0 being pressed?
 35045 JP Z,34574    ; If not, jump back to the start of the main loop
 35048 CP (IX-1)     ; Does the keyboard reading match the second byte of the
                     ; previous entry in the 6031769 table?
 35051 JP Z,34574    ; If so, jump back to the start of the main loop
 35054 XOR A         ; {Reset the 6031769 key counter at #R33885 to 0 (an
 35055 LD (33885),A  ; incorrect key is being pressed)}
 35058 JP 34574      ; Jump back to the start of the main loop
@label=INCCHT
*35061 LD A,(33885)  ; {Increment the 6031769 key counter at #R33885 (the next
 35064 INC A         ; key in the sequence is being pressed)
 35065 LD (33885),A  ; }
 35068 JP 34574      ; Jump back to the start of the main loop
; The air in the cavern has run out, or Willy has had a fatal accident, or it's
; demo mode and it's time to show the next cavern.
@label=MANDEAD
*35071 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 35074 OR A          ; Is it demo mode?
 35075 JP NZ,36904   ; If so, move to the next cavern
 35078 LD A,71       ; #REGa=#b71 (INK 7: PAPER 0: BRIGHT 1)
; The following loop fills the top two thirds of the attribute file with a
; single value (#b71, #b70, #b69, #b68, #b67, #b66, #b65 or #b64) and makes a
; sound effect.
; .
; #AUDIO(die.wav)(#FOR(7,63,8,7)(d,[13*d+33]*(259-4*d),13*d+10895))
@label=LPDEAD1
*35080 LD HL,22528   ; {Fill the top two thirds of the attribute file with the
 35083 LD DE,22529   ; value in #REGa
 35086 LD BC,511     ;
 35089 LD (HL),A     ;
 35090 LDIR          ; }
 35092 LD E,A        ; Save the attribute byte (#b64-#b71) in #REGe for later
                     ; retrieval
 35093 CPL           ; {#REGd=63-8*(#REGe #S/AND/ 7); this value determines the
 35094 AND 7         ; pitch of the short note that will be played
 35096 RLCA          ;
 35097 RLCA          ;
 35098 RLCA          ;
 35099 OR 7          ;
 35101 LD D,A        ; }
 35102 LD C,E        ; {#REGc=8+32*(#REGe #S/AND/ 7); this value determines the
 35103 RRC C         ; duration of the short note that will be played
 35105 RRC C         ;
 35107 RRC C         ; }
 35109 OR 16         ; Set bit 4 of #REGa (for no apparent reason)
 35111 XOR A         ; Set #REGa=0 (this will make the border black)
@label=TM21
*35112 OUT (254),A   ; {Produce a short note whose pitch is determined by #REGd
 35114 XOR 24        ; and whose duration is determined by #REGc
 35116 LD B,D        ;
@label=TM22
*35117 DJNZ 35117    ;
 35119 DEC C         ;
 35120 JR NZ,35112   ; }
 35122 LD A,E        ; Restore the attribute byte (originally #b71) to #REGa
 35123 DEC A         ; Decrement it (effectively decrementing the INK colour)
 35124 CP 63         ; Have we used attribute value #b64 (INK 0) yet?
 35126 JR NZ,35080   ; If not, jump back to update the INK colour in the top
                     ; two thirds of the screen and make another sound effect
; Finally, check whether any lives remain.
 35128 LD HL,33879   ; {Pick up the number of lives remaining from #R33879
 35131 LD A,(HL)     ; }
 35132 OR A          ; Are there any lives remaining?
 35133 JP Z,35140    ; If not, display the game over sequence
 35136 DEC (HL)      ; Decrease the number of lives remaining by one
 35137 JP 34449      ; Jump back to reinitialise the current cavern

; Display the game over sequence
;
; Used by the routine at #R34574. First check whether we have a new high score.
@label=ENDGAM
c35140 LD HL,33823   ; Point #REGhl at the high score at #R33823
 35143 LD DE,33833   ; Point #REGde at the current score at #R33833
 35146 LD B,6        ; There are 6 digits to compare
@label=LPHGH
*35148 LD A,(DE)     ; Pick up a digit of the current score
 35149 CP (HL)       ; Compare it with the corresponding digit of the high
                     ; score
 35150 JP C,35171    ; Jump if it's less than the corresponding digit of the
                     ; high score
 35153 JP NZ,35160   ; Jump if it's greater than the corresponding digit of the
                     ; high score
 35156 INC HL        ; Point #REGhl at the next digit of the high score
 35157 INC DE        ; Point #REGde at the next digit of the current score
 35158 DJNZ 35148    ; Jump back to compare the next pair of digits
@label=NEWHGH
*35160 LD HL,33833   ; {Replace the high score with the current score
 35163 LD DE,33823   ;
 35166 LD BC,6       ;
 35169 LDIR          ; }
; Now prepare the screen for the game over sequence.
@label=FEET
*35171 LD HL,16384   ; {Clear the top two-thirds of the display file
 35174 LD DE,16385   ;
 35177 LD BC,4095    ;
 35180 LD (HL),0     ;
 35182 LDIR          ; }
 35184 XOR A         ; {Initialise the game status buffer variable at #R32988;
 35185 LD (32988),A  ; this variable will determine the distance of the boot
                     ; from the top of the screen}
 35188 LD DE,33344   ; {Draw Willy at (12,15)
 35191 LD HL,18575   ;
 35194 LD C,0        ;
 35196 CALL 36852    ; }
 35199 LD DE,46816   ; {Draw the plinth (see #R46816) underneath Willy at
 35202 LD HL,18639   ; (14,15)
 35205 LD C,0        ;
 35207 CALL 36852    ; }
; The following loop draws the boot's descent onto the plinth that supports
; Willy while producing a sound effect.
; .
; #AUDIO(game-over.wav)(#GAMEOVER)
@label=LOOPFT
*35210 LD A,(32988)  ; Pick up the distance variable from #R32988
 35213 LD C,A        ; {Point #REGbc at the corresponding entry in the screen
@ssub=LD B,33536/256
 35214 LD B,131      ; buffer address lookup table at #R33536}
 35216 LD A,(BC)     ; {Point #REGhl at the corresponding location in the
 35217 OR 15         ; display file
 35219 LD L,A        ;
 35220 INC BC        ;
 35221 LD A,(BC)     ;
 35222 SUB 32        ;
 35224 LD H,A        ; }
 35225 LD DE,47840   ; {Draw the boot (see #R47840) at this location, without
 35228 LD C,0        ; erasing the boot at the previous location; this leaves
 35230 CALL 36852    ; the portion of the boot sprite that's above the ankle in
                     ; place, and makes the boot appear as if it's at the end
                     ; of a long, extending trouser leg}
 35233 LD A,(32988)  ; Pick up the distance variable from #R32988
 35236 CPL           ; #REGa=#b255-#REGa
 35237 LD E,A        ; Store this value (#b63-#b255) in #REGe; it determines
                     ; the (rising) pitch of the sound effect that will be made
 35238 XOR A         ; #REGa=0 (black border)
 35239 LD BC,64      ; #REGc=#b64; this value determines the duration of the
                     ; sound effect
@label=TM111
*35242 OUT (254),A   ; {Produce a short note whose pitch is determined by #REGe
 35244 XOR 24        ;
 35246 LD B,E        ;
@label=TM112
*35247 DJNZ 35247    ;
 35249 DEC C         ;
 35250 JR NZ,35242   ; }
 35252 LD HL,22528   ; {Prepare #REGbc, #REGde and #REGhl for setting the
 35255 LD DE,22529   ; attribute bytes in the top two-thirds of the screen
 35258 LD BC,511     ; }
 35261 LD A,(32988)  ; Pick up the distance variable from #R32988
 35264 AND 12        ; Keep only bits 2 and 3
 35266 RLCA          ; Shift bits 2 and 3 into bits 3 and 4; these bits
                     ; determine the PAPER colour: 0, 1, 2 or 3
 35267 OR 71         ; Set bits 0-2 (INK 7) and 6 (BRIGHT 1)
 35269 LD (HL),A     ; {Copy this attribute value into the top two-thirds of
 35270 LDIR          ; the screen}
 35272 LD A,(32988)  ; {Add 4 to the distance variable at #R32988; this will
 35275 ADD A,4       ; move the boot sprite down two pixel rows
 35277 LD (32988),A  ; }
 35280 CP 196        ; Has the boot met the plinth yet?
 35282 JR NZ,35210   ; Jump back if not
; Now print the "Game Over" message, just to drive the point home.
 35284 LD IX,33871   ; {Print "Game" (see #R33871) at (6,10)
 35288 LD C,4        ;
 35290 LD DE,16586   ;
 35293 CALL 37562    ; }
 35296 LD IX,33875   ; {Print "Over" (see #R33875) at (6,18)
 35300 LD C,4        ;
 35302 LD DE,16594   ;
 35305 CALL 37562    ; }
 35308 LD BC,0       ; {Prepare the delay counters for the following loop; the
 35311 LD D,6        ; counter in #REGc will also determine the INK colours to
                     ; use for the "Game Over" message}
; The following loop makes the "Game Over" message glisten for about 1.57s.
@label=TM91
*35313 DJNZ 35313    ; Delay for about a millisecond
 35315 LD A,C        ; {Change the INK colour of the "G" in "Game" at (6,10)
 35316 AND 7         ;
 35318 OR 64         ;
 35320 LD (22730),A  ; }
 35323 INC A         ; {Change the INK colour of the "a" in "Game" at (6,11)
 35324 AND 7         ;
 35326 OR 64         ;
 35328 LD (22731),A  ; }
 35331 INC A         ; {Change the INK colour of the "m" in "Game" at (6,12)
 35332 AND 7         ;
 35334 OR 64         ;
 35336 LD (22732),A  ; }
 35339 INC A         ; {Change the INK colour of the "e" in "Game" at (6,13)
 35340 AND 7         ;
 35342 OR 64         ;
 35344 LD (22733),A  ; }
 35347 INC A         ; {Change the INK colour of the "O" in "Over" at (6,18)
 35348 AND 7         ;
 35350 OR 64         ;
 35352 LD (22738),A  ; }
 35355 INC A         ; {Change the INK colour of the "v" in "Over" at (6,19)
 35356 AND 7         ;
 35358 OR 64         ;
 35360 LD (22739),A  ; }
 35363 INC A         ; {Change the INK colour of the "e" in "Over" at (6,20)
 35364 AND 7         ;
 35366 OR 64         ;
 35368 LD (22740),A  ; }
 35371 INC A         ; {Change the INK colour of the "r" in "Over" at (6,21)
 35372 AND 7         ;
 35374 OR 64         ;
 35376 LD (22741),A  ; }
 35379 DEC C         ; Decrement the counter in #REGc
 35380 JR NZ,35313   ; Jump back unless it's zero
 35382 DEC D         ; Decrement the counter in #REGd (initially 6)
 35383 JR NZ,35313   ; Jump back unless it's zero
 35385 JP 34252      ; Display the title screen and play the theme tune

; Decrease the air remaining in the current cavern
;
; Used by the routines at #R34574, #R36211 and #R36904. Returns with the zero
; flag set if there is no air remaining.
@label=DECAIR
c35388 LD A,(32957)  ; {Update the game clock at #R32957
 35391 SUB 4         ;
 35393 LD (32957),A  ; }
 35396 CP 252        ; Was it just decreased from zero?
 35398 JR NZ,35413   ; Jump if not
 35400 LD A,(32956)  ; Pick up the value of the remaining air supply from
                     ; #R32956
 35403 CP 36         ; Has the air supply run out?
 35405 RET Z         ; Return (with the zero flag set) if so
 35406 DEC A         ; {Decrement the air supply at #R32956
 35407 LD (32956),A  ; }
 35410 LD A,(32957)  ; Pick up the value of the game clock at #R32957
*35413 AND 224       ; {#REGa=INT(#REGa/32); this value specifies how many
 35415 RLCA          ; pixels to draw from left to right in the cell at the
 35416 RLCA          ; right end of the air bar
 35417 RLCA          ; }
 35418 LD E,0        ; Initialise #REGe to 0 (all bits reset)
 35420 OR A          ; Do we need to draw any pixels in the cell at the right
                     ; end of the air bar?
 35421 JR Z,35430    ; Jump if not
 35423 LD B,A        ; Copy the number of pixels to draw (1-7) to #REGb
*35424 RRC E         ; {Set this many bits in #REGe (from bit 7 towards bit 0)
 35426 SET 7,E       ;
 35428 DJNZ 35424    ; }
*35430 LD A,(32956)  ; Pick up the value of the remaining air supply from
                     ; #R32956
 35433 LD L,A        ; {Set #REGhl to the display file address at which to draw
 35434 LD H,82       ; the top row of pixels in the cell at the right end of
                     ; the air bar}
 35436 LD B,4        ; There are four rows of pixels to draw
*35438 LD (HL),E     ; {Draw the four rows of pixels at the right end of the
 35439 INC H         ; air bar
 35440 DJNZ 35438    ; }
 35442 XOR A         ; {Reset the zero flag to indicate that there is still
 35443 INC A         ; some air remaining; these instructions are redundant,
                     ; since the zero flag is already reset at this point}
 35444 RET           ;

; Draw the current cavern to the screen buffer at #N28672
;
; Used by the routine at #R34436.
@label=DRAWSHEET
c35445 LD IX,24064   ; Point #REGix at the first byte of the attribute buffer
                     ; at #R24064
 35449 LD A,112      ; {Set the operand of the '#S/LD D/,n' instruction at
@ssub=LD (35483+1),A
 35451 LD (35484),A  ; #R35483 (below) to #n112}
 35454 CALL 35466    ; Draw the tiles for the top half of the cavern to the
                     ; screen buffer at #R28672
 35457 LD IX,24320   ; Point #REGix at the 256th byte of the attribute buffer
                     ; at #R24064 in preparation for drawing the bottom half of
                     ; the cavern; this instruction is redundant, since #REGix
                     ; already holds #N24320
 35461 LD A,120      ; {Set the operand of the '#S/LD D/,n' instruction at
@ssub=LD (35483+1),A
 35463 LD (35484),A  ; #R35483 (below) to #n120}
*35466 LD C,0        ; #REGc will count 256 tiles
; The following loop draws 256 tiles (for either the top half or the bottom
; half of the cavern) to the screen buffer at #R28672.
*35468 LD E,C        ; #REGe holds the LSB of the screen buffer address
 35469 LD A,(IX+0)   ; Pick up an attribute byte from the buffer at #R24064;
                     ; this identifies the type of tile to draw
 35472 LD HL,32800   ; {Move #REGhl through the attribute bytes and graphic
 35475 LD BC,72      ; data of the background, floor, crumbling floor, wall,
 35478 CPIR          ; conveyor and nasty tiles starting at #R32800 until we
                     ; find a byte that matches the attribute byte of the tile
                     ; to be drawn}
 35480 LD C,E        ; Restore the value of the tile counter in #REGc
 35481 LD B,8        ; There are eight bytes in the tile
@label=SBMSB
 35483 LD D,0        ; This instruction is set to either '#S/LD D/,#n112' or
                     ; '#S/LD D/,#n120' above; now #REGde holds the appropriate
                     ; address in the screen buffer at #R28672
*35485 LD A,(HL)     ; {Copy the tile graphic data to the screen buffer at
 35486 LD (DE),A     ; #R28672
 35487 INC HL        ;
 35488 INC D         ;
 35489 DJNZ 35485    ; }
 35491 INC IX        ; Move #REGix along to the next byte in the attribute
                     ; buffer
 35493 INC C         ; Have we drawn 256 tiles yet?
 35494 JP NZ,35468   ; If not, jump back to draw the next one
; The empty cavern has been drawn to the screen buffer at #R28672. If we're in
; #R64512(The Final Barrier), however, there is further work to do.
 35497 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 35500 CP 19         ; Is it #R64512(The Final Barrier)?
 35502 RET NZ        ; Return if not
 35503 LD HL,40960   ; {Copy the graphic data from #R40960 to the top half of
 35506 LD DE,28672   ; the screen buffer at #R28672
 35509 LD BC,2048    ;
 35512 LDIR          ; }
 35514 RET           ;

; Move Willy (1)
;
; Used by the routine at #R34574. This routine deals with Willy if he's jumping
; or falling.
@label=MOVEWILLY
c35515 LD A,(32875)  ; Pick up the airborne status indicator from #R32875
 35518 CP 1          ; Is Willy jumping?
 35520 JR NZ,35600   ; Jump if not
; Willy is currently jumping.
; .
; #AUDIO(jumping.wav)(#FOR1,18,,3(j,[104*(#IF(j>8)(j-8,8-j))+137]*31,280000))
 35522 LD A,(32878)  ; Pick up the jumping animation counter (0-17) from
                     ; #R32878
 35525 RES 0,A       ; {Now -8<=#REGa<=8 (and #REGa is even)
 35527 SUB 8         ; }
 35529 LD HL,32872   ; {Adjust Willy's y-coordinate at #R32872 depending on
 35532 ADD A,(HL)    ; where Willy is in the jump
 35533 LD (HL),A     ; }
 35534 CALL 35714    ; Adjust Willy's attribute buffer location at #R32876
                     ; depending on his y-coordinate
 35537 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 35540 CP (HL)       ; Is the top-left cell of Willy's sprite overlapping a
                     ; wall tile?
 35541 JP Z,35746    ; Jump if so
 35544 INC HL        ; Point #REGhl at the top-right cell occupied by Willy's
                     ; sprite
 35545 CP (HL)       ; Is the top-right cell of Willy's sprite overlapping a
                     ; wall tile?
 35546 JP Z,35746    ; Jump if so
 35549 LD A,(32878)  ; {Increment the jumping animation counter at #R32878
 35552 INC A         ;
 35553 LD (32878),A  ; }
 35556 SUB 8         ; #REGa=J-8, where J (1-18) is the new value of the
                     ; jumping animation counter
 35558 JP P,35563    ; Jump if J>=8
 35561 NEG           ; #REGa=8-J (1<=J<=7, 1<=#REGa<=7)
*35563 INC A         ; #REGa=1+ABS(J-8)
 35564 RLCA          ; {#REGd=8*(1+ABS(J-8)); this value determines the pitch
 35565 RLCA          ; of the jumping sound effect (rising as Willy rises,
 35566 RLCA          ; falling as Willy falls)
 35567 LD D,A        ; }
 35568 LD C,32       ; This value determines the duration of the jumping sound
                     ; effect
 35570 LD A,(32883)  ; Pick up the border colour for the current cavern from
                     ; #R32883
*35573 OUT (254),A   ; {Make a jumping sound effect
 35575 XOR 24        ;
 35577 LD B,D        ;
*35578 DJNZ 35578    ;
 35580 DEC C         ;
 35581 JR NZ,35573   ; }
 35583 LD A,(32878)  ; Pick up the jumping animation counter (1-18) from
                     ; #R32878
 35586 CP 18         ; Has Willy reached the end of the jump?
 35588 JP Z,35734    ; Jump if so
 35591 CP 16         ; Is the jumping animation counter now 16?
 35593 JR Z,35600    ; Jump if so
 35595 CP 13         ; Is the jumping animation counter now 13?
 35597 JP NZ,35971   ; Jump if not
; If we get here, then Willy is standing on the floor, or he's falling, or his
; jumping animation counter is 13 (at which point Willy is on his way down and
; is exactly two cell-heights above where he started the jump) or 16 (at which
; point Willy is on his way down and is exactly one cell-height above where he
; started the jump).
*35600 LD A,(32872)  ; Pick up Willy's y-coordinate from #R32872
 35603 AND 15        ; Does Willy's sprite occupy six cells at the moment?
 35605 JR NZ,35665   ; Jump if so
 35607 LD HL,(32876) ; Pick up Willy's attribute buffer coordinates from
                     ; #R32876
 35610 LD DE,64      ; {Point #REGhl at the left-hand cell below Willy's sprite
 35613 ADD HL,DE     ; }
 35614 LD A,(32818)  ; Pick up the attribute byte of the crumbling floor tile
                     ; for the current cavern from #R32818
 35617 CP (HL)       ; Does the left-hand cell below Willy's sprite contain a
                     ; crumbling floor tile?
 35618 CALL Z,35770  ; If so, make it crumble
 35621 LD A,(32845)  ; Pick up the attribute byte of the first nasty tile for
                     ; the current cavern from #R32845
 35624 CP (HL)       ; Does the left-hand cell below Willy's sprite contain a
                     ; nasty tile?
 35625 JR Z,35665    ; Jump if so
 35627 LD A,(32854)  ; Pick up the attribute byte of the second nasty tile for
                     ; the current cavern from #R32854
 35630 CP (HL)       ; Does the left-hand cell below Willy's sprite contain a
                     ; nasty tile?
 35631 JR Z,35665    ; Jump if so
 35633 INC HL        ; Point #REGhl at the right-hand cell below Willy's sprite
 35634 LD A,(32818)  ; Pick up the attribute byte of the crumbling floor tile
                     ; for the current cavern from #R32818
 35637 CP (HL)       ; Does the right-hand cell below Willy's sprite contain a
                     ; crumbling floor tile?
 35638 CALL Z,35770  ; If so, make it crumble
 35641 LD A,(32845)  ; Pick up the attribute byte of the first nasty tile for
                     ; the current cavern from #R32845
 35644 CP (HL)       ; Does the right-hand cell below Willy's sprite contain a
                     ; nasty tile?
 35645 JR Z,35665    ; Jump if so
 35647 LD A,(32854)  ; Pick up the attribute byte of the second nasty tile for
                     ; the current cavern from #R32854
 35650 CP (HL)       ; Does the right-hand cell below Willy's sprite contain a
                     ; nasty tile?
 35651 JR Z,35665    ; Jump if so
 35653 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 35656 CP (HL)       ; Set the zero flag if the right-hand cell below Willy's
                     ; sprite is empty
 35657 DEC HL        ; Point #REGhl at the left-hand cell below Willy's sprite
 35658 JP NZ,35805   ; Jump if the right-hand cell below Willy's sprite is not
                     ; empty
 35661 CP (HL)       ; Is the left-hand cell below Willy's sprite empty?
 35662 JP NZ,35805   ; Jump if not
*35665 LD A,(32875)  ; Pick up the airborne status indicator from #R32875
 35668 CP 1          ; Is Willy jumping?
 35670 JP Z,35971    ; Jump if so
; If we get here, then Willy is either in the process of falling or just about
; to start falling.
; .
; #AUDIO(falling.wav)(#FOR(3,28,1,3)(a,[(208*a+33)%3315]*31,280000))
 35673 LD HL,32874   ; {Reset bit 1 at #R32874: Willy is not moving left or
 35676 RES 1,(HL)    ; right}
 35678 OR A          ; Is Willy already falling?
 35679 JP Z,35740    ; Jump if not
 35682 INC A         ; {Increment the airborne status indicator at #R32875
 35683 LD (32875),A  ; }
 35686 RLCA          ; {The value of #REGd determines the pitch of the falling
 35687 RLCA          ; sound effect
 35688 RLCA          ;
 35689 RLCA          ;
 35690 LD D,A        ; }
 35691 LD C,32       ; This value determines the duration of the falling sound
                     ; effect
 35693 LD A,(32883)  ; Pick up the border colour for the current cavern from
                     ; #R32883
*35696 OUT (254),A   ; {Make a falling sound effect
 35698 XOR 24        ;
 35700 LD B,D        ;
*35701 DJNZ 35701    ;
 35703 DEC C         ;
 35704 JR NZ,35696   ; }
 35706 LD A,(32872)  ; {Add 8 to Willy's y-coordinate at #R32872; this moves
 35709 ADD A,8       ; Willy downwards by 4 pixels
 35711 LD (32872),A  ; }
*35714 AND 240       ; {#REGl=16*Y, where Y is Willy's screen y-coordinate
 35716 LD L,A        ; (0-14)}
 35717 XOR A         ; Clear #REGa and the carry flag
 35718 RL L          ; Now #REGl=32*(Y-8*INT(Y/8)), and the carry flag is set
                     ; if Willy is in the lower half of the cavern (Y>=8)
 35720 ADC A,92      ; {#REGh=#b92 or #b93 (MSB of the address of Willy's
 35722 LD H,A        ; location in the attribute buffer)}
 35723 LD A,(32876)  ; {Pick up Willy's screen x-coordinate (1-29) from bits
 35726 AND 31        ; 0-4 at #R32876}
 35728 OR L          ; {Now #REGl holds the LSB of Willy's attribute buffer
 35729 LD L,A        ; address}
 35730 LD (32876),HL ; Store Willy's updated attribute buffer location at
                     ; #R32876
 35733 RET           ;
; Willy has just finished a jump.
*35734 LD A,6        ; {Set the airborne status indicator at #R32875 to #b6:
 35736 LD (32875),A  ; Willy will continue to fall unless he's landed on a wall
                     ; or floor block}
 35739 RET           ;
; Willy has just started falling.
*35740 LD A,2        ; {Set the airborne status indicator at #R32875 to #b2
 35742 LD (32875),A  ; }
 35745 RET           ;
; The top-left or top-right cell of Willy's sprite is overlapping a wall tile.
*35746 LD A,(32872)  ; {Adjust Willy's y-coordinate at #R32872 so that the top
 35749 ADD A,16      ; row of cells of his sprite is just below the wall tile
 35751 AND 240       ;
 35753 LD (32872),A  ; }
 35756 CALL 35714    ; Adjust Willy's attribute buffer location at #R32876 to
                     ; account for this new y-coordinate
 35759 LD A,2        ; {Set the airborne status indicator at #R32875 to #b2:
 35761 LD (32875),A  ; Willy has started falling}
 35764 LD HL,32874   ; {Reset bit 1 at #R32874: Willy is not moving left or
 35767 RES 1,(HL)    ; right}
 35769 RET           ;

; Animate a crumbling floor tile in the current cavern
;
; Used by the routine at #R35515.
;
; HL Address of the crumbling floor tile's location in the attribute buffer at
; .  #R23552
@label=CRUMBLE
c35770 LD C,L        ; {Point #REGbc at the bottom row of pixels of the
 35771 LD A,H        ; crumbling floor tile in the screen buffer at #R28672
 35772 ADD A,27      ;
 35774 OR 7          ;
 35776 LD B,A        ; }
*35777 DEC B         ; {Collect the pixels from the row above in #REGa
 35778 LD A,(BC)     ; }
 35779 INC B         ; {Copy these pixels into the row below it
 35780 LD (BC),A     ; }
 35781 DEC B         ; Point #REGbc at the next row of pixels up
 35782 LD A,B        ; {Have we dealt with the bottom seven pixel rows of the
 35783 AND 7         ; crumbling floor tile yet?}
 35785 JR NZ,35777   ; If not, jump back to deal with the next one up
 35787 XOR A         ; {Clear the top row of pixels in the crumbling floor tile
 35788 LD (BC),A     ; }
 35789 LD A,B        ; {Point #REGbc at the bottom row of pixels in the
 35790 ADD A,7       ; crumbling floor tile
 35792 LD B,A        ; }
 35793 LD A,(BC)     ; Pick up the bottom row of pixels in #REGa
 35794 OR A          ; Is the bottom row clear?
 35795 RET NZ        ; Return if not
; The bottom row of pixels in the crumbling floor tile is clear. Time to put a
; background tile in its place.
 35796 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 35799 INC H         ; {Set #REGhl to the address of the crumbling floor tile's
 35800 INC H         ; location in the attribute buffer at #R24064}
 35801 LD (HL),A     ; Set the attribute at this location to that of the
                     ; background tile
 35802 DEC H         ; {Set #REGhl back to the address of the crumbling floor
 35803 DEC H         ; tile's location in the attribute buffer at #R23552}
 35804 RET           ;

; Move Willy (2)
;
; Used by the routine at #R35515. This routine checks the keyboard and
; joystick, and moves Willy left or right if necessary.
;
; HL Attribute buffer address of the left-hand cell below Willy's sprite
@label=MOVEWILLY2
c35805 LD A,(32875)  ; Pick up the airborne status indicator from #R32875
 35808 CP 12         ; Has Willy just landed after falling from too great a
                     ; height?
 35810 JP NC,36102   ; If so, kill him
 35813 LD E,255      ; Initialise #REGe to #b255 (all bits set); it will be
                     ; used to hold keyboard and joystick readings
 35815 XOR A         ; {Reset the airborne status indicator at #R32875 (Willy
 35816 LD (32875),A  ; has landed safely)}
 35819 LD A,(32836)  ; Pick up the attribute byte of the conveyor tile for the
                     ; current cavern from #R32836
 35822 CP (HL)       ; Does the attribute byte of the left-hand cell below
                     ; Willy's sprite match that of the conveyor tile?
 35823 JR Z,35829    ; Jump if so
 35825 INC HL        ; Point #REGhl at the right-hand cell below Willy's sprite
 35826 CP (HL)       ; Does the attribute byte of the right-hand cell below
                     ; Willy's sprite match that of the conveyor tile?
 35827 JR NZ,35835   ; Jump if not
*35829 LD A,(32879)  ; Pick up the direction byte of the conveyor definition
                     ; from #R32879 (0=left, 1=right)
 35832 SUB 3         ; {Now #REGe=#b253 (bit 1 reset) if the conveyor is moving
 35834 LD E,A        ; left, or #b254 (bit 0 reset) if it's moving right}
@keep
*35835 LD BC,57342   ; {Read keys P-O-I-U-Y (right, left, right, left, right)
 35838 IN A,(C)      ; into bits 0-4 of #REGa}
 35840 AND 31        ; {Set bit 5 and reset bits 6 and 7
 35842 OR 32         ; }
 35844 AND E         ; Reset bit 0 if the conveyor is moving right, or bit 1 if
                     ; it's moving left
 35845 LD E,A        ; Save the result in #REGe
@keep
 35846 LD BC,64510   ; {Read keys Q-W-E-R-T (left, right, left, right, left)
 35849 IN A,(C)      ; into bits 0-4 of #REGa}
 35851 AND 31        ; {Keep only bits 0-4, shift them into bits 1-5, and set
 35853 RLC A         ; bit 0
 35855 OR 1          ; }
 35857 AND E         ; {Merge this keyboard reading into bits 1-5 of #REGe
 35858 LD E,A        ; }
 35859 LD B,247      ; {Read keys 1-2-3-4-5 ('5' is left) into bits 0-4 of
 35861 IN A,(C)      ; #REGa}
 35863 RRCA          ; {Rotate the result right and set bits 0-2 and 4-7; this
 35864 OR 247        ; ignores every key except '5' (left)}
 35866 AND E         ; {Merge this reading of the '5' key into bit 3 of #REGe
 35867 LD E,A        ; }
 35868 LD B,239      ; {Read keys 0-9-8-7-6 ('8' is right) into bits 0-4 of
 35870 IN A,(C)      ; #REGa}
 35872 OR 251        ; Set bits 0, 1 and 3-7; this ignores every key except '8'
                     ; (right)
 35874 AND E         ; {Merge this reading of the '8' key into bit 2 of #REGe
 35875 LD E,A        ; }
 35876 LD A,(33881)  ; Collect the Kempston joystick indicator from #R33881
 35879 OR A          ; Is the joystick connected?
 35880 JR Z,35892    ; Jump if not
 35882 LD BC,31      ; {Collect input from the joystick
 35885 IN A,(C)      ; }
 35887 AND 3         ; {Keep only bits 0 (right) and 1 (left) and flip them
 35889 CPL           ; }
 35890 AND E         ; {Merge this reading of the joystick right and left
 35891 LD E,A        ; buttons into bits 0 and 1 of #REGe}
; At this point, bits 0-5 in #REGe indicate the direction in which Willy is
; being moved or trying to move. If bit 0, 2 or 4 is reset, Willy is being
; moved or trying to move right; if bit 1, 3 or 5 is reset, Willy is being
; moved or trying to move left.
*35892 LD C,0        ; Initialise #REGc to 0 (no movement)
 35894 LD A,E        ; Copy the movement bits into #REGa
 35895 AND 42        ; Keep only bits 1, 3 and 5 (the 'left' bits)
 35897 CP 42         ; Are any of these bits reset?
 35899 JR Z,35903    ; Jump if not
 35901 LD C,4        ; Set bit 2 of #REGc: Willy is moving left
*35903 LD A,E        ; Copy the movement bits into #REGa
 35904 AND 21        ; Keep only bits 0, 2 and 4 (the 'right' bits)
 35906 CP 21         ; Are any of these bits reset?
 35908 JR Z,35912    ; Jump if not
 35910 SET 3,C       ; Set bit 3 of #REGc: Willy is moving right
*35912 LD A,(32874)  ; Pick up Willy's direction and movement flags from
                     ; #R32874
 35915 ADD A,C       ; {Point #REGhl at the entry in the left-right movement
 35916 LD C,A        ; table at #R33800 that corresponds to the direction Willy
 35917 LD B,0        ; is facing, and the direction in which he is being moved
 35919 LD HL,33800   ; or trying to move
 35922 ADD HL,BC     ; }
 35923 LD A,(HL)     ; {Update Willy's direction and movement flags at #R32874
 35924 LD (32874),A  ; with the entry from the left-right movement table}
; That is left-right movement taken care of. Now check the jump keys.
 35927 LD BC,32510   ; {Read keys SHIFT-Z-X-C-V and B-N-M-SS-SPACE
 35930 IN A,(C)      ; }
 35932 AND 31        ; {Are any of these keys being pressed?
 35934 CP 31         ; }
 35936 JR NZ,35963   ; Jump if so
 35938 LD B,239      ; {Read keys 0-9-8-7-6 into bits 0-4 of #REGa
 35940 IN A,(C)      ; }
 35942 AND 9         ; Keep only bits 0 (the '0' key) and 3 (the '7' key)
 35944 CP 9          ; Is '0' or '7' being pressed?
 35946 JR NZ,35963   ; Jump if so
 35948 LD A,(33881)  ; Collect the Kempston joystick indicator from #R33881
 35951 OR A          ; Is the joystick connected?
 35952 JR Z,35971    ; Jump if not
 35954 LD BC,31      ; {Collect input from the joystick
 35957 IN A,(C)      ; }
 35959 BIT 4,A       ; Is the fire button being pressed?
 35961 JR Z,35971    ; Jump if not
; A jump key or the fire button is being pressed. Time to make Willy jump.
*35963 XOR A         ; {Initialise the jumping animation counter at #R32878
 35964 LD (32878),A  ; }
 35967 INC A         ; {Set the airborne status indicator at #R32875 to 1:
 35968 LD (32875),A  ; Willy is jumping}
; This entry point is used by the routine at #R35515.
*35971 LD A,(32874)  ; Pick up Willy's direction and movement flags from
                     ; #R32874
 35974 AND 2         ; Is Willy moving?
 35976 RET Z         ; Return if not
 35977 LD A,(32874)  ; Pick up Willy's direction and movement flags from
                     ; #R32874
 35980 AND 1         ; Is Willy facing right?
 35982 JP Z,36042    ; Jump if so
; Willy is moving left.
 35985 LD A,(32873)  ; Pick up Willy's animation frame from #R32873
 35988 OR A          ; Is it 0?
 35989 JR Z,35996    ; If so, jump to move Willy's sprite left across a cell
                     ; boundary
 35991 DEC A         ; {Decrement Willy's animation frame at #R32873
 35992 LD (32873),A  ; }
 35995 RET           ;
; Willy's sprite is moving left across a cell boundary. In the comments that
; follow, (x,y) refers to the coordinates of the top-left cell currently
; occupied by Willy's sprite.
*35996 LD HL,(32876) ; Collect Willy's attribute buffer coordinates from
                     ; #R32876
 35999 DEC HL        ; {Point #REGhl at the cell at (x-1,y+1)
 36000 LD DE,32      ;
 36003 ADD HL,DE     ; }
 36004 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36007 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36008 RET Z         ; Return if so without moving Willy (his path is blocked)
 36009 LD A,(32872)  ; Pick up Willy's y-coordinate from #R32872
 36012 AND 15        ; Does Willy's sprite currently occupy only two rows of
                     ; cells?
 36014 JR Z,36025    ; Jump if so
 36016 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36019 ADD HL,DE     ; Point #REGhl at the cell at (x-1,y+2)
 36020 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36021 RET Z         ; Return if so without moving Willy (his path is blocked)
 36022 OR A          ; Clear the carry flag for subtraction
 36023 SBC HL,DE     ; Point #REGhl at the cell at (x-1,y+1)
*36025 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36028 OR A          ; Clear the carry flag for subtraction
 36029 SBC HL,DE     ; Point #REGhl at the cell at (x-1,y)
 36031 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36032 RET Z         ; Return if so without moving Willy (his path is blocked)
 36033 LD (32876),HL ; Save Willy's new attribute buffer coordinates (in
                     ; #REGhl) at #R32876
 36036 LD A,3        ; {Change Willy's animation frame at #R32873 from 0 to 3
 36038 LD (32873),A  ; }
 36041 RET           ;
; Willy is moving right.
*36042 LD A,(32873)  ; Pick up Willy's animation frame from #R32873
 36045 CP 3          ; Is it 3?
 36047 JR Z,36054    ; If so, jump to move Willy's sprite right across a cell
                     ; boundary
 36049 INC A         ; {Increment Willy's animation frame at #R32873
 36050 LD (32873),A  ; }
 36053 RET           ;
; Willy's sprite is moving right across a cell boundary. In the comments that
; follow, (x,y) refers to the coordinates of the top-left cell currently
; occupied by Willy's sprite.
*36054 LD HL,(32876) ; Collect Willy's attribute buffer coordinates from
                     ; #R32876
 36057 INC HL        ; {Point #REGhl at the cell at (x+2,y)
 36058 INC HL        ; }
 36059 LD DE,32      ; Prepare #REGde for addition
 36062 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36065 ADD HL,DE     ; Point #REGhl at the cell at (x+2,y+1)
 36066 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36067 RET Z         ; Return if so without moving Willy (his path is blocked)
 36068 LD A,(32872)  ; Pick up Willy's y-coordinate from #R32872
 36071 AND 15        ; Does Willy's sprite currently occupy only two rows of
                     ; cells?
 36073 JR Z,36084    ; Jump if so
 36075 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36078 ADD HL,DE     ; Point #REGhl at the cell at (x+2,y+2)
 36079 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36080 RET Z         ; Return if so without moving Willy (his path is blocked)
 36081 OR A          ; Clear the carry flag for subtraction
 36082 SBC HL,DE     ; Point #REGhl at the cell at (x+2,y+1)
*36084 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; current cavern from #R32827
 36087 OR A          ; Clear the carry flag for subtraction
 36088 SBC HL,DE     ; Point #REGhl at the cell at (x+2,y)
 36090 CP (HL)       ; Is there a wall tile in the cell pointed to by #REGhl?
 36091 RET Z         ; Return if so without moving Willy (his path is blocked)
 36092 DEC HL        ; Point #REGhl at the cell at (x+1,y)
 36093 LD (32876),HL ; Save Willy's new attribute buffer coordinates (in
                     ; #REGhl) at #R32876
 36096 XOR A         ; {Change Willy's animation frame at #R32873 from 3 to 0
 36097 LD (32873),A  ; }
 36100 RET           ;

; Kill Willy
;
; Used by the routine at #R37471 when Willy hits a nasty.
@label=KILLWILLY
c36101 POP HL        ; Drop the return address from the stack
; This entry point is used by the routines at #R35805 (when Willy lands after
; falling from too great a height), #R36266 (when Willy collides with a
; horizontal guardian), #R36344 (when Willy collides with Eugene), #R36593
; (when Willy collides with a vertical guardian) and #R37173 (when Willy
; collides with the Kong Beast).
*36102 POP HL        ; Drop the return address from the stack
; This entry point is used by the routine at #R36469 when a Skylab falls on
; Willy.
*36103 LD A,255      ; {Set the airborne status indicator at #R32875 to #b255
 36105 LD (32875),A  ; (meaning Willy has had a fatal accident)}
 36108 JP 34722      ; Jump back into the main loop

; Move the horizontal guardians in the current cavern
;
; Used by the routine at #R34574.
@label=MOVEHG
c36111 LD IY,32958   ; Point #REGiy at the first byte of the first horizontal
                     ; guardian definition at #R32958
 36115 LD DE,7       ; Prepare #REGde for addition (there are 7 bytes in a
                     ; guardian definition)
; The guardian-moving loop begins here.
*36118 LD A,(IY+0)   ; Pick up the first byte of the guardian definition
 36121 CP 255        ; Have we dealt with all the guardians yet?
 36123 RET Z         ; Return if so
 36124 OR A          ; Is this guardian definition blank?
 36125 JR Z,36207    ; If so, skip it and consider the next one
 36127 LD A,(32957)  ; Pick up the value of the game clock at #R32957
 36130 AND 4         ; {Move bit 2 (which is toggled on each pass through the
 36132 RRCA          ; main loop) to bit 7 and clear all the other bits
 36133 RRCA          ;
 36134 RRCA          ; }
 36135 AND (IY+0)    ; Combine this bit with bit 7 of the first byte of the
                     ; guardian definition, which specifies the guardian's
                     ; animation speed: 0=normal, 1=slow
 36138 JR NZ,36207   ; Jump to consider the next guardian if this one is not
                     ; due to be moved on this pass
; The guardian will be moved on this pass.
 36140 LD A,(IY+4)   ; Pick up the current animation frame (0-7)
 36143 CP 3          ; Is it 3 (the terminal frame for a guardian moving
                     ; right)?
 36145 JR Z,36163    ; Jump if so to move the guardian right across a cell
                     ; boundary or turn it round
 36147 CP 4          ; Is the current animation frame 4 (the terminal frame for
                     ; a guardian moving left)?
 36149 JR Z,36186    ; Jump if so to move the guardian left across a cell
                     ; boundary or turn it round
 36151 JR NC,36158   ; Jump if the animation frame is 5, 6 or 7
 36153 INC (IY+4)    ; Increment the animation frame (this guardian is moving
                     ; right)
 36156 JR 36207      ; Jump forward to consider the next guardian
*36158 DEC (IY+4)    ; Decrement the animation frame (this guardian is moving
                     ; left)
 36161 JR 36207      ; Jump forward to consider the next guardian
*36163 LD A,(IY+1)   ; Pick up the LSB of the address of the guardian's
                     ; location in the attribute buffer at #R23552
 36166 CP (IY+6)     ; Has the guardian reached the rightmost point in its
                     ; path?
 36169 JR NZ,36177   ; Jump if not
 36171 LD (IY+4),7   ; Set the animation frame to 7 (turning the guardian round
                     ; to face left)
 36175 JR 36207      ; Jump forward to consider the next guardian
*36177 LD (IY+4),0   ; Set the animation frame to 0 (the initial frame for a
                     ; guardian moving right)
 36181 INC (IY+1)    ; Increment the guardian's x-coordinate (moving it right
                     ; across a cell boundary)
 36184 JR 36207      ; Jump forward to consider the next guardian
*36186 LD A,(IY+1)   ; Pick up the LSB of the address of the guardian's
                     ; location in the attribute buffer at #R23552
 36189 CP (IY+5)     ; Has the guardian reached the leftmost point in its path?
 36192 JR NZ,36200   ; Jump if not
 36194 LD (IY+4),0   ; Set the animation frame to 0 (turning the guardian round
                     ; to face right)
 36198 JR 36207      ; Jump forward to consider the next guardian
*36200 LD (IY+4),7   ; Set the animation frame to 7 (the initial frame for a
                     ; guardian moving left)
 36204 DEC (IY+1)    ; Decrement the guardian's x-coordinate (moving it left
                     ; across a cell boundary)
; The current guardian definition has been dealt with. Time for the next one.
*36207 ADD IY,DE     ; Point #REGiy at the first byte of the next horizontal
                     ; guardian definition
 36209 JR 36118      ; Jump back to deal with the next horizontal guardian

; Move and draw the light beam in Solar Power Generator
;
; Used by the routine at #R34574.
@label=LIGHTBEAM
c36211 LD HL,23575   ; Point #REGhl at the cell at (0,23) in the attribute
                     ; buffer at #R23552 (the source of the light beam)
 36214 LD DE,32      ; Prepare #REGde for addition (the beam travels vertically
                     ; downwards to start with)
; The beam-drawing loop begins here.
*36217 LD A,(32809)  ; Pick up the attribute byte of the floor tile for the
                     ; cavern from #R32809
 36220 CP (HL)       ; Does #REGhl point at a floor tile?
 36221 RET Z         ; Return if so (the light beam stops here)
 36222 LD A,(32827)  ; Pick up the attribute byte of the wall tile for the
                     ; cavern from #R32827
 36225 CP (HL)       ; Does #REGhl point at a wall tile?
 36226 RET Z         ; Return if so (the light beam stops here)
 36227 LD A,39       ; #REGa=#b39 (INK 7: PAPER 4)
 36229 CP (HL)       ; Does #REGhl point at a tile with this attribute value?
 36230 JR NZ,36248   ; Jump if not (the light beam is not touching Willy)
 36232 EXX           ; Switch to the shadow registers briefly (to preserve
                     ; #REGde and #REGhl)
 36233 CALL 35388    ; {Decrease the air supply by four units
 36236 CALL 35388    ;
 36239 CALL 35388    ;
 36242 CALL 35388    ; }
 36245 EXX           ; Switch back to the normal registers (restoring #REGde
                     ; and #REGhl)
 36246 JR 36261      ; Jump forward to draw the light beam over Willy
*36248 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the cavern from #R32800
 36251 CP (HL)       ; Does #REGhl point at a background tile?
 36252 JR Z,36261    ; Jump if so (the light beam will not be reflected at this
                     ; point)
 36254 LD A,E        ; {Toggle the value in #REGde between 32 and -1 (and
 36255 XOR 223       ; therefore the direction of the light beam between
 36257 LD E,A        ; vertically downwards and horizontally to the left): the
 36258 LD A,D        ; light beam has hit a guardian
 36259 CPL           ;
 36260 LD D,A        ; }
*36261 LD (HL),119   ; Draw a portion of the light beam with attribute value
                     ; #b119 (INK 7: PAPER 6: BRIGHT 1)
 36263 ADD HL,DE     ; Point #REGhl at the cell where the next portion of the
                     ; light beam will be drawn
 36264 JR 36217      ; Jump back to draw the next portion of the light beam

; Draw the horizontal guardians in the current cavern
;
; Used by the routine at #R34574.
@label=DRAWHG
c36266 LD IY,32958   ; Point #REGiy at the first byte of the first horizontal
                     ; guardian definition at #R32958
; The guardian-drawing loop begins here.
*36270 LD A,(IY+0)   ; Pick up the first byte of the guardian definition
 36273 CP 255        ; Have we dealt with all the guardians yet?
 36275 RET Z         ; Return if so
 36276 OR A          ; Is this guardian definition blank?
 36277 JR Z,36337    ; If so, skip it and consider the next one
 36279 LD DE,31      ; Prepare #REGde for addition
 36282 LD L,(IY+1)   ; {Point #REGhl at the address of the guardian's location
 36285 LD H,(IY+2)   ; in the attribute buffer at #R23552}
 36288 AND 127       ; Reset bit 7 (which specifies the animation speed) of the
                     ; attribute byte, ensuring no FLASH
 36290 LD (HL),A     ; {Set the attribute bytes for the guardian in the buffer
 36291 INC HL        ; at #R23552
 36292 LD (HL),A     ;
 36293 ADD HL,DE     ;
 36294 LD (HL),A     ;
 36295 INC HL        ;
 36296 LD (HL),A     ; }
 36297 LD C,1        ; Prepare #REGc for the call to the drawing routine at
                     ; #R36852 later on
 36299 LD A,(IY+4)   ; Pick up the animation frame (0-7)
 36302 RRCA          ; {Multiply it by 32
 36303 RRCA          ;
 36304 RRCA          ; }
 36305 LD E,A        ; Copy the result to #REGe
 36306 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 36309 CP 7          ; Are we in one of the first seven caverns?
 36311 JR C,36323    ; Jump if so
 36313 CP 9          ; Are we in #R54272(The Endorian Forest)?
 36315 JR Z,36323    ; Jump if so
 36317 CP 15         ; Are we in #R60416(The Sixteenth Cavern)?
 36319 JR Z,36323    ; Jump if so
 36321 SET 7,E       ; Add #b128 to #REGe (the horizontal guardians in this
                     ; cavern use frames 4-7 only)
@ssub=LD D,33024/256
*36323 LD D,129      ; Point #REGde at the graphic data for the appropriate
                     ; guardian sprite (at #R33024+#REGe)
 36325 LD L,(IY+1)   ; {Point #REGhl at the address of the guardian's location
 36328 LD H,(IY+3)   ; in the screen buffer at #R24576}
 36331 CALL 36852    ; Draw the guardian to the screen buffer at #R24576
 36334 JP NZ,36102   ; Kill Willy if the guardian collided with him
; The current guardian definition has been dealt with. Time for the next one.
*36337 LD DE,7       ; {Point #REGiy at the first byte of the next horizontal
 36340 ADD IY,DE     ; guardian definition}
 36342 JR 36270      ; Jump back to deal with the next horizontal guardian

; Move and draw Eugene in Eugene's Lair
;
; Used by the routine at #R34574. First we move Eugene up or down, or change
; his direction.
@label=EUGENE
c36344 LD A,(32884)  ; Pick up the attribute of the last item drawn from
                     ; #R32884
 36347 OR A          ; Have all the items been collected?
 36348 JR Z,36367    ; Jump if so
 36350 LD A,(32987)  ; Pick up Eugene's direction from #R32987
 36353 OR A          ; Is Eugene moving downwards?
 36354 JR Z,36367    ; Jump if so
 36356 LD A,(32988)  ; Pick up Eugene's pixel y-coordinate from #R32988
 36359 DEC A         ; Decrement it (moving Eugene up)
 36360 JR Z,36380    ; Jump if Eugene has reached the top of the cavern
 36362 LD (32988),A  ; Update Eugene's pixel y-coordinate at #R32988
 36365 JR 36388      ;
*36367 LD A,(32988)  ; Pick up Eugene's pixel y-coordinate from #R32988
 36370 INC A         ; Increment it (moving Eugene down)
 36371 CP 88         ; Has Eugene reached the portal yet?
 36373 JR Z,36380    ; Jump if so
 36375 LD (32988),A  ; Update Eugene's pixel y-coordinate at #R32988
 36378 JR 36388      ;
*36380 LD A,(32987)  ; {Toggle Eugene's direction at #R32987
 36383 XOR 1         ;
 36385 LD (32987),A  ; }
; Now that Eugene's movement has been dealt with, it's time to draw him.
*36388 LD A,(32988)  ; Pick up Eugene's pixel y-coordinate from #R32988
 36391 AND 127       ; {Point #REGde at the entry in the screen buffer address
 36393 RLCA          ; lookup table at #R33536 that corresponds to Eugene's
 36394 LD E,A        ; y-coordinate
@ssub=LD D,33536/256
 36395 LD D,131      ; }
 36397 LD A,(DE)     ; {Point #REGhl at the address of Eugene's location in the
 36398 OR 15         ; screen buffer at #R24576
 36400 LD L,A        ;
 36401 INC DE        ;
 36402 LD A,(DE)     ;
 36403 LD H,A        ; }
@ssub=LD DE,32989+3
 36404 LD DE,32992   ; {Draw Eugene to the screen buffer at #R24576
 36407 LD C,1        ;
 36409 CALL 36852    ; }
 36412 JP NZ,36102   ; Kill Willy if Eugene collided with him
 36415 LD A,(32988)  ; Pick up Eugene's pixel y-coordinate from #R32988
 36418 AND 120       ; {Point #REGhl at the address of Eugene's location in the
 36420 RLCA          ; attribute buffer at #R23552
 36421 OR 7          ;
 36423 SCF           ;
 36424 RL A          ;
 36426 LD L,A        ;
 36427 LD A,0        ;
 36429 ADC A,92      ;
 36431 LD H,A        ; }
 36432 LD A,(32884)  ; Pick up the attribute of the last item drawn from
                     ; #R32884
 36435 OR A          ; Set the zero flag if all the items have been collected
 36436 LD A,7        ; Assume we will draw Eugene with white INK
 36438 JR NZ,36447   ; Jump if there are items remaining to be collected
 36440 LD A,(32957)  ; Pick up the value of the game clock at #R32957
 36443 RRCA          ; {Move bits 2-4 into bits 0-2 and clear the other bits;
 36444 RRCA          ; this value (which decreases by one on each pass through
 36445 AND 7         ; the main loop) will be Eugene's INK colour}
; This entry point is used by the routines at #R36469 (to set the attributes
; for a Skylab), #R36593 (to set the attributes for a vertical guardian) and
; #R37173 (to set the attributes for the Kong Beast).
*36447 LD (HL),A     ; Save the INK colour in the attribute buffer temporarily
 36448 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 36451 AND 248       ; {Combine its PAPER colour with the chosen INK colour
 36453 OR (HL)       ; }
 36454 LD (HL),A     ; Set the attribute byte for the top-left cell of the
                     ; sprite in the attribute buffer at #R23552
 36455 LD DE,31      ; Prepare #REGde for addition
 36458 INC HL        ; {Set the attribute byte for the top-right cell of the
 36459 LD (HL),A     ; sprite in the attribute buffer at #R23552}
 36460 ADD HL,DE     ; {Set the attribute byte for the middle-left cell of the
 36461 LD (HL),A     ; sprite in the attribute buffer at #R23552}
 36462 INC HL        ; {Set the attribute byte for the middle-right cell of the
 36463 LD (HL),A     ; sprite in the attribute buffer at #R23552}
 36464 ADD HL,DE     ; {Set the attribute byte for the bottom-left cell of the
 36465 LD (HL),A     ; sprite in the attribute buffer at #R23552}
 36466 INC HL        ; {Set the attribute byte for the bottom-right cell of the
 36467 LD (HL),A     ; sprite in the attribute buffer at #R23552}
 36468 RET           ;

; Move and draw the Skylabs in Skylab Landing Bay
;
; Used by the routine at #R34574.
@label=SKYLABS
c36469 LD IY,32989   ; Point #REGiy at the first byte of the first vertical
                     ; guardian definition at #R32989
; The Skylab-moving loop begins here.
*36473 LD A,(IY+0)   ; Pick up the first byte of the guardian definition
 36476 CP 255        ; Have we dealt with all the Skylabs yet?
 36478 JP Z,34719    ; If so, re-enter the main loop
 36481 LD A,(IY+2)   ; Pick up the Skylab's pixel y-coordinate
 36484 CP (IY+6)     ; Has it reached its crash site yet?
 36487 JR NC,36497   ; Jump if so
 36489 ADD A,(IY+4)  ; {Increment the Skylab's y-coordinate (moving it
 36492 LD (IY+2),A   ; downwards)}
 36495 JR 36527      ;
; The Skylab has reached its crash site. Start or continue its disintegration.
*36497 INC (IY+1)    ; Increment the animation frame
 36500 LD A,(IY+1)   ; Pick up the animation frame
 36503 CP 8          ; Has the Skylab completely disintegrated yet?
 36505 JR NZ,36527   ; Jump if not
 36507 LD A,(IY+5)   ; {Reset the Skylab's pixel y-coordinate
 36510 LD (IY+2),A   ; }
 36513 LD A,(IY+3)   ; {Add 8 to the Skylab's x-coordinate (wrapping around at
 36516 ADD A,8       ; the right side of the screen)
 36518 AND 31        ;
 36520 LD (IY+3),A   ; }
 36523 LD (IY+1),0   ; Reset the animation frame to 0
; Now that the Skylab's movement has been dealt with, time to draw it.
*36527 LD E,(IY+2)   ; Pick up the Skylab's pixel y-coordinate in #REGe
 36530 RLC E         ; {Point #REGde at the entry in the screen buffer address
@ssub=LD D,33536/256
 36532 LD D,131      ; lookup table at #R33536 that corresponds to the Skylab's
                     ; pixel y-coordinate}
 36534 LD A,(DE)     ; {Point #REGhl at the address of the Skylab's location in
 36535 ADD A,(IY+3)  ; the screen buffer at #R24576
 36538 LD L,A        ;
 36539 INC DE        ;
 36540 LD A,(DE)     ;
 36541 LD H,A        ; }
 36542 LD A,(IY+1)   ; Pick up the animation frame (0-7)
 36545 RRCA          ; {Multiply it by 32
 36546 RRCA          ;
 36547 RRCA          ; }
 36548 LD E,A        ; {Point #REGde at the graphic data for the corresponding
@ssub=LD D,33024/256
 36549 LD D,129      ; Skylab sprite (at #R33024+#REGa)}
 36551 LD C,1        ; {Draw the Skylab to the screen buffer at #R24576
 36553 CALL 36852    ; }
 36556 JP NZ,36103   ; Kill Willy if the Skylab collided with him
 36559 LD A,(IY+2)   ; {Point #REGhl at the address of the Skylab's location in
 36562 AND 64        ; the attribute buffer at #R23552
 36564 RLCA          ;
 36565 RLCA          ;
 36566 ADD A,92      ;
 36568 LD H,A        ;
 36569 LD A,(IY+2)   ;
 36572 RLCA          ;
 36573 RLCA          ;
 36574 AND 224       ;
 36576 OR (IY+3)     ;
 36579 LD L,A        ; }
 36580 LD A,(IY+0)   ; Pick up the Skylab's attribute byte
 36583 CALL 36447    ; Set the attribute bytes for the Skylab
; The current guardian definition has been dealt with. Time for the next one.
 36586 LD DE,7       ; {Point #REGiy at the first byte of the next vertical
 36589 ADD IY,DE     ; guardian definition}
 36591 JR 36473      ; Jump back to deal with the next Skylab

; Move and draw the vertical guardians in the current cavern
;
; Used by the routine at #R34574.
@label=VGUARDIANS
c36593 LD IY,32989   ; Point #REGiy at the first byte of the first vertical
                     ; guardian definition at #R32989
; The guardian-moving loop begins here.
*36597 LD A,(IY+0)   ; Pick up the first byte of the guardian definition
 36600 CP 255        ; Have we dealt with all the guardians yet?
 36602 RET Z         ; Return if so
 36603 INC (IY+1)    ; Increment the guardian's animation frame
 36606 RES 2,(IY+1)  ; Reset the animation frame to 0 if it overflowed to 4
 36610 LD A,(IY+2)   ; Pick up the guardian's pixel y-coordinate
 36613 ADD A,(IY+4)  ; Add the current y-coordinate increment
 36616 CP (IY+5)     ; Has the guardian reached the highest point of its path
                     ; (minimum y-coordinate)?
 36619 JR C,36631    ; If so, jump to change its direction of movement
 36621 CP (IY+6)     ; Has the guardian reached the lowest point of its path
                     ; (maximum y-coordinate)?
 36624 JR NC,36631   ; If so, jump to change its direction of movement
 36626 LD (IY+2),A   ; Update the guardian's pixel y-coordinate
 36629 JR 36639      ;
*36631 LD A,(IY+4)   ; {Negate the y-coordinate increment; this changes the
 36634 NEG           ; guardian's direction of movement
 36636 LD (IY+4),A   ; }
; Now that the guardian's movement has been dealt with, time to draw it.
*36639 LD A,(IY+2)   ; Pick up the guardian's pixel y-coordinate
 36642 AND 127       ; {Point #REGde at the entry in the screen buffer address
 36644 RLCA          ; lookup table at #R33536 that corresponds to the
 36645 LD E,A        ; guardian's pixel y-coordinate
@ssub=LD D,33536/256
 36646 LD D,131      ; }
 36648 LD A,(DE)     ; {Point #REGhl at the address of the guardian's location
 36649 OR (IY+3)     ; in the screen buffer at #R24576
 36652 LD L,A        ;
 36653 INC DE        ;
 36654 LD A,(DE)     ;
 36655 LD H,A        ; }
 36656 LD A,(IY+1)   ; Pick up the guardian's animation frame (0-3)
 36659 RRCA          ; {Multiply it by 32
 36660 RRCA          ;
 36661 RRCA          ; }
 36662 LD E,A        ; {Point #REGde at the graphic data for the appropriate
@ssub=LD D,33024/256
 36663 LD D,129      ; guardian sprite (at #R33024+#REGa)}
 36665 LD C,1        ; {Draw the guardian to the screen buffer at #R24576
 36667 CALL 36852    ; }
 36670 JP NZ,36102   ; Kill Willy if the guardian collided with him
 36673 LD A,(IY+2)   ; Pick up the guardian's pixel y-coordinate
 36676 AND 64        ; {Point #REGhl at the address of the guardian's location
 36678 RLCA          ; in the attribute buffer at #R23552
 36679 RLCA          ;
 36680 ADD A,92      ;
 36682 LD H,A        ;
 36683 LD A,(IY+2)   ;
 36686 RLCA          ;
 36687 RLCA          ;
 36688 AND 224       ;
 36690 OR (IY+3)     ;
 36693 LD L,A        ; }
 36694 LD A,(IY+0)   ; Pick up the guardian's attribute byte
 36697 CALL 36447    ; Set the attribute bytes for the guardian
; The current guardian definition has been dealt with. Time for the next one.
 36700 LD DE,7       ; {Point #REGiy at the first byte of the next vertical
 36703 ADD IY,DE     ; guardian definition}
 36705 JR 36597      ; Jump back to deal with the next vertical guardian

; Draw the items in the current cavern and collect any that Willy is touching
;
; Used by the routine at #R34574.
@label=DRAWITEMS
c36707 XOR A         ; {Initialise the attribute of the last item drawn at
 36708 LD (32884),A  ; #R32884 to #b0 (in case there are no items left to draw)
                     ; }
 36711 LD IY,32885   ; Point #REGiy at the first byte of the first item
                     ; definition at #R32885
; The item-drawing loop begins here.
*36715 LD A,(IY+0)   ; Pick up the first byte of the item definition
 36718 CP 255        ; Have we dealt with all the items yet?
 36720 JR Z,36794    ; Jump if so
 36722 OR A          ; Has this item already been collected?
 36723 JR Z,36782    ; If so, skip it and consider the next one
 36725 LD E,(IY+1)   ; {Point #REGde at the address of the item's location in
 36728 LD D,(IY+2)   ; the attribute buffer at #R23552}
 36731 LD A,(DE)     ; Pick up the current attribute byte at the item's
                     ; location
 36732 AND 7         ; {Is the INK white (which happens if Willy is touching
 36734 CP 7          ; the item)?}
 36736 JR NZ,36750   ; Jump if not
; Willy is touching this item, so add it to his collection.
@ssub=LD HL,33829+7
 36738 LD HL,33836   ; {Add 100 to the score
 36741 CALL 37118    ; }
 36744 LD (IY+0),0   ; Set the item's attribute byte to #b0 so that it will be
                     ; skipped the next time
 36748 JR 36782      ; Jump forward to consider the next item
; This item has not been collected yet.
*36750 LD A,(IY+0)   ; Pick up the item's current attribute byte
 36753 AND 248       ; {Keep the BRIGHT and PAPER bits, and set the INK to 3
 36755 OR 3          ; (magenta)}
 36757 LD B,A        ; Store this value in #REGb
 36758 LD A,(IY+0)   ; Pick up the item's current attribute byte again
 36761 AND 3         ; {Keep only bits 0 and 1 and add the value in #REGb; this
 36763 ADD A,B       ; maintains the BRIGHT and PAPER bits, and cycles the INK
                     ; colour through 3, 4, 5 and 6}
 36764 LD (IY+0),A   ; Store the new attribute byte
 36767 LD (DE),A     ; Update the attribute byte at the item's location in the
                     ; buffer at #R23552
 36768 LD (32884),A  ; Store the new attribute byte at #R32884 as well
 36771 LD D,(IY+3)   ; Point #REGde at the address of the item's location in
                     ; the screen buffer at #R24576
 36774 LD HL,32948   ; Point #REGhl at the item graphic for the current cavern
                     ; (at #R32948)
 36777 LD B,8        ; There are eight pixel rows to copy
 36779 CALL 37589    ; Draw the item to the screen buffer at #R24576
; The current item definition has been dealt with. Time for the next one.
*36782 INC IY        ; {Point #REGiy at the first byte of the next item
 36784 INC IY        ; definition
 36786 INC IY        ;
 36788 INC IY        ;
 36790 INC IY        ; }
 36792 JR 36715      ; Jump back to deal with the next item
; All the items have been dealt with. Check whether there were any left.
*36794 LD A,(32884)  ; Pick up the attribute of the last item drawn at #R32884
 36797 OR A          ; Were any items drawn?
 36798 RET NZ        ; Return if so (some remain to be collected)
 36799 LD HL,32911   ; {Ensure that the portal is flashing by setting bit 7 of
 36802 SET 7,(HL)    ; its attribute byte at #R32911}
 36804 RET           ;

; Draw the portal, or move to the next cavern if Willy has entered it
;
; Used by the routine at #R34574. First check whether Willy has entered the
; portal.
@label=CHKPORTAL
c36805 LD HL,(32944) ; Pick up the address of the portal's location in the
                     ; attribute buffer at #R23552 from #R32944
 36808 LD A,(32876)  ; Pick up the LSB of the address of Willy's location in
                     ; the attribute buffer at #R23552 from #R32876
 36811 CP L          ; Does it match that of the portal?
 36812 JR NZ,36831   ; Jump if not
@ssub=LD A,(32876+1)
@ignoreua
 36814 LD A,(32877)  ; Pick up the MSB of the address of Willy's location in
                     ; the attribute buffer at #R23552 from #R32876(#N32877)
 36817 CP H          ; Does it match that of the portal?
 36818 JR NZ,36831   ; Jump if not
 36820 LD A,(32911)  ; Pick up the portal's attribute byte from #R32911
 36823 BIT 7,A       ; Is the portal flashing?
 36825 JR Z,36831    ; Jump if not
 36827 POP HL        ; Drop the return address from the stack
 36828 JP 36904      ; Move Willy to the next cavern
; Willy has not entered the portal, or it's not flashing, so just draw it.
*36831 LD A,(32911)  ; Pick up the portal's attribute byte from #R32911
 36834 LD (HL),A     ; {Set the attribute bytes for the portal in the buffer at
 36835 INC HL        ; #R23552
 36836 LD (HL),A     ;
 36837 LD DE,31      ;
 36840 ADD HL,DE     ;
 36841 LD (HL),A     ;
 36842 INC HL        ;
 36843 LD (HL),A     ; }
 36844 LD DE,32912   ; Point #REGde at the graphic data for the portal at
                     ; #R32912
 36847 LD HL,(32946) ; Pick up the address of the portal's location in the
                     ; screen buffer at #R24576 from #R32946
 36850 LD C,0        ; #REGc=0: overwrite mode
; This routine continues into the one at #R36852.

; Draw a sprite
;
; Used by the routines at #R34252 (to draw Willy on the title screen), #R34574
; (to draw the remaining lives), #R35140 (to draw Willy, the boot and the
; plinth during the game over sequence), #R36266 (to draw horizontal
; guardians), #R36344 (to draw Eugene in #R49152(Eugene's Lair)), #R36469 (to
; draw the Skylabs in #R58368(Skylab Landing Bay)), #R36593 (to draw vertical
; guardians), #R36805 (to draw the portal in the current cavern), #R36904 (to
; draw Willy above ground and the swordfish graphic over the portal in
; #R64512(The Final Barrier)) and #R37173 (to draw the Kong Beast in
; #R52224(Miner Willy meets the Kong Beast) and #R56320(Return of the Alien
; Kong Beast)). If #REGc=1 on entry, this routine returns with the zero flag
; reset if any of the set bits in the sprite being drawn collides with a set
; bit in the background.
;
; C Drawing mode: 0 (overwrite) or 1 (blend)
; DE Address of sprite graphic data
; HL Address to draw at
@label=DRWFIX
c36852 LD B,16       ; There are 16 rows of pixels to draw
*36854 BIT 0,C       ; Set the zero flag if we're in overwrite mode
 36856 LD A,(DE)     ; Pick up a sprite graphic byte
 36857 JR Z,36863    ; Jump if we're in overwrite mode
 36859 AND (HL)      ; {Return with the zero flag reset if any of the set bits
 36860 RET NZ        ; in the sprite graphic byte collide with a set bit in the
                     ; background (e.g. in Willy's sprite)}
 36861 LD A,(DE)     ; Pick up the sprite graphic byte again
 36862 OR (HL)       ; Blend it with the background byte
*36863 LD (HL),A     ; Copy the graphic byte to its destination cell
 36864 INC L         ; Move #REGhl along to the next cell on the right
 36865 INC DE        ; Point #REGde at the next sprite graphic byte
 36866 BIT 0,C       ; Set the zero flag if we're in overwrite mode
 36868 LD A,(DE)     ; Pick up a sprite graphic byte
 36869 JR Z,36875    ; Jump if we're in overwrite mode
 36871 AND (HL)      ; {Return with the zero flag reset if any of the set bits
 36872 RET NZ        ; in the sprite graphic byte collide with a set bit in the
                     ; background (e.g. in Willy's sprite)}
 36873 LD A,(DE)     ; Pick up the sprite graphic byte again
 36874 OR (HL)       ; Blend it with the background byte
*36875 LD (HL),A     ; Copy the graphic byte to its destination cell
 36876 DEC L         ; {Move #REGhl to the next pixel row down in the cell on
 36877 INC H         ; the left}
 36878 INC DE        ; Point #REGde at the next sprite graphic byte
 36879 LD A,H        ; {Have we drawn the bottom pixel row in this pair of
 36880 AND 7         ; cells yet?}
 36882 JR NZ,36900   ; Jump if not
 36884 LD A,H        ; {Otherwise move #REGhl to the top pixel row in the cell
 36885 SUB 8         ; below
 36887 LD H,A        ;
 36888 LD A,L        ;
 36889 ADD A,32      ;
 36891 LD L,A        ; }
 36892 AND 224       ; Was the last pair of cells at y-coordinate 7 or 15?
 36894 JR NZ,36900   ; Jump if not
 36896 LD A,H        ; {Otherwise adjust #REGhl to account for the movement
 36897 ADD A,8       ; from the top or middle third of the screen to the next
 36899 LD H,A        ; one down}
*36900 DJNZ 36854    ; Jump back until all 16 rows of pixels have been drawn
 36902 XOR A         ; Set the zero flag (to indicate no collision)
 36903 RET           ;

; Move to the next cavern
;
; Used by the routines at #R34574 and #R36805.
@label=NXSHEET
c36904 LD A,(33799)  ; Pick up the number of the current cavern from #R33799
 36907 INC A         ; Increment the cavern number
 36908 CP 20         ; Is the current cavern #R64512(The Final Barrier)?
 36910 JR NZ,37009   ; Jump if not
 36912 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 36915 OR A          ; Are we in demo mode?
 36916 JP NZ,37008   ; Jump if so
 36919 LD A,(33885)  ; Pick up the 6031769 key counter from #R33885
 36922 CP 7          ; Is cheat mode activated?
 36924 JR Z,37008    ; Jump if so
; Willy has made it through #R64512(The Final Barrier) without cheating.
 36926 LD C,0        ; {Draw Willy at (2,19) on the ground above the portal
 36928 LD DE,33376   ;
 36931 LD HL,16467   ;
 36934 CALL 36852    ; }
 36937 LD DE,45792   ; {Draw the swordfish graphic (see #R45792) over the
 36940 LD HL,16563   ; portal
 36943 CALL 36852    ; }
 36946 LD HL,22611   ; Point #REGhl at (2,19) in the attribute file
 36949 LD DE,31      ; Prepare #REGde for addition
 36952 LD (HL),47    ; {Set the attributes for the upper half of Willy's sprite
 36954 INC HL        ; at (2,19) and (2,20) to #b47 (INK 7: PAPER 5)
 36955 LD (HL),47    ; }
 36957 ADD HL,DE     ; {Set the attributes for the lower half of Willy's sprite
 36958 LD (HL),39    ; at (3,19) and (3,20) to #b39 (INK 7: PAPER 4)
 36960 INC HL        ;
 36961 LD (HL),39    ; }
 36963 ADD HL,DE     ; {Point #REGhl at (5,19) in the attribute file
 36964 INC HL        ;
 36965 ADD HL,DE     ; }
 36966 LD (HL),69    ; {Set the attributes for the fish at (5,19) and (5,20) to
 36968 INC HL        ; #b69 (INK 5: PAPER 0: BRIGHT 1)
 36969 LD (HL),69    ; }
 36971 ADD HL,DE     ; {Set the attribute for the handle of the sword at (6,19)
 36972 LD (HL),70    ; to #b70 (INK 6: PAPER 0: BRIGHT 1)}
 36974 INC HL        ; {Set the attribute for the blade of the sword at (6,20)
 36975 LD (HL),71    ; to #b71 (INK 7: PAPER 0: BRIGHT 1)}
 36977 ADD HL,DE     ; {Set the attributes at (7,19) and (7,20) to #b0 (to hide
 36978 LD (HL),0     ; Willy's feet just below where the portal was)
 36980 INC HL        ;
 36981 LD (HL),0     ; }
; Now play a celebratory sound effect.
; .
; #AUDIO4(escape.wav)(36983,37008)
 36983 LD BC,0       ; {Prepare #REGc and #REGd for the celebratory sound
 36986 LD D,50       ; effect}
 36988 XOR A         ; #REGa=0 (black border)
*36989 OUT (254),A   ; {Produce the celebratory sound effect: Willy has escaped
 36991 XOR 24        ; from the mine
 36993 LD E,A        ;
 36994 LD A,C        ;
 36995 ADD A,D       ;
 36996 ADD A,D       ;
 36997 ADD A,D       ;
 36998 LD B,A        ;
 36999 LD A,E        ;
*37000 DJNZ 37000    ;
 37002 DEC C         ;
 37003 JR NZ,36989   ;
 37005 DEC D         ;
 37006 JR NZ,36989   ; }
*37008 XOR A         ; #REGa=#b0 (the next cavern will be #R45056(Central
                     ; Cavern))
*37009 LD (33799),A  ; Update the cavern number at #R33799
; The next section of code cycles the INK and PAPER colours of the current
; cavern.
 37012 LD A,63       ; Initialise #REGa to #b63 (INK 7: PAPER 7)
*37014 LD HL,22528   ; {Set the attributes for the top two-thirds of the screen
 37017 LD DE,22529   ; to the value in #REGa
 37020 LD BC,511     ;
 37023 LD (HL),A     ;
 37024 LDIR          ; }
 37026 LD BC,4       ; {Pause for about 0.004s
*37029 DJNZ 37029    ;
 37031 DEC C         ;
 37032 JR NZ,37029   ; }
 37034 DEC A         ; Decrement the attribute value in #REGa
 37035 JR NZ,37014   ; Jump back until we've gone through all attribute values
                     ; from #b63 down to #b1
 37037 LD A,(33882)  ; Pick up the game mode indicator from #R33882
 37040 OR A          ; Are we in demo mode?
 37041 JP NZ,34449   ; If so, demo the next cavern
; The following loop increases the score and decreases the air supply until it
; runs out, while playing a sound effect.
; .
; #PUSHS #POKES32956,63 #AUDIO4(air.wav)(37044,34449) #POPS
*37044 CALL 35388    ; Decrease the air remaining in the current cavern
 37047 JP Z,34449    ; Move to the next cavern if the air supply is now gone
@ssub=LD HL,33829+9
 37050 LD HL,33838   ; {Add 1 to the score
 37053 CALL 37118    ; }
 37056 LD IX,33833   ; {Print the new score at (19,26)
 37060 LD C,6        ;
 37062 LD DE,20602   ;
 37065 CALL 37562    ; }
 37068 LD C,4        ; This value determines the duration of the sound effect
 37070 LD A,(32956)  ; Pick up the remaining air supply (S) from #R32956
 37073 CPL           ; {#REGd=2*(63-S); this value determines the pitch of the
 37074 AND 63        ; sound effect (which decreases with the amount of air
 37076 RLC A         ; remaining)
 37078 LD D,A        ; }
*37079 LD A,0        ; {Produce a short note
 37081 OUT (254),A   ;
 37083 LD B,D        ;
*37084 DJNZ 37084    ;
 37086 LD A,24       ;
 37088 OUT (254),A   ;
 37090 LD B,D        ;
*37091 DJNZ 37091    ;
 37093 DEC C         ;
 37094 JR NZ,37079   ; }
 37096 JR 37044      ; Jump back to decrease the air supply again

; Add to the score
;
; The entry point to this routine is at #R37118.
@label=INCSCORE
c37098 LD (HL),48    ; Roll the digit over from '9' to '0'
 37100 DEC HL        ; Point #REGhl at the next digit to the left
 37101 LD A,L        ; {Is this the 10000s digit?
@ssub=CP (33833+1)%256
 37102 CP 42         ; }
 37104 JR NZ,37118   ; Jump if not
; Willy has scored another 10000 points. Give him an extra life.
 37106 LD A,8        ; {Set the screen flash counter at #R33880 to 8
 37108 LD (33880),A  ; }
 37111 LD A,(33879)  ; {Increment the number of lives remaining at #R33879
 37114 INC A         ;
 37115 LD (33879),A  ; }
; The entry point to this routine is here and is used by the routines at
; #R36707, #R36904 and #R37173 with #REGhl pointing at the digit of the score
; (see #R33833) to be incremented.
*37118 LD A,(HL)     ; Pick up a digit of the score
 37119 CP 57         ; Is it '9'?
 37121 JR Z,37098    ; Jump if so
 37123 INC (HL)      ; Increment the digit
 37124 RET           ;

; Move the conveyor in the current cavern
;
; Used by the routine at #R34574.
@label=MVCONVEYOR
c37125 LD HL,(32880) ; Pick up the address of the conveyor's location in the
                     ; screen buffer at #R28672 from #R32880
 37128 LD E,L        ; {Copy this address to #REGde
 37129 LD D,H        ; }
 37130 LD A,(32882)  ; Pick up the length of the conveyor from #R32882
 37133 LD B,A        ; #REGb will count the conveyor tiles
 37134 LD A,(32879)  ; Pick up the direction of the conveyor from #R32879
 37137 OR A          ; Is the conveyor moving right?
 37138 JR NZ,37159   ; Jump if so
; The conveyor is moving left.
 37140 LD A,(HL)     ; Copy the first pixel row of the conveyor tile to #REGa
 37141 RLC A         ; {Rotate it left twice
 37143 RLC A         ; }
 37145 INC H         ; {Point #REGhl at the third pixel row of the conveyor
 37146 INC H         ; tile}
 37147 LD C,(HL)     ; Copy this pixel row to #REGc
 37148 RRC C         ; {Rotate it right twice
 37150 RRC C         ; }
*37152 LD (DE),A     ; {Update the first and third pixel rows of every conveyor
 37153 LD (HL),C     ; tile in the screen buffer at #R28672
 37154 INC L         ;
 37155 INC E         ;
 37156 DJNZ 37152    ; }
 37158 RET           ;
; The conveyor is moving right.
*37159 LD A,(HL)     ; Copy the first pixel row of the conveyor tile to #REGa
 37160 RRC A         ; {Rotate it right twice
 37162 RRC A         ; }
 37164 INC H         ; {Point #REGhl at the third pixel row of the conveyor
 37165 INC H         ; tile}
 37166 LD C,(HL)     ; Copy this pixel row to #REGc
 37167 RLC C         ; {Rotate it left twice
 37169 RLC C         ; }
 37171 JR 37152      ; Jump back to update the first and third pixel rows of
                     ; every conveyor tile

; Move and draw the Kong Beast in the current cavern
;
; Used by the routine at #R34574.
@label=KONGBEAST
c37173 LD HL,23558   ; {Flip the left-hand switch at (0,6) if Willy is touching
 37176 CALL 37403    ; it}
 37179 LD A,(32987)  ; Pick up the Kong Beast's status from #R32987
 37182 CP 2          ; Is the Kong Beast already dead?
 37184 RET Z         ; Return if so
 37185 LD A,(29958)  ; Pick up the sixth pixel row of the left-hand switch from
                     ; the screen buffer at #R28672
 37188 CP 16         ; Has the switch been flipped?
 37190 JP Z,37369    ; Jump if not
; The left-hand switch has been flipped. Deal with opening up the wall if that
; is still in progress.
 37193 LD A,(24433)  ; Pick up the attribute byte of the tile at (11,17) in the
                     ; buffer at #R24064
 37196 OR A          ; Has the wall there been removed yet?
 37197 JR Z,37238    ; Jump if so
 37199 LD HL,32625   ; Point #REGhl at the bottom row of pixels of the wall
                     ; tile at (11,17) in the screen buffer at #R28672
*37202 LD A,(HL)     ; Pick up a pixel row
 37203 OR A          ; Is it blank yet?
 37204 JR NZ,37228   ; Jump if not
 37206 DEC H         ; Point #REGhl at the next pixel row up
 37207 LD A,H        ; {Have we checked all 8 pixel rows yet?
 37208 CP 119        ; }
 37210 JR NZ,37202   ; If not, jump back to check the next one
 37212 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 37215 LD (24433),A  ; {Change the attributes at (11,17) and (12,17) in the
 37218 LD (24465),A  ; buffer at #R24064 to match the background tile (the wall
                     ; there is now gone)}
 37221 LD A,114      ; {Update the seventh byte of the guardian definition at
@ssub=LD (32958+13),A
 37223 LD (32971),A  ; #R32965 so that the guardian moves through the opening
                     ; in the wall}
 37226 JR 37238      ;
*37228 LD (HL),0     ; Clear a pixel row of the wall tile at (11,17) in the
                     ; screen buffer at #R28672
 37230 LD L,145      ; {Point #REGhl at the opposite pixel row of the wall tile
 37232 LD A,H        ; one cell down at (12,17)
 37233 XOR 7         ;
 37235 LD H,A        ; }
 37236 LD (HL),0     ; Clear that pixel row as well
; Now check the right-hand switch.
*37238 LD HL,23570   ; {Flip the right-hand switch at (0,18) if Willy is
 37241 CALL 37403    ; touching it (and it hasn't already been flipped)}
 37244 JR NZ,37277   ; Jump if the switch was not flipped
 37246 XOR A         ; {Initialise the Kong Beast's pixel y-coordinate at
 37247 LD (32988),A  ; #R32988 to 0}
 37250 INC A         ; {Update the Kong Beast's status at #R32987 to 1: he is
 37251 LD (32987),A  ; falling}
 37254 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 37257 LD (24143),A  ; {Change the attributes of the floor beneath the Kong
 37260 LD (24144),A  ; Beast in the buffer at #R24064 to match that of the
                     ; background tile}
 37263 LD HL,28751   ; Point #REGhl at (2,15) in the screen buffer at #R28672
 37266 LD B,8        ; {Clear the cells at (2,15) and (2,16), removing the
*37268 LD (HL),0     ; floor beneath the Kong Beast
 37270 INC L         ;
 37271 LD (HL),0     ;
 37273 DEC L         ;
 37274 INC H         ;
 37275 DJNZ 37268    ; }
*37277 LD A,(32987)  ; Pick up the Kong Beast's status from #R32987
 37280 OR A          ; Is the Kong Beast still on the ledge?
 37281 JR Z,37369    ; Jump if so
; The Kong Beast is falling.
 37283 LD A,(32988)  ; Pick up the Kong Beast's pixel y-coordinate from #R32988
 37286 CP 100        ; Has he fallen into the portal yet?
 37288 JR Z,37363    ; Jump if so
 37290 ADD A,4       ; {Add 4 to the Kong Beast's pixel y-coordinate at #R32988
 37292 LD (32988),A  ; (moving him downwards)}
 37295 LD C,A        ; Copy the pixel y-coordinate to #REGc; this value
                     ; determines the pitch of the sound effect
 37296 LD D,16       ; This value determines the duration of the sound effect
 37298 LD A,(32883)  ; Pick up the border colour for the current cavern from
                     ; #R32883
*37301 OUT (254),A   ; {Make a falling sound effect
 37303 XOR 24        ;
 37305 LD B,C        ;
*37306 DJNZ 37306    ;
 37308 DEC D         ;
 37309 JR NZ,37301   ; }
 37311 LD A,C        ; Copy the Kong Beast's pixel y-coordinate back into #REGa
 37312 RLCA          ; {Point #REGde at the entry in the screen buffer address
 37313 LD E,A        ; lookup table at #R33536 that corresponds to the Kong
@ssub=LD D,33536/256
 37314 LD D,131      ; Beast's pixel y-coordinate}
 37316 LD A,(DE)     ; {Point #REGhl at the address of the Kong Beast's
 37317 OR 15         ; location in the screen buffer at #R24576
 37319 LD L,A        ;
 37320 INC DE        ;
 37321 LD A,(DE)     ;
 37322 LD H,A        ; }
@ssub=LD D,33024/256
 37323 LD D,129      ; {Use bit 5 of the value of the game clock at #R32957
 37325 LD A,(32957)  ; (which is toggled once every eight passes through the
 37328 AND 32        ; main loop) to point #REGde at the graphic data for the
 37330 OR 64         ; appropriate Kong Beast sprite
 37332 LD E,A        ; }
 37333 LD C,0        ; {Draw the Kong Beast to the screen buffer at #R24576
 37335 CALL 36852    ; }
@ssub=LD HL,33829+7
 37338 LD HL,33836   ; {Add 100 to the score
 37341 CALL 37118    ; }
 37344 LD A,(32988)  ; Pick up the Kong Beast's pixel y-coordinate from #R32988
 37347 AND 120       ; {Point #REGhl at the address of the Kong Beast's
 37349 LD L,A        ; location in the attribute buffer at #R23552
 37350 LD H,23       ;
 37352 ADD HL,HL     ;
 37353 ADD HL,HL     ;
 37354 LD A,L        ;
 37355 OR 15         ;
 37357 LD L,A        ; }
 37358 LD A,6        ; The Kong Beast is drawn with yellow INK
 37360 JP 36447      ; Set the attribute bytes for the Kong Beast
; The Kong Beast has fallen into the portal.
*37363 LD A,2        ; {Set the Kong Beast's status at #R32987 to 2: he is dead
 37365 LD (32987),A  ; }
 37368 RET           ;
; The Kong Beast is still on the ledge.
*37369 LD A,(32957)  ; Pick up the value of the game clock at #R32957
 37372 AND 32        ; {Use bit 5 of this value (which is toggled once every
 37374 LD E,A        ; eight passes through the main loop) to point #REGde at
@ssub=LD D,33024/256
 37375 LD D,129      ; the graphic data for the appropriate Kong Beast sprite}
 37377 LD HL,24591   ; {Draw the Kong Beast at (0,15) in the screen buffer at
 37380 LD C,1        ; #R24576
 37382 CALL 36852    ; }
 37385 JP NZ,36102   ; Kill Willy if he collided with the Kong Beast
 37388 LD A,68       ; #REGa=#b68 (INK 4: PAPER 0: BRIGHT 1)
 37390 LD (23599),A  ; {Set the attribute bytes for the Kong Beast in the
 37393 LD (23600),A  ; buffer at #R23552
 37396 LD (23567),A  ;
 37399 LD (23568),A  ; }
 37402 RET           ;

; Flip a switch in a Kong Beast cavern if Willy is touching it
;
; Used by the routine at #R37173. Returns with the zero flag set if Willy flips
; the switch.
;
; HL Address of the switch's location in the attribute buffer at #R23552
@label=CHKSWITCH
c37403 LD A,(32876)  ; Pick up the LSB of the address of Willy's location in
                     ; the attribute buffer at #R23552 from #R32876
 37406 INC A         ; {Is it equal to or one less than the LSB of the address
 37407 AND 254       ; of the switch's location?
 37409 CP L          ; }
 37410 RET NZ        ; Return (with the zero flag reset) if not
@ssub=LD A,(32876+1)
@ignoreua
 37411 LD A,(32877)  ; Pick up the MSB of the address of Willy's location in
                     ; the attribute buffer at #R23552 from #R32876(#N32877)
 37414 CP H          ; Does it match the MSB of the address of the switch's
                     ; location?
 37415 RET NZ        ; Return (with the zero flag reset) if not
@ssub=LD A,(32863+6)
@ignoreua
 37416 LD A,(32869)  ; Pick up the sixth byte of the graphic data for the
                     ; switch tile from #R32863(#N32869)
 37419 LD H,117      ; Point #REGhl at the sixth row of pixels of the switch
                     ; tile in the screen buffer at #R28672
 37421 CP (HL)       ; Has the switch already been flipped?
 37422 RET NZ        ; Return (with the zero flag reset) if so
; Willy is flipping the switch.
 37423 LD (HL),8     ; {Update the sixth, seventh and eighth rows of pixels of
 37425 INC H         ; the switch tile in the screen buffer at #R28672 to make
 37426 LD (HL),6     ; it appear flipped
 37428 INC H         ;
 37429 LD (HL),6     ; }
 37431 XOR A         ; Set the zero flag: Willy has flipped the switch
 37432 OR A          ; This instruction is redundant
 37433 RET           ;

; Check and set the attribute bytes for Willy's sprite in the buffer at #N23552
;
; Used by the routine at #R34574.
@label=WILLYATTRS
c37434 LD HL,(32876) ; Pick up the address of Willy's location in the attribute
                     ; buffer at #R23552 from #R32876
 37437 LD DE,31      ; Prepare #REGde for addition
 37440 LD C,15       ; Set #REGc=#b15 for the top two rows of cells (to make
                     ; the routine at #R37471 force white INK)
 37442 CALL 37471    ; Check and set the attribute byte for the top-left cell
 37445 INC HL        ; Move #REGhl to the next cell to the right
 37446 CALL 37471    ; Check and set the attribute byte for the top-right cell
 37449 ADD HL,DE     ; Move #REGhl down a row and back one cell to the left
 37450 CALL 37471    ; Check and set the attribute byte for the mid-left cell
 37453 INC HL        ; Move #REGhl to the next cell to the right
 37454 CALL 37471    ; Check and set the attribute byte for the mid-right cell
 37457 LD A,(32872)  ; Pick up Willy's y-coordinate from #R32872
 37460 LD C,A        ; Copy it to #REGc
 37461 ADD HL,DE     ; Move #REGhl down a row and back one cell to the left
 37462 CALL 37471    ; Check and set the attribute byte for the bottom-left
                     ; cell
 37465 INC HL        ; Move #REGhl to the next cell to the right
 37466 CALL 37471    ; Check and set the attribute byte for the bottom-right
                     ; cell
 37469 JR 37503      ; Draw Willy to the screen buffer at #R24576

; Check and set the attribute byte for a cell occupied by Willy's sprite
;
; Used by the routine at #R37434.
;
; C #b15 or Willy's y-coordinate
; HL Address of the cell in the attribute buffer at #R23552
@label=WILLYATTR
c37471 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 37474 CP (HL)       ; Does this cell contain a background tile?
 37475 JR NZ,37488   ; Jump if not
 37477 LD A,C        ; {Set the zero flag if we are going to retain the INK
 37478 AND 15        ; colour in this cell; this happens only if the cell is in
                     ; the bottom row and Willy's sprite is confined to the top
                     ; two rows}
 37480 JR Z,37488    ; Jump if we are going to retain the current INK colour in
                     ; this cell
 37482 LD A,(32800)  ; Pick up the attribute byte of the background tile for
                     ; the current cavern from #R32800
 37485 OR 7          ; Set bits 0-2, making the INK white
 37487 LD (HL),A     ; Set the attribute byte for this cell in the buffer at
                     ; #R23552
*37488 LD A,(32845)  ; Pick up the attribute byte of the first nasty tile for
                     ; the current cavern from #R32845
 37491 CP (HL)       ; Has Willy hit a nasty of the first kind?
 37492 JP Z,36101    ; Kill Willy if so
 37495 LD A,(32854)  ; Pick up the attribute byte of the second nasty tile for
                     ; the current cavern from #R32854
 37498 CP (HL)       ; Has Willy hit a nasty of the second kind?
 37499 JP Z,36101    ; Kill Willy if so
 37502 RET           ;

; Draw Willy to the screen buffer at #N24576
;
; Used by the routine at #R37434.
@label=DRAWWILLY
c37503 LD A,(32872)  ; Pick up Willy's y-coordinate from #R32872
@ssub=LD IXh,33536/256
 37506 LD IXh,131    ; {Point #REGix at the entry in the screen buffer address
 37509 LD IXl,A      ; lookup table at #R33536 that corresponds to Willy's
                     ; y-coordinate}
 37511 LD A,(32874)  ; Pick up Willy's direction and movement flags from
                     ; #R32874
 37514 AND 1         ; {Now #REGe=#b0 if Willy is facing right, or #b128 if
 37516 RRCA          ; he's facing left
 37517 LD E,A        ; }
 37518 LD A,(32873)  ; Pick up Willy's animation frame (0-3) from #R32873
 37521 AND 3         ; {Point #REGde at the sprite graphic data for Willy's
 37523 RRCA          ; current animation frame (see #R33280)
 37524 RRCA          ;
 37525 RRCA          ;
 37526 OR E          ;
 37527 LD E,A        ;
@ssub=LD D,33280/256
 37528 LD D,130      ; }
 37530 LD B,16       ; There are 16 rows of pixels to copy
 37532 LD A,(32876)  ; {Pick up Willy's screen x-coordinate (0-31) from #R32876
 37535 AND 31        ; }
 37537 LD C,A        ; Copy it to #REGc
*37538 LD A,(IX+0)   ; {Set #REGhl to the address in the screen buffer at
 37541 LD H,(IX+1)   ; #R24576 that corresponds to where we are going to draw
 37544 OR C          ; the next pixel row of the sprite graphic
 37545 LD L,A        ; }
 37546 LD A,(DE)     ; Pick up a sprite graphic byte
 37547 OR (HL)       ; Merge it with the background
 37548 LD (HL),A     ; Save the resultant byte to the screen buffer
 37549 INC HL        ; Move #REGhl along to the next cell to the right
 37550 INC DE        ; Point #REGde at the next sprite graphic byte
 37551 LD A,(DE)     ; Pick it up in #REGa
 37552 OR (HL)       ; Merge it with the background
 37553 LD (HL),A     ; Save the resultant byte to the screen buffer
 37554 INC IX        ; {Point #REGix at the next entry in the screen buffer
 37556 INC IX        ; address lookup table at #R33536}
 37558 INC DE        ; Point #REGde at the next sprite graphic byte
 37559 DJNZ 37538    ; Jump back until all 16 rows of pixels have been drawn
 37561 RET           ;

; Print a message
;
; Used by the routines at #R34252, #R34436, #R34574, #R35140 and #R36904.
;
; IX Address of the message
; C Length of the message
; DE Display file address
@label=PMESS
c37562 LD A,(IX+0)   ; Collect a character from the message
 37565 CALL 37579    ; Print it
 37568 INC IX        ; Point #REGix at the next character in the message
 37570 INC E         ; {Point #REGde at the next character cell (subtracting 8
 37571 LD A,D        ; from #REGd compensates for the operations performed by
 37572 SUB 8         ; the routine at #R37579)
 37574 LD D,A        ; }
 37575 DEC C         ; Have we printed the entire message yet?
 37576 JR NZ,37562   ; If not, jump back to print the next character
 37578 RET           ;

; Print a single character
;
; Used by the routine at #R37562.
;
; A ASCII code of the character
; DE Display file address
@label=PRINTCHAR
c37579 LD H,7        ; {Point #REGhl at the bitmap for the character (in the
 37581 LD L,A        ; ROM)
 37582 SET 7,L       ;
 37584 ADD HL,HL     ;
 37585 ADD HL,HL     ;
 37586 ADD HL,HL     ; }
 37587 LD B,8        ; There are eight pixel rows in a character bitmap
; This entry point is used by the routine at #R36707 to draw an item in the
; current cavern.
*37589 LD A,(HL)     ; {Copy the character bitmap to the screen (or item
 37590 LD (DE),A     ; graphic to the screen buffer)
 37591 INC HL        ;
 37592 INC D         ;
 37593 DJNZ 37589    ; }
 37595 RET           ;

; Play the theme tune (The Blue Danube)
;
; Used by the routine at #R34252. Returns with the zero flag reset if ENTER or
; the fire button is pressed while the tune is being played.
;
; IY #R33902 (tune data)
@label=PLAYTUNE
c37596 LD A,(IY+0)   ; Pick up the next byte of tune data from the table at
                     ; #R33902
 37599 CP 255        ; Has the tune finished?
 37601 RET Z         ; Return (with the zero flag set) if so
 37602 LD C,A        ; Copy the first byte of data for this note (which
                     ; determines the duration) to #REGc
 37603 LD B,0        ; Initialise #REGb, which will be used as a delay counter
                     ; in the note-producing loop
 37605 XOR A         ; Set #REGa=0 (for no apparent reasaon)
 37606 LD D,(IY+1)   ; Pick up the second byte of data for this note
 37609 LD A,D        ; Copy it to #REGa
 37610 CALL 37675    ; Calculate the attribute file address for the
                     ; corresponding piano key
 37613 LD (HL),80    ; Set the attribute byte for the piano key to #b80 (INK 0:
                     ; PAPER 2: BRIGHT 1)
 37615 LD E,(IY+2)   ; Pick up the third byte of data for this note
 37618 LD A,E        ; Copy it to #REGa
 37619 CALL 37675    ; Calculate the attribute file address for the
                     ; corresponding piano key
 37622 LD (HL),40    ; Set the attribute byte for the piano key to #b40 (INK 0:
                     ; PAPER 5: BRIGHT 0)
*37624 OUT (254),A   ; {Produce a sound based on the frequency parameters in
 37626 DEC D         ; the second and third bytes of data for this note (copied
 37627 JR NZ,37634   ; into #REGd and #REGe)
 37629 LD D,(IY+1)   ;
 37632 XOR 24        ;
*37634 DEC E         ;
 37635 JR NZ,37642   ;
 37637 LD E,(IY+2)   ;
 37640 XOR 24        ;
*37642 DJNZ 37624    ;
 37644 DEC C         ;
 37645 JR NZ,37624   ; }
 37647 CALL 37687    ; Check whether ENTER or the fire button is being pressed
 37650 RET NZ        ; Return (with the zero flag reset) if it is
 37651 LD A,(IY+1)   ; Pick up the second byte of data for this note
 37654 CALL 37675    ; Calculate the attribute file address for the
                     ; corresponding piano key
 37657 LD (HL),56    ; Set the attribute byte for the piano key back to #b56
                     ; (INK 0: PAPER 7: BRIGHT 0)
 37659 LD A,(IY+2)   ; Pick up the third byte of data for this note
 37662 CALL 37675    ; Calculate the attribute file address for the
                     ; corresponding piano key
 37665 LD (HL),56    ; Set the attribute byte for the piano key back to #b56
                     ; (INK 0: PAPER 7: BRIGHT 0)
 37667 INC IY        ; {Move #REGiy along to the data for the next note in the
 37669 INC IY        ; tune
 37671 INC IY        ; }
 37673 JR 37596      ; Jump back to play the next note

; Calculate the attribute file address for a piano key
;
; Used by the routine at #R37596. Returns with the attribute file address in
; #REGhl.
;
; A Frequency parameter from the tune data table at #R33902
@label=PIANOKEY
c37675 SUB 8         ; {Compute the piano key index (K) based on the frequency
 37677 RRCA          ; parameter (F), and store it in bits 0-4 of #REGa:
 37678 RRCA          ; K=31-INT((F-8)/8)
 37679 RRCA          ;
 37680 CPL           ; }
 37681 OR 224        ; #REGa=#b224+K; this is the LSB
 37683 LD L,A        ; {Set #REGhl to the attribute file address for the piano
 37684 LD H,89       ; key}
 37686 RET           ;

; Check whether ENTER or the fire button is being pressed
;
; Used by the routine at #R37596. Returns with the zero flag reset if ENTER or
; the fire button on the joystick is being pressed.
@label=CHECKENTER
c37687 LD A,(33881)  ; Pick up the Kempston joystick indicator from #R33881
 37690 OR A          ; Is the joystick connected?
 37691 JR Z,37698    ; Jump if not
 37693 IN A,(31)     ; Collect input from the joystick
 37695 BIT 4,A       ; Is the fire button being pressed?
 37697 RET NZ        ; Return (with the zero flag reset) if so
@keep
*37698 LD BC,49150   ; {Read keys H-J-K-L-ENTER
 37701 IN A,(C)      ; }
 37703 AND 1         ; Keep only bit 0 of the result (ENTER)
 37705 CP 1          ; Reset the zero flag if ENTER is being pressed
 37707 RET           ;

@assemble=1
; Source code remnants
;
; The source code here corresponds to the code at #R34900.
@label=SOURCE
u37708 DEFM 9,"DEC",9,"E"                  ; DEC E
 37714 DEFW 3960                           ; {3960 JR NZ,NOFLP6
 37716 DEFB 13                             ;
 37717 DEFM 9,"JR",9,"NZ,NOFLP6"           ; }
 37730 DEFW 3970                           ; {3970 LD E,(HL)
 37732 DEFB 10                             ;
 37733 DEFM 9,"LD",9,"E,(HL)"              ; }
 37743 DEFW 3980                           ; {3980 XOR 24
 37745 DEFB 7                              ;
 37746 DEFM 9,"XOR",9,"24"                 ; }
 37753 DEFW 3990                           ; {3990 NOFLP6 DJNZ TM51
 37755 DEFB 16                             ;
 37756 DEFM "NOFLP6",9,"DJNZ",9,"TM51"     ; }
 37772 DEFW 4000                           ; {4000 DEC C
 37774 DEFB 6                              ;
 37775 DEFM 9,"DEC",9,"C"                  ; }
 37781 DEFW 4010                           ; {4010 JR NZ,TM51
 37783 DEFB 11                             ;
 37784 DEFM 9,"JR",9,"NZ,TM51"             ; }
 37795 DEFW 4020                           ; {4020 NONOTE4 LD A,(DEMO)
 37797 DEFB 19                             ;
 37798 DEFM "NONOTE4",9,"LD",9,"A,(DEMO)"  ; }
 37817 DEFW 4030                           ; {4030 OR A
 37819 DEFB 5                              ;
 37820 DEFM 9,"OR",9,"A"                   ; }
 37825 DEFW 4040                           ; {4040 JR Z,NODEM1
 37827 DEFB 12                             ;
 37828 DEFM 9,"JR",9,"Z,NODEM1"            ; }
 37840 DEFW 4050                           ; {4050 DEC A
 37842 DEFB 6                              ;
 37843 DEFM 9,"DEC",9,"A"                  ; }
 37849 DEFW 4060                           ; {4060 JP Z,MANDEAD
 37851 DEFB 13                             ;
 37852 DEFM 9,"JP",9,"Z,MANDEAD"           ; }
 37865 DEFW 4070                           ; {4070 LD (DEMO),A
 37867 DEFB 12                             ;
 37868 DEFM 9,"LD",9,"(DEMO),A"            ; }
 37880 DEFW 4080                           ; {4080 LD BC,0FEH
 37882 DEFB 11                             ;
 37883 DEFM 9,"LD",9,"BC,0FEH"             ; }
 37894 DEFW 4090                           ; {4090 IN A,(C)
 37896 DEFB 9                              ;
 37897 DEFM 9,"IN",9,"A,(C)"               ; }
 37906 DEFW 4100                           ; {4100 AND 31
 37908 DEFB 7                              ;
 37909 DEFM 9,"AND",9,"31"                 ; }
 37916 DEFW 4110                           ; {4110 CP 31
 37918 DEFB 6                              ;
 37919 DEFM 9,"CP",9,"31"                  ; }
 37925 DEFW 4120                           ; {4120 JP NZ,START
 37927 DEFB 12                             ;
 37928 DEFM 9,"JP",9,"NZ,START"            ; }
 37940 DEFW 4130                           ; {4130 LD A,(KEMP)
 37942 DEFB 12                             ;
 37943 DEFM 9,"LD",9,"A,(KEMP)"            ; }
 37955 DEFW 4140                           ; {4140 OR A
 37957 DEFB 5                              ;
 37958 DEFM 9,"OR",9,"A"                   ; }
 37963 DEFW 4150                           ; {4150 JR Z,NODEM1
 37965 DEFB 12                             ;
 37966 DEFM 9,"JR",9,"Z,NODEM1"            ; }
 37978 DEFW 4160                           ; {4160 IN A,(31)
 37980 DEFB 10                             ;
 37981 DEFM 9,"IN",9,"A,(31)"              ; }
 37991 DEFW 4170                           ; {4170 OR A
 37993 DEFB 5                              ;
 37994 DEFM 9,"OR",9,"A"                   ; }
 37999 DEFW 4180                           ; {4180 JP NZ,START
 38001 DEFB 12                             ;
 38002 DEFM 9,"JP",9,"NZ,START"            ; }
 38014 DEFW 4190                           ; {4190 NODEM1 LD BC,0EFFEH
 38016 DEFB 19                             ;
 38017 DEFM "NODEM1",9,"LD",9,"BC,0EFFEH"  ; }
 38036 DEFW 4200                           ; {4200 IN A,(C)
 38038 DEFB 9                              ;
 38039 DEFM 9,"IN",9,"A,(C)"               ; }
 38048 DEFW 4210                           ; {4210 BIT 4,A
 38050 DEFB 8                              ;
 38051 DEFM 9,"BIT",9,"4,A"                ; }
 38059 DEFW 4220                           ; {4220 JP NZ,CKCHEAT
 38061 DEFB 14                             ;
 38062 DEFM 9,"JP",9,"NZ,CKCHEAT"          ; }
 38076 DEFW 4230                           ; {4230 LD A,(CHEAT)
 38078 DEFB 13                             ;
 38079 DEFM 9,"LD",9,"A,(CHEAT)"           ; }
 38092 DEFW 4240                           ; {4240 CP 7
 38094 DEFB 5                              ;
 38095 DEFM 9,"CP",9,"7"                   ; }
 38100 DEFW 4250                           ; {4250 JP NZ,CKCHEAT
 38102 DEFB 14                             ;
 38103 DEFM 9,"JP",9,"NZ,CKCHEAT"          ; }
 38117 DEFW 4260                           ; {4260 LD B,0F7H
 38119 DEFB 10                             ;
 38120 DEFM 9,"LD",9,"B,0F7H"              ; }
 38130 DEFW 4270                           ; {4270 IN A,(C)
 38132 DEFB 9                              ;
 38133 DEFM 9,"IN",9,"A,(C)"               ; }
 38142 DEFW 4280                           ; {4280 CPL
 38144 DEFB 4                              ;
 38145 DEFM 9,"CPL"                        ; }
 38149 DEFW 4290                           ; {4290 AND 31
 38151 DEFB 7                              ;
 38152 DEFM 9,"AND",9,"31"                 ; }
 38159 DEFW 4300                           ; {4300 CP 20
 38161 DEFB 6                              ;
 38162 DEFM 9,"CP",9,"20"                  ; }
 38168 DEFW 4310                           ; {4310 JP NC,CKCHEAT
 38170 DEFB 14                             ;
 38171 DEFM 9,"JP",9,"NC,CKCHEAT"          ; }
 38185 DEFW 4320                           ; {4320 LD (SHEET),A
 38187 DEFB 13                             ;
 38188 DEFM 9,"LD",9,"(SHEET),A"           ; }
 38201 DEFW 4330                           ; {4330 JP NEWSHT
 38203 DEFB 10                             ;
 38204 DEFM 9,"JP",9,"NEWSHT"              ; }
 38214 DEFW 4340                           ; {4340 CKCHEAT LD A,(CHEAT)
 38216 DEFB 20                             ;
 38217 DEFM "CKCHEAT",9,"LD",9,"A,(CHEAT)" ; }
 38237 DEFW 4350                           ; {4350 CP 7
 38239 DEFB 5                              ;
 38240 DEFM 9,"CP",9,"7"                   ; }
 38245 DEFW 4360                           ; {4360 JP Z,LOOP
 38247 DEFB 10                             ;
 38248 DEFM 9,"JP",9,"Z,LOOP"              ; }
 38258 DEFW 4370                           ; {4370 RLCA
 38260 DEFB 5                              ;
 38261 DEFM 9,"RLCA"                       ; }
 38266 DEFW 4380                           ; {4380 LD E,A
 38268 DEFB 7                              ;
 38269 DEFM 9,"LD",9,"E,A"                 ; }
 38276 DEFW 4390                           ; {4390 LD D,0
 38278 DEFB 7                              ;
 38279 DEFM 9,"LD",9,"D,0"                 ; }
 38286 DEFW 4400                           ; {4400 LD IX,CHEATDT
 38288 DEFB 14                             ;
 38289 DEFM 9,"LD",9,"IX,CHEATDT"          ; }
 38303 DEFW 4410                           ; {4410 ADD IX,DE
 38305 DEFB 10                             ;
 38306 DEFM 9,"ADD",9,"IX,DE"              ; }
 38316 DEFW 4420                           ; {4420 LD BC,0F7FEH
 38318 DEFB 13                             ;
 38319 DEFM 9,"LD",9,"BC,0F7FEH"           ; }
 38332 DEFW 4430                           ; {4430 IN A,(C)
 38334 DEFB 9                              ;
 38335 DEFM 9,"IN",9,"A,(C)"               ; }
 38344 DEFW 4440                           ; {4440 AND 31
 38346 DEFB 7                              ;
 38347 DEFM 9,"AND",9,"31"                 ; }
 38354 DEFW 4450                           ; {4450 CP (IX+0)
 38356 DEFB 10                             ;
 38357 DEFM 9,"CP",9,"(IX+0)"              ; }
 38367 DEFW 4460                           ; {4460 JR Z,CKNXCHT
 38369 DEFB 13                             ;
 38370 DEFM 9,"JR",9,"Z,CKNXCHT"           ; }
 38383 DEFW 4470                           ; {4470 CP 31
 38385 DEFB 6                              ;
 38386 DEFM 9,"CP",9,"31"                  ; }
 38392 DEFW 4480                           ; {4480 JP Z,LOOP
 38394 DEFB 10                             ;
 38395 DEFM 9,"JP",9,"Z,LOOP"              ; }
 38405 DEFW 4490                           ; {4490 CP (IX-2)
 38407 DEFB 10                             ;
 38408 DEFM 9,"CP",9,"(IX-2)"              ; }
 38418 DEFW 4500                           ; {4500 JP Z,LOOP
 38420 DEFB 10                             ;
 38421 DEFM 9,"JP",9,"Z,LOOP"              ; }
 38431 DEFW 4510                           ; {4510 XOR A
 38433 DEFB 6                              ;
 38434 DEFM 9,"XOR",9,"A"                  ; }
 38440 DEFW 4520                           ; {4520 LD (CHEAT),A
 38442 DEFB 13                             ;
 38443 DEFM 9,"LD",9,"(CHEAT),A"           ; }
 38456 DEFW 4530                           ; {4530 JP LOOP
 38458 DEFB 8                              ;
 38459 DEFM 9,"JP",9,"LOOP"                ; }
 38467 DEFW 4540                           ; {4540 CKNXCHT LD B,0EFH
 38469 DEFB 17                             ;
 38470 DEFM "CKNXCHT",9,"LD",9,"B,0EFH"    ; }
 38487 DEFW 4550                           ; {4550 IN A,(C)
 38489 DEFB 9                              ;
 38490 DEFM 9,"IN",9,"A,(C)"               ; }
 38499 DEFW 4560                           ; {4560 AND 31
 38501 DEFB 7                              ;
 38502 DEFM 9,"AND",9,"31"                 ; }
 38509 DEFW 4570                           ; {4570 CP (IX+1)
 38511 DEFB 10                             ;
 38512 DEFM 9,"CP",9,"(IX+1)"              ; }
 38522 DEFW 4580                           ; {4580 JR Z,INCCHT
 38524 DEFB 12                             ;
 38525 DEFM 9,"JR",9,"Z,INCCHT"            ; }
 38537 DEFW 4590                           ; {4590 CP 31
 38539 DEFB 6                              ;
 38540 DEFM 9,"CP",9,"31"                  ; }
 38546 DEFW 4600                           ; {4600 JP Z,LOOP
 38548 DEFB 10                             ;
 38549 DEFM 9,"JP",9,"Z,LOOP"              ; }
 38559 DEFW 4610                           ; {4610 CP (IX-1)
 38561 DEFB 10                             ;
 38562 DEFM 9,"CP",9,"(IX-1)"              ; }
 38572 DEFW 4620                           ; {4620 JP Z,LOOP
 38574 DEFB 10                             ;
 38575 DEFM 9,"JP",9,"Z,LOOP"              ; }
 38585 DEFW 4630                           ; {4630 XOR A
 38587 DEFB 6                              ;
 38588 DEFM 9,"XOR",9,"A"                  ; }
 38594 DEFW 4640                           ; {4640 LD (CHEAT),A
 38596 DEFB 13                             ;
 38597 DEFM 9,"LD",9,"(CHEAT),A"           ; }
 38610 DEFW 4650                           ; {4650 JP LOOP
 38612 DEFB 8                              ;
 38613 DEFM 9,"JP",9,"LOOP"                ; }
 38621 DEFW 4660                           ; {4660 INCCHT LD A,(CHEAT)
 38623 DEFB 19                             ;
 38624 DEFM "INCCHT",9,"LD",9,"A,(CHEAT)"  ; }
 38643 DEFW 4670                           ; {4670 INC A
 38645 DEFB 6                              ;
 38646 DEFM 9,"INC",9,"A"                  ; }
 38652 DEFW 4680                           ; {4680 LD (CHEAT),A
 38654 DEFB 13                             ;
 38655 DEFM 9,"LD",9,"(CHEAT),A"           ; }
 38668 DEFW 4690                           ; {4690 JP LOOP
 38670 DEFB 8                              ;
 38671 DEFM 9,"JP",9,"LOOP"                ; }
 38679 DEFW 4700                           ; {4700 MANDEAD LD A,(DEMO)
 38681 DEFB 19                             ;
 38682 DEFM "MANDEAD",9,"LD",9,"A,(DEMO)"  ; }
 38701 DEFW 4710                           ; {4710 OR A
 38703 DEFB 5                              ;
 38704 DEFM 9,"OR",9,"A"                   ; }
 38709 DEFW 4720                           ; {4720 JP NZ,NXSHEET
 38711 DEFB 14                             ;
 38712 DEFM 9,"JP",9,"NZ,NXSHEET"          ; }
 38726 DEFW 4730                           ; {4730 LD A,47H
 38728 DEFB 9                              ;
 38729 DEFM 9,"LD",9,"A,47H"               ; }
 38738 DEFW 4740                           ; {4740 LPDEAD1 LD HL,5800H
 38740 DEFB 19                             ;
 38741 DEFM "LPDEAD1",9,"LD",9,"HL,5800H"  ; }
 38760 DEFW 4750                           ; {4750 LD DE,5801H
 38762 DEFB 12                             ;
 38763 DEFM 9,"LD",9,"DE,5801H"            ; }
 38775 DEFW 4760                           ; {4760 LD BC,1FFH
 38777 DEFB 11                             ;
 38778 DEFM 9,"LD",9,"BC,1FFH"             ; }
 38789 DEFW 4770                           ; {4770 LD (HL),A
 38791 DEFB 10                             ;
 38792 DEFM 9,"LD",9,"(HL),A"              ; }
 38802 DEFW 4780                           ; {4780 LDIR
 38804 DEFB 5                              ;
 38805 DEFM 9,"LDIR"                       ; }
 38810 DEFW 4790                           ; {4790 LD E,A
 38812 DEFB 7                              ;
 38813 DEFM 9,"LD",9,"E,A"                 ; }
 38820 DEFW 4800                           ; {4800 CPL
 38822 DEFB 4                              ;
 38823 DEFM 9,"CPL"                        ; }
 38827 DEFW 4810                           ; {4810 AND 7
 38829 DEFB 6                              ;
 38830 DEFM 9,"AND",9,"7"                  ; }
 38836 DEFW 4820                           ; {4820 RLCA
 38838 DEFB 5                              ;
 38839 DEFM 9,"RLCA"                       ; }
 38844 DEFW 4830                           ; {4830 RLCA
 38846 DEFB 5                              ;
 38847 DEFM 9,"RLCA"                       ; }
 38852 DEFW 4840                           ; {4840 RLCA
 38854 DEFB 5                              ;
 38855 DEFM 9,"RLCA"                       ; }
 38860 DEFW 4850                           ; {4850 OR 7
 38862 DEFB 5                              ;
 38863 DEFM 9,"OR",9,"7"                   ; }
 38868 DEFW 4860                           ; {4860 LD D,A
 38870 DEFB 7                              ;
 38871 DEFM 9,"LD",9,"D,A"                 ; }
 38878 DEFW 4870                           ; {4870 LD C,E
 38880 DEFB 7                              ;
 38881 DEFM 9,"LD",9,"C,E"                 ; }
 38888 DEFW 4880                           ; {4880 RRC C
 38890 DEFB 6                              ;
 38891 DEFM 9,"RRC",9,"C"                  ; }
 38897 DEFW 4890                           ; {4890 RRC C
 38899 DEFB 6                              ;
 38900 DEFM 9,"RRC",9,"C"                  ; }
 38906 DEFW 4900                           ; {4900 RRC C
 38908 DEFB 6                              ;
 38909 DEFM 9,"RRC",9,"C"                  ; }
 38915 DEFW 4910                           ; {4910 OR 16
 38917 DEFB 6                              ;
 38918 DEFM 9,"OR",9,"16"                  ; }
 38924 DEFW 4920                           ; {4920 XOR A
 38926 DEFB 6                              ;
 38927 DEFM 9,"XOR",9,"A"                  ; }
 38933 DEFW 4930                           ; {4930 TM21 OUT (254),A
 38935 DEFB 16                             ;
 38936 DEFM "TM21",9,"OUT",9,"(254),A"     ; }
 38952 DEFW 4940                           ; {4940 XOR 24
 38954 DEFB 7                              ;
 38955 DEFM 9,"XOR",9,"24"                 ; }
 38962 DEFW 4950                           ; {4950 LD B,D
 38964 DEFB 7                              ;
 38965 DEFM 9,"LD",9,"B,D"                 ; }
 38972 DEFW 4960                           ; {4960 TM22 DJNZ TM22
 38974 DEFB 14                             ;
 38975 DEFM "TM22",9,"DJNZ",9,"TM22"       ; }
 38989 DEFW 4970                           ; {4970 DEC C
 38991 DEFB 6                              ;
 38992 DEFM 9,"DEC",9,"C"                  ; }
 38998 DEFW 4980                           ; {4980 JR NZ,TM21
 39000 DEFB 11                             ;
 39001 DEFM 9,"JR",9,"NZ,TM21"             ; }
 39012 DEFW 4990                           ; {4990 LD A,E
 39014 DEFB 7                              ;
 39015 DEFM 9,"LD",9,"A,E"                 ; }
 39022 DEFW 5000                           ; {5000 DEC A
 39024 DEFB 6                              ;
 39025 DEFM 9,"DEC",9,"A"                  ; }
 39031 DEFW 5010                           ; {5010 CP 3FH
 39033 DEFB 7                              ;
 39034 DEFM 9,"CP",9,"3FH"                 ; }
 39041 DEFW 5020                           ; {5020 JR NZ,LPDEAD1
 39043 DEFB 14                             ;
 39044 DEFM 9,"JR",9,"NZ,LPDEAD1"          ; }
 39058 DEFW 5030                           ; {5030 LD HL,NOMEN
 39060 DEFB 12                             ;
 39061 DEFM 9,"LD",9,"HL,NOMEN"            ; }
 39073 DEFW 5040                           ; {5040 LD A,(HL)
 39075 DEFB 10                             ;
 39076 DEFM 9,"LD",9,"A,(HL)"              ; }
 39086 DEFW 5050                           ; {5050 OR A
 39088 DEFB 5                              ;
 39089 DEFM 9,"OR",9,"A"                   ; }
 39094 DEFW 5060                           ; {5060 JP Z,ENDGAM
 39096 DEFB 12                             ;
 39097 DEFM 9,"JP",9,"Z,ENDGAM"            ; }
 39109 DEFW 5070                           ; {5070 DEC (HL)
 39111 DEFB 9                              ;
 39112 DEFM 9,"DEC",9,"(HL)"               ; }
 39121 DEFW 5080                           ; {5080 JP NEWSHT
 39123 DEFB 10                             ;
 39124 DEFM 9,"JP",9,"NEWSHT"              ; }
 39134 DEFW 5090                           ; {5090 ENDGAM LD HL,HGHSCOR
 39136 DEFB 20                             ;
 39137 DEFM "ENDGAM",9,"LD",9,"HL,HGHSCOR" ; }
 39157 DEFW 5100                           ; {5100 LD DE,SCORBUF
 39159 DEFB 14                             ;
 39160 DEFM 9,"LD",9,"DE,SCORBUF"          ; }
 39174 DEFW 5110                           ; {5110 LD B,6
 39176 DEFB 7                              ;
 39177 DEFM 9,"LD",9,"B,6"                 ; }
 39184 DEFW 5120                           ; {5120 LPHGH LD A,(DE)
 39186 DEFB 15                             ;
 39187 DEFM "LPHGH",9,"LD",9,"A,(DE)"      ; }
 39202 DEFW 5130                           ; {5130 CP (HL)
 39204 DEFB 8                              ;
 39205 DEFM 9,"CP",9,"(HL)"                ; }
 39213 DEFW 5140                           ; {5140 JP C,FEET
 39215 DEFB 10                             ;
 39216 DEFM 9,"JP",9,"C,FEET"              ; }
 39226 DEFW 5150                           ; {5150 JP NZ,NEWHGH
 39228 DEFB 13                             ;
 39229 DEFM 9,"JP",9,"NZ,NEWHGH"           ; }
 39242 DEFW 5160                           ; {5160 INC HL
 39244 DEFB 7                              ;
 39245 DEFM 9,"INC",9,"HL"                 ; }
 39252 DEFW 5170                           ; {5170 INC DE
 39254 DEFB 7                              ;
 39255 DEFM 9,"INC",9,"DE"                 ; }
 39262 DEFW 5180                           ; {5180 DJNZ LPHGH
 39264 DEFB 11                             ;
 39265 DEFM 9,"DJNZ",9,"LPHGH"             ; }
 39276 DEFW 5190                           ; {5190 NEWHGH LD HL,SCORBUF
 39278 DEFB 20                             ;
 39279 DEFM "NEWHGH",9,"LD",9,"HL,SCORBUF" ; }
 39299 DEFW 5200                           ; {5200 LD DE,HGHSCOR
 39301 DEFB 14                             ;
 39302 DEFM 9,"LD",9,"DE,HGHSCOR"          ; }
 39316 DEFW 5210                           ; {5210 LD BC,6
 39318 DEFB 8                              ;
 39319 DEFM 9,"LD",9,"BC,6"                ; }
 39327 DEFW 5220                           ; {5220 LDIR
 39329 DEFB 5                              ;
 39330 DEFM 9,"LDIR"                       ; }
 39335 DEFW 5230                           ; {5230 FEET LD HL,4000H
 39337 DEFB 16                             ;
 39338 DEFM "FEET",9,"LD",9,"HL,4000H"     ; }
 39354 DEFW 5240                           ; {5240 LD DE,4001H
 39356 DEFB 12                             ;
 39357 DEFM 9,"LD",9,"DE,4001H"            ; }
 39369 DEFW 5250                           ; {5250 LD BC,0FFFH
 39371 DEFB 12                             ;
 39372 DEFM 9,"LD",9,"BC,0FFFH"            ; }
 39384 DEFW 5260                           ; {5260 LD (HL),0
 39386 DEFB 10                             ;
 39387 DEFM 9,"LD",9,"(HL),0"              ; }
 39397 DEFW 5270                           ; {5270 LDIR
 39399 DEFB 5                              ;
 39400 DEFM 9,"LDIR"                       ; }
 39405 DEFW 5280                           ; {5280 XOR A
 39407 DEFB 6                              ;
 39408 DEFM 9,"XOR",9,"A"                  ; }
 39414 DEFW 5290                           ; {5290 LD (EUGHGT),A
 39416 DEFB 14                             ;
 39417 DEFM 9,"LD",9,"(EUGHGT),A"          ; }
 39431 DEFW 5300                           ; {5300 LD DE,MANDAT+64
 39433 DEFB 16                             ;
 39434 DEFM 9,"LD",9,"DE,MANDAT+64"        ; }
 39450 DEFW 5310                           ; {5310 LD HL,488FH
 39452 DEFB 12                             ;
 39453 DEFM 9,"LD",9,"HL,488FH"            ; }
 39465 DEFW 5320                           ; {5320 LD C,0
 39467 DEFB 7                              ;
 39468 DEFM 9,"LD",9,"C,0"                 ; }
 39475 DEFW 5330                           ; {5330 CALL DRWFIX
 39477 DEFB 12                             ;
 39478 DEFM 9,"CALL",9,"DRWFIX"            ; }
 39490 DEFW 5340                           ; {5340 LD DE,0B6E0H
 39492 DEFB 13                             ;
 39493 DEFM 9,"LD",9,"DE,0B6E0H"           ; }
 39506 DEFW 5350                           ; {5350 LD HL,48CFH
 39508 DEFB 12                             ;
 39509 DEFM 9,"LD",9,"HL,48CFH"            ; }
 39521 DEFW 5360                           ; {5360 LD C,0
 39523 DEFB 7                              ;
 39524 DEFM 9,"LD",9,"C,0"                 ; }
 39531 DEFW 5370                           ; {5370 CALL DRWFIX
 39533 DEFB 12                             ;
 39534 DEFM 9,"CALL",9,"DRWFIX"            ; }
 39546 DEFW 5380                           ; {5380 LOOPFT LD A,(EUGHGT)
 39548 DEFB 20                             ;
 39549 DEFM "LOOPFT",9,"LD",9,"A,(EUGHGT)" ; }
 39569 DEFW 5390                           ; {5390 LD C,A
 39571 DEFB 7                              ;
 39572 DEFM 9,"LD",9,"C,A"                 ; }
 39579 DEFW 5400                           ; {5400 LD B,83H
 39581 DEFB 9                              ;
 39582 DEFM 9,"LD",9,"B,83H"               ; }
 39591 DEFW 5410                           ; {5410 LD A,(BC)
 39593 DEFB 10                             ;
 39594 DEFM 9,"LD",9,"A,(BC)"              ; }
 39604 DEFW 5420                           ; {5420 OR 0FH
 39606 DEFB 7                              ;
 39607 DEFM 9,"OR",9,"0FH"                 ; }
 39614 DEFW 5430                           ; {5430 LD L,A
 39616 DEFB 7                              ;
 39617 DEFM 9,"LD",9,"L,A"                 ; }
 39624 DEFW 5440                           ; {5440 INC BC
 39626 DEFB 7                              ;
 39627 DEFM 9,"INC",9,"BC"                 ; }
 39634 DEFW 5450                           ; {5450 LD A,(BC)
 39636 DEFB 10                             ;
 39637 DEFM 9,"LD",9,"A,(BC)"              ; }
 39647 DEFW 5460                           ; {5460 SUB 20H
 39649 DEFB 8                              ;
 39650 DEFM 9,"SUB",9,"20H"                ; }
 39658 DEFW 5470                           ; {5470 LD H,A
 39660 DEFB 7                              ;
 39661 DEFM 9,"LD",9,"H,A"                 ; }
 39668 DEFW 5480                           ; {5480 LD DE,0BAE0H
 39670 DEFB 13                             ;
 39671 DEFM 9,"LD",9,"DE,0BAE0H"           ; }
 39684 DEFW 5490                           ; {5490 LD C,0
 39686 DEFB 7                              ;
 39687 DEFM 9,"LD",9,"C,0"                 ; }
 39694 DEFW 5500                           ; {5500 CALL DRWFIX
 39696 DEFB 12                             ;
 39697 DEFM 9,"CALL",9,"DRWFIX"            ; }
 39709 DEFW 5510                           ; {5510 LD A,(EUGHGT)
 39711 DEFB 14                             ;
 39712 DEFM 9,"LD",9,"A,(EUGHGT)"          ; }
 39726 DEFW 5520                           ; {5520 CPL
 39728 DEFB 4                              ;
 39729 DEFM 9,"CPL"                        ; }
 39733 DEFW 5530                           ; {5530 LD E,A
 39735 DEFB 7                              ;
 39736 DEFM 9,"LD",9,"E,A"                 ; }
 39743 DEFW 5540                           ; {5540 XOR A
 39745 DEFB 6                              ;
 39746 DEFM 9,"XOR",9,"A"                  ; }
 39752 DEFW 5550                           ; {5550 LD BC,40H
 39754 DEFB 10                             ;
 39755 DEFM 9,"LD",9,"BC,40H"              ; }
 39765 DEFW 5560                           ; {5560 TM111 OUT (254),A
 39767 DEFB 17                             ;
 39768 DEFM "TM111",9,"OUT",9,"(254),A"    ; }
 39785 DEFW 5570                           ; {5570 XOR 24
 39787 DEFB 7                              ;
 39788 DEFM 9,"XOR",9,"24"                 ; }
 39795 DEFW 5580                           ; {5580 LD B,E
 39797 DEFB 7                              ;
 39798 DEFM 9,"LD",9,"B,E"                 ; }
 39805 DEFW 5590                           ; {5590 TM112 DJNZ TM112
 39807 DEFB 16                             ;
 39808 DEFM "TM112",9,"DJNZ",9,"TM112"     ; }
 39824 DEFW 5600                           ; {5600 DEC C
 39826 DEFB 6                              ;
 39827 DEFM 9,"DEC",9,"C"                  ; }
 39833 DEFW 5610                           ; {5610 JR NZ,TM111
 39835 DEFB 12                             ;
 39836 DEFM 9,"JR",9,"NZ,TM111"            ; }
 39848 DEFW 5620                           ; {5620 LD HL,5800H
 39850 DEFB 12                             ;
 39851 DEFM 9,"LD",9,"HL,5800H"            ; }
 39863 DEFW 5630                           ; {5630 LD DE,5801H
 39865 DEFB 12                             ;
 39866 DEFM 9,"LD",9,"DE,5801H"            ; }
 39878 DEFW 5640                           ; {5640 LD BC,1FFH
 39880 DEFB 11                             ;
 39881 DEFM 9,"LD",9,"BC,1FFH"             ; }
 39892 DEFW 5650                           ; {5650 LD A,(EUGHGT)
 39894 DEFB 14                             ;
 39895 DEFM 9,"LD",9,"A,(EUGHGT)"          ; }
 39909 DEFW 5660                           ; {5660 AND 0CH
 39911 DEFB 8                              ;
 39912 DEFM 9,"AND",9,"0CH"                ; }
 39920 DEFW 5670                           ; {5670 RLCA
 39922 DEFB 5                              ;
 39923 DEFM 9,"RLCA"                       ; }
 39928 DEFW 5680                           ; {5680 OR 47H
 39930 DEFB 7                              ;
 39931 DEFM 9,"OR",9,"47H"                 ; }
 39938 DEFW 5690                           ; {5690 LD (HL),A
 39940 DEFB 10                             ;
 39941 DEFM 9,"LD",9,"(HL),A"              ; }
 39951 DEFW 5700                           ; {5700 LDIR
 39953 DEFB 5                              ;
 39954 DEFM 9,"LDIR"                       ; }
 39959 DEFW 5710                           ; {5710 LD A,(EUGHGT)
 39961 DEFB 14                             ;
 39962 DEFM 9,"LD",9,"A,(EUGHGT)"          ; }
 39976 DEFW 5720                           ; {5720 ADD A,4
 39978 DEFB 8                              ;
 39979 DEFM 9,"ADD",9,"A,4"                ; }
 39987 DEFW 5730                           ; {5730 LD (EUGHGT),A
 39989 DEFB 14                             ;
 39990 DEFM 9,"LD",9,"(EUGHGT),A"          ; }
 40004 DEFW 5740                           ; {5740 CP 0C4H
 40006 DEFB 8                              ;
 40007 DEFM 9,"CP",9,"0C4H"                ; }
 40015 DEFW 5750                           ; {5750 JR NZ,LOOPFT
 40017 DEFB 13                             ;
 40018 DEFM 9,"JR",9,"NZ,LOOPFT"           ; }
 40031 DEFW 5760                           ; {5760 LD IX,MESSG
 40033 DEFB 12                             ;
 40034 DEFM 9,"LD",9,"IX,MESSG"            ; }
 40046 DEFW 5770                           ; {5770 LD C,4
 40048 DEFB 7                              ;
 40049 DEFM 9,"LD",9,"C,4"                 ; }
 40056 DEFW 5780                           ; {5780 LD DE,40CAH
 40058 DEFB 12                             ;
 40059 DEFM 9,"LD",9,"DE,40CAH"            ; }
 40071 DEFW 5790                           ; {5790 CALL PMESS
 40073 DEFB 11                             ;
 40074 DEFM 9,"CALL",9,"PMESS"             ; }
 40085 DEFW 5800                           ; {5800 LD IX,MESSO
 40087 DEFB 12                             ;
 40088 DEFM 9,"LD",9,"IX,MESSO"            ; }
 40100 DEFW 5810                           ; {5810 LD C,4
 40102 DEFB 7                              ;
 40103 DEFM 9,"LD",9,"C,4"                 ; }
 40110 DEFW 5820                           ; {5820 LD DE,40D2H
 40112 DEFB 12                             ;
 40113 DEFM 9,"LD",9,"DE,40D2H"            ; }
 40125 DEFW 5830                           ; {5830 CALL PMESS
 40127 DEFB 11                             ;
 40128 DEFM 9,"CALL",9,"PMESS"             ; }
 40139 DEFW 5840                           ; {5840 LD BC,0
 40141 DEFB 8                              ;
 40142 DEFM 9,"LD",9,"BC,0"                ; }
 40150 DEFW 5850                           ; {5850 LD D,6
 40152 DEFB 7                              ;
 40153 DEFM 9,"LD",9,"D,6"                 ; }
 40160 DEFW 5860                           ; {5860 TM91 DJNZ TM91
 40162 DEFB 14                             ;
 40163 DEFM "TM91",9,"DJNZ",9,"TM91"       ; }
 40177 DEFW 5870                           ; {5870 LD A,C
 40179 DEFB 7                              ;
 40180 DEFM 9,"LD",9,"A,C"                 ; }
 40187 DEFW 5880                           ; {5880 A[ND 7]
 40189 DEFB 6                              ;
 40190 DEFM 9,"A"                          ; }

; '...MANIC MINER . . #CHR(169) BUG-BYTE ltd. 1983...'
;
; Used by the routine at #R34252.
@label=MESSINTRO
t40192 DEFM ".  .  .  .  .  .  .  .  .  .  . MANIC MINER . . "
 40240 DEFM 127," BUG-BYTE ltd. 1983 . . By Matthew Smith . . . "
 40288 DEFM "Q to P = Left & Right . . Bottom row = Jump . . "
 40336 DEFM "A to G = Pause . . H to L = Tune On/Off . . . "
 40382 DEFM "Guide Miner Willy through 20 lethal caverns"
 40425 DEFM " .  .  .  .  .  .  .  ."

; Attribute data for the bottom two-thirds of the title screen
;
; Used by the routine at #R34252. The graphic data for the middle third of the
; title screen is located at #R43008.
@label=LOWERATTRS
b40448 DEFB 22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22
 40464 DEFB 22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22
 40480 DEFB 23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23
 40496 DEFB 23,23,23,23,23,16,16,16,16,16,16,16,16,23,23,23
 40512 DEFB 23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23
 40528 DEFB 23,23,23,23,23,22,22,22,22,22,22,22,22,23,23,23
 40544 DEFB 19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19
 40560 DEFB 19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19
 40576 DEFB 23,23,23,23,23,23,16,16,16,16,16,16,22,22,22,22
 40592 DEFB 22,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
 40608 DEFB 16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
 40624 DEFB 16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16
 40640 DEFB 56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56
 40656 DEFB 56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56
 40672 DEFB 56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56
 40688 DEFB 56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56
 40704 DEFB 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
 40720 DEFB 48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48
 40736 DEFB 87,87,87,87,87,87,87,87,87,87,103,103,103,103,103,103
 40752 DEFB 103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103
 40768 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40784 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40800 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40816 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40832 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40848 DEFB 70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70
 40864 DEFB 69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69
 40880 DEFB 69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69
 40896 DEFB 69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69
 40912 DEFB 69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69
 40928 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 40944 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

; Title screen graphic data
;
; Used by the routines at #R34252 and #R35445.
; .
; #SCR2,,,,8,40960,64512(title_screen_1)
; .
; The attributes for the top third of the title screen are located at #R64512
; (in the cavern data for The Final Barrier).
; .
; #SCR2,,8,,8,40960,40192(title_screen_2)
; .
; The attributes for the middle third of the title screen are located at
; #R40448.
@label=TITLESCR1
b40960 DEFB 5,0,0,0,0,0,224,0,0,0,0,0,0,0,0,0
 40976 DEFB 0,0,0,0,0,0,1,129,129,128,0,0,0,0,0,0
 40992 DEFB 59,0,8,99,0,0,224,0,0,0,0,0,0,0,0,0
 41008 DEFB 0,0,0,0,0,0,0,255,255,0,0,0,0,7,255,224
 41024 DEFB 3,0,0,84,0,255,0,0,7,224,0,0,15,223,220,0
 41040 DEFB 0,0,0,0,0,0,0,255,255,0,34,34,34,8,224,16
 41056 DEFB 0,255,159,148,243,0,63,192,31,248,3,252,0,0,0,0
 41072 DEFB 0,36,66,66,36,68,0,0,0,0,119,119,119,0,255,0
 41088 DEFB 0,0,0,138,0,7,255,252,7,224,63,255,224,0,0,0
 41104 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41120 DEFB 0,0,0,74,0,0,0,1,255,255,128,0,0,224,0,0
 41136 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41152 DEFB 1,0,1,185,128,48,255,255,7,192,255,255,15,255,0,0
 41168 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41184 DEFB 1,36,0,18,64,18,64,18,64,1,34,64,17,65,2,16
 41200 DEFB 36,16,33,0,0,16,0,0,0,0,0,0,0,0,0,33
 41216 DEFB 7,0,0,0,0,0,248,0,0,0,0,0,0,0,0,0
 41232 DEFB 0,0,0,0,0,0,3,66,66,192,0,0,0,0,0,0
 41248 DEFB 22,0,0,0,0,0,200,0,0,0,0,0,1,240,0,0
 41264 DEFB 0,0,0,0,0,0,0,255,255,0,0,0,0,4,0,32
 41280 DEFB 5,0,0,85,0,255,0,0,127,254,0,0,15,239,120,0
 41296 DEFB 0,0,0,0,0,0,0,129,129,0,119,119,119,9,16,16
 41312 DEFB 0,127,15,85,244,0,127,224,31,248,7,254,0,0,0,0
 41328 DEFB 0,36,66,68,34,66,0,0,0,0,119,119,119,49,255,140
 41344 DEFB 0,0,0,82,0,1,255,254,7,224,127,255,128,0,0,15
 41360 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41376 DEFB 0,0,0,82,0,112,0,3,255,255,192,0,14,240,0,0
 41392 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41408 DEFB 7,0,3,16,0,48,127,255,1,240,255,252,1,255,0,0
 41424 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41440 DEFB 1,36,48,33,81,48,36,49,32,32,66,16,52,33,3,18
 41456 DEFB 2,19,64,0,0,66,0,0,0,0,0,0,0,0,0,49
 41472 DEFB 3,0,0,0,0,0,208,0,0,0,0,0,0,0,0,0
 41488 DEFB 0,0,0,0,0,0,7,36,36,224,0,0,0,0,0,0
 41504 DEFB 29,0,0,0,0,0,180,0,0,0,0,0,7,248,0,0
 41520 DEFB 0,0,0,0,0,0,0,129,129,0,0,0,0,4,24,32
 41536 DEFB 5,0,0,148,0,208,0,0,127,254,0,0,31,255,151,128
 41552 DEFB 0,101,118,86,134,86,0,129,129,0,119,119,119,9,80,16
 41568 DEFB 0,62,7,85,192,0,255,224,31,248,7,255,0,0,0,0
 41584 DEFB 0,34,66,68,36,66,0,0,0,0,119,119,119,50,255,76
 41600 DEFB 0,0,0,81,0,0,127,254,0,0,127,254,0,0,0,255
 41616 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41632 DEFB 0,0,6,82,48,127,0,3,255,255,192,0,254,248,0,0
 41648 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41664 DEFB 15,0,0,0,0,0,63,255,7,224,255,240,0,63,0,0
 41680 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41696 DEFB 2,19,21,2,67,96,33,52,80,49,33,80,55,97,80,40
 41712 DEFB 18,3,70,0,0,36,0,0,0,0,0,0,0,0,0,39
 41728 DEFB 1,0,0,0,0,0,224,0,0,0,0,0,0,0,0,0
 41744 DEFB 0,0,0,0,0,0,15,24,24,240,0,0,0,0,0,0
 41760 DEFB 31,0,0,0,0,0,246,0,0,0,0,0,15,252,0,0
 41776 DEFB 0,0,0,0,0,0,0,129,129,0,0,0,0,4,0,32
 41792 DEFB 23,0,0,162,0,248,0,0,127,254,0,0,31,255,239,92
 41808 DEFB 112,133,151,84,104,103,0,129,129,0,255,255,255,63,255,252
 41824 DEFB 0,20,2,84,192,1,255,240,31,248,15,255,128,0,0,0
 41840 DEFB 0,66,68,34,36,34,0,0,0,0,119,119,119,52,255,44
 41856 DEFB 0,0,0,149,0,0,31,255,0,0,255,248,0,0,15,255
 41872 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41888 DEFB 0,0,15,81,248,127,240,7,255,255,224,15,254,248,0,0
 41904 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41920 DEFB 15,0,0,0,0,0,30,127,3,240,255,128,0,3,0,0
 41936 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 41952 DEFB 33,48,84,48,103,40,145,32,52,81,144,36,49,84,97,32
 41968 DEFB 52,81,144,0,0,131,0,0,0,0,0,0,0,0,0,115
 41984 DEFB 6,0,0,0,0,0,228,0,0,0,0,0,0,0,0,0
 42000 DEFB 0,0,0,0,0,0,31,24,24,248,0,0,0,0,0,0
 42016 DEFB 5,0,7,129,192,48,200,0,0,0,0,0,30,59,176,0
 42032 DEFB 0,0,0,0,0,0,0,129,129,0,0,0,0,4,0,32
 42048 DEFB 29,0,0,170,0,192,0,0,63,252,0,0,14,127,238,222
 42064 DEFB 248,102,102,102,102,102,0,129,129,0,255,255,255,127,255,254
 42080 DEFB 0,0,0,146,128,1,255,240,15,240,15,255,128,0,0,0
 42096 DEFB 0,66,36,66,66,68,0,0,0,0,119,119,119,63,255,252
 42112 DEFB 0,0,0,165,0,0,7,255,3,192,255,224,0,0,63,255
 42128 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42144 DEFB 0,0,127,137,252,127,255,7,255,255,224,255,254,252,0,0
 42160 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42176 DEFB 63,0,0,0,0,0,0,31,1,128,254,0,0,0,193,0
 42192 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42208 DEFB 116,17,87,145,81,33,2,70,25,18,2,73,18,6,116,33
 42224 DEFB 52,97,33,0,0,33,0,0,0,0,0,0,0,0,0,67
 42240 DEFB 11,0,0,0,0,0,208,0,0,0,0,0,0,0,0,0
 42256 DEFB 0,0,0,0,0,0,63,36,36,252,0,0,0,0,0,0
 42272 DEFB 3,0,2,195,160,0,208,0,0,0,0,0,29,215,216,0
 42288 DEFB 0,0,0,0,0,0,0,129,129,0,0,0,0,4,0,32
 42304 DEFB 31,0,0,170,0,128,1,128,63,252,1,128,15,191,238,222
 42320 DEFB 248,102,102,102,102,102,0,129,129,0,119,119,119,255,255,255
 42336 DEFB 0,0,0,138,0,3,255,248,15,240,31,255,192,0,0,0
 42352 DEFB 0,36,66,36,36,36,0,0,0,0,119,119,119,48,255,12
 42368 DEFB 0,0,0,169,0,0,1,254,31,248,127,128,0,0,255,255
 42384 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42400 DEFB 0,1,255,170,252,255,255,199,255,255,227,255,255,254,0,0
 42416 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42432 DEFB 255,0,0,0,0,0,0,15,15,192,240,0,0,0,62,0
 42448 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42464 DEFB 248,16,47,70,33,113,21,70,49,38,21,66,19,21,3,36
 42480 DEFB 52,81,81,0,0,81,0,0,0,0,0,0,0,0,0,36
 42496 DEFB 5,0,0,0,0,0,180,0,0,0,0,0,0,0,0,0
 42512 DEFB 0,0,0,0,0,0,127,66,66,254,0,0,0,0,0,0
 42528 DEFB 6,0,1,83,192,0,184,0,0,0,0,0,11,239,232,0
 42544 DEFB 0,0,0,0,0,0,0,129,129,0,0,0,0,0,0,32
 42560 DEFB 10,0,0,170,0,0,7,128,63,252,1,224,7,223,207,111
 42576 DEFB 120,102,102,102,102,102,0,255,255,0,119,119,119,255,255,255
 42592 DEFB 0,0,0,170,0,3,255,248,15,240,31,255,192,0,0,0
 42608 DEFB 0,34,66,68,34,66,0,0,0,0,119,119,119,48,60,12
 42624 DEFB 0,0,0,170,0,0,0,124,127,254,62,0,0,15,255,255
 42640 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42656 DEFB 0,15,255,170,254,255,255,207,255,255,243,255,255,254,0,0
 42672 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42688 DEFB 255,0,0,0,0,0,0,7,3,240,224,0,0,0,0,0
 42704 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42720 DEFB 1,32,49,32,51,32,49,32,2,16,66,16,18,64,16,66
 42736 DEFB 64,16,66,0,0,130,0,0,0,0,0,0,0,0,0,64
 42752 DEFB 42,0,0,0,0,0,248,0,0,0,0,0,0,0,0,0
 42768 DEFB 0,0,0,0,0,0,255,129,129,255,0,0,0,0,0,0
 42784 DEFB 3,0,0,163,0,0,100,0,0,0,0,0,7,223,236,0
 42800 DEFB 0,0,0,0,0,0,0,255,255,0,0,0,0,4,0,32
 42816 DEFB 7,0,0,162,0,0,31,192,63,252,3,248,3,143,135,191
 42832 DEFB 240,102,102,102,102,102,0,255,255,0,119,119,119,255,255,255
 42848 DEFB 0,0,0,170,0,7,255,252,15,240,63,255,224,0,0,0
 42864 DEFB 126,166,246,166,246,166,0,0,0,0,119,119,119,48,0,12
 42880 DEFB 0,0,0,138,0,0,0,24,255,255,24,0,0,255,255,255
 42896 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42912 DEFB 0,63,255,74,255,255,255,207,255,255,243,255,255,255,0,0
 42928 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42944 DEFB 255,0,0,0,0,0,0,1,1,192,128,0,0,0,0,0
 42960 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 42976 DEFB 252,189,254,188,253,190,203,223,235,207,205,239,207,191,254,205
 42992 DEFB 188,206,189,0,0,219,0,0,0,0,0,0,0,0,0,189
@label=TITLESCR2
 43008 DEFB 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 43024 DEFB 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 43040 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43056 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43072 DEFB 0,0,130,12,63,134,30,51,128,0,0,34,49,140,60,96
 43088 DEFB 12,96,96,0,0,139,162,251,192,139,160,136,128,0,0,0
 43104 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43120 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43136 DEFB 0,0,0,0,0,0,252,252,254,124,124,0,254,198,254,254
 43152 DEFB 252,0,254,124,0,124,254,16,252,254,0,0,0,0,0,0
 43168 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43184 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43200 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 43216 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 43232 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43248 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43264 DEFB 170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170
 43280 DEFB 170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170
 43296 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43312 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43328 DEFB 0,65,0,12,96,198,14,49,129,0,0,32,49,140,28,96
 43344 DEFB 76,48,112,0,0,217,50,130,32,137,32,133,0,0,0,0
 43360 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43376 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43392 DEFB 0,0,0,0,0,0,254,254,254,254,254,0,254,230,254,254
 43408 DEFB 254,0,254,254,0,254,254,56,254,254,0,0,0,0,0,0
 43424 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43440 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43456 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 43472 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 43488 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43504 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43520 DEFB 68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68
 43536 DEFB 68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68
 43552 DEFB 0,3,255,30,4,14,15,120,58,0,7,248,59,220,30,255
 43568 DEFB 159,240,0,0,0,1,255,136,243,206,137,255,128,0,0,0
 43584 DEFB 0,130,0,12,64,198,6,48,198,0,0,32,49,140,12,97
 43600 DEFB 140,24,16,0,0,169,42,227,192,169,32,130,0,0,0,0
 43616 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43632 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43648 DEFB 0,0,0,0,0,0,198,198,192,194,194,0,192,246,48,192
 43664 DEFB 198,0,48,198,0,194,48,108,198,48,0,0,0,0,0,0
 43680 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43696 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43712 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 43728 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 43744 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43760 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 43776 DEFB 17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17
 43792 DEFB 17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17
 43808 DEFB 0,6,7,60,14,7,6,48,198,0,8,56,113,142,12,97
 43824 DEFB 140,56,0,0,0,2,4,20,138,36,202,0,0,0,0,0
 43840 DEFB 0,140,0,30,225,239,2,120,56,0,0,112,123,222,4,255
 43856 DEFB 158,14,32,0,0,137,38,130,128,169,32,130,0,0,0,0
 43872 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43888 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43904 DEFB 0,0,0,0,0,0,254,254,240,248,248,0,240,246,48,240
 43920 DEFB 254,0,48,198,0,248,48,198,254,48,0,0,0,0,0,0
 43936 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43952 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 43968 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 43984 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 44000 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44016 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44032 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44048 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44064 DEFB 0,9,139,108,14,7,134,49,131,0,16,44,113,143,12,96
 44080 DEFB 76,24,0,0,0,1,196,34,243,196,170,96,0,0,0,0
 44096 DEFB 0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44112 DEFB 0,7,192,0,0,139,162,250,96,83,190,250,0,0,0,0
 44128 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44144 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44160 DEFB 0,0,0,0,0,0,252,252,240,62,62,0,240,222,48,240
 44176 DEFB 252,0,48,198,0,62,48,198,252,48,0,0,0,0,0,0
 44192 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44208 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44224 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 44240 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 44256 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44272 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44288 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44304 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44320 DEFB 0,9,147,204,27,6,198,51,128,0,16,44,177,141,140,98
 44336 DEFB 12,24,0,0,0,0,36,62,162,132,154,32,0,0,0,0
 44352 DEFB 255,7,255,255,255,255,255,255,255,255,255,255,255,255,255,255
 44368 DEFB 255,240,31,240,0,0,0,0,0,0,0,0,0,0,0,0
 44384 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44400 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44416 DEFB 0,0,0,0,0,0,192,216,192,134,134,0,192,222,48,192
 44432 DEFB 216,0,48,198,0,134,48,254,216,48,0,0,0,0,0,0
 44448 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44464 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44480 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 44496 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 44512 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44528 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44544 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44560 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44576 DEFB 0,6,35,140,19,6,102,51,0,0,19,38,177,140,204,126
 44592 DEFB 15,240,0,0,0,255,196,34,154,110,137,192,0,0,0,0
 44608 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44624 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44640 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44656 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44672 DEFB 0,0,0,0,0,0,192,204,254,254,254,0,254,206,48,254
 44688 DEFB 204,0,48,254,0,254,48,254,204,48,0,0,0,0,0,0
 44704 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44720 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44736 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 44752 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 44768 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44784 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 44800 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44816 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44832 DEFB 0,0,67,12,49,134,54,51,0,0,12,39,49,140,108,98
 44848 DEFB 12,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44864 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44880 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44896 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44912 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44928 DEFB 0,0,0,0,0,0,192,198,254,124,124,0,254,198,48,254
 44944 DEFB 198,0,48,124,0,124,48,198,198,48,0,0,0,0,0,0
 44960 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44976 DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
 44992 DEFB 7,199,199,193,7,199,193,7,199,199,193,7,199,193,7,199
 45008 DEFB 193,7,199,199,193,7,199,193,7,199,199,193,7,199,193,1
 45024 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
 45040 DEFB 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1

; Central Cavern (teleport: 6)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN0(central_cavern) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN0
b45056 DEFB 22,0,0,0,0,0,0,0                   ; {Attributes
 45064 DEFB 0,0,0,5,0,0,0,0                    ;
 45072 DEFB 5,0,0,0,0,0,0,0                    ;
 45080 DEFB 0,0,0,0,0,0,0,22                   ;
 45088 DEFB 22,0,0,0,0,0,0,0                   ;
 45096 DEFB 0,0,0,0,0,0,0,0                    ;
 45104 DEFB 0,0,0,0,0,0,0,0                    ;
 45112 DEFB 0,0,0,0,0,0,0,22                   ;
 45120 DEFB 22,0,0,0,0,0,0,0                   ;
 45128 DEFB 0,0,0,0,0,0,0,0                    ;
 45136 DEFB 0,0,0,0,0,0,0,0                    ;
 45144 DEFB 0,0,0,0,0,0,0,22                   ;
 45152 DEFB 22,0,0,0,0,0,0,0                   ;
 45160 DEFB 0,0,0,0,0,0,0,0                    ;
 45168 DEFB 0,0,0,0,0,0,0,0                    ;
 45176 DEFB 0,0,0,0,0,0,0,22                   ;
 45184 DEFB 22,0,0,0,0,0,0,0                   ;
 45192 DEFB 0,0,0,0,0,0,0,0                    ;
 45200 DEFB 0,0,0,0,0,0,0,68                   ;
 45208 DEFB 0,0,0,68,0,0,0,22                  ;
 45216 DEFB 22,66,66,66,66,66,66,66            ;
 45224 DEFB 66,66,66,66,66,66,2,2              ;
 45232 DEFB 2,2,66,2,2,2,2,66                  ;
 45240 DEFB 66,66,66,66,66,66,66,22            ;
 45248 DEFB 22,0,0,0,0,0,0,0                   ;
 45256 DEFB 0,0,0,0,0,0,0,0                    ;
 45264 DEFB 0,0,0,0,0,0,0,0                    ;
 45272 DEFB 0,0,0,0,0,0,0,22                   ;
 45280 DEFB 22,66,66,66,0,0,0,0                ;
 45288 DEFB 0,0,0,0,0,0,0,0                    ;
 45296 DEFB 0,0,0,0,0,0,0,0                    ;
 45304 DEFB 0,0,0,0,0,0,0,22                   ;
 45312 DEFB 22,0,0,0,0,0,0,0                   ;
 45320 DEFB 0,0,0,0,0,0,0,0                    ;
 45328 DEFB 0,22,22,22,0,68,0,0                ;
 45336 DEFB 0,0,0,0,0,0,0,22                   ;
 45344 DEFB 22,66,66,66,66,0,0,0               ;
 45352 DEFB 4,4,4,4,4,4,4,4                    ;
 45360 DEFB 4,4,4,4,4,4,4,4                    ;
 45368 DEFB 4,4,4,4,0,0,0,22                   ;
 45376 DEFB 22,0,0,0,0,0,0,0                   ;
 45384 DEFB 0,0,0,0,0,0,0,0                    ;
 45392 DEFB 0,0,0,0,0,0,0,0                    ;
 45400 DEFB 0,0,0,0,0,66,66,22                 ;
 45408 DEFB 22,0,0,0,0,0,0,0                   ;
 45416 DEFB 0,0,0,0,0,0,0,0                    ;
 45424 DEFB 0,0,0,0,0,0,0,0                    ;
 45432 DEFB 0,0,0,0,0,0,0,22                   ;
 45440 DEFB 22,0,0,0,0,0,0,0                   ;
 45448 DEFB 0,0,0,0,68,0,0,0                   ;
 45456 DEFB 0,0,0,0,22,22,22,2                 ;
 45464 DEFB 2,2,2,2,66,66,66,22                ;
 45472 DEFB 22,0,0,0,0,66,66,66                ;
 45480 DEFB 66,66,66,66,66,66,66,66            ;
 45488 DEFB 66,66,66,66,0,0,0,0                ;
 45496 DEFB 0,0,0,0,0,0,0,22                   ;
 45504 DEFB 22,0,0,0,0,0,0,0                   ;
 45512 DEFB 0,0,0,0,0,0,0,0                    ;
 45520 DEFB 0,0,0,0,0,0,0,0                    ;
 45528 DEFB 0,0,0,0,0,0,0,22                   ;
 45536 DEFB 22,66,66,66,66,66,66,66            ;
 45544 DEFB 66,66,66,66,66,66,66,66            ;
 45552 DEFB 66,66,66,66,66,66,66,66            ;
 45560 DEFB 66,66,66,66,66,66,66,22            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 45568 DEFM "         Central Cavern         " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES0 }
; TABLE#
 45600 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 45609 DEFB 66,255,255,219,110,197,64,0,0      ; Floor
 45618 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor
 45627 DEFB 22,34,255,136,255,34,255,136,255   ; Wall
 45636 DEFB 4,240,102,240,102,0,153,255,0      ; Conveyor
 45645 DEFB 68,68,40,148,81,53,214,88,16       ; Nasty 1
 45654 DEFB 5,255,254,126,124,76,76,8,8        ; Nasty 2
 45663 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 45672 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 45673 DEFB 0                                  ; Animation frame (see #R32873)
 45674 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 45675 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 45676 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 45678 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 45679 DEFB 0                                  ; Direction (left)
 45680 DEFW 30760                              ; Location in the screen buffer
                                               ; at #R28672: (9,8)
 45682 DEFB 20                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 45683 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 45684 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 45685 DEFB 3                                  ; {Item 1 at (0,9)
 45686 DEFW 23561                              ;
 45688 DEFB 96                                 ;
 45689 DEFB 255                                ; }
 45690 DEFB 4                                  ; {Item 2 at (0,29)
 45691 DEFW 23581                              ;
 45693 DEFB 96                                 ;
 45694 DEFB 255                                ; }
 45695 DEFB 5                                  ; {Item 3 at (1,16)
 45696 DEFW 23600                              ;
 45698 DEFB 96                                 ;
 45699 DEFB 255                                ; }
 45700 DEFB 6                                  ; {Item 4 at (4,24)
 45701 DEFW 23704                              ;
 45703 DEFB 96                                 ;
 45704 DEFB 255                                ; }
 45705 DEFB 3                                  ; {Item 5 at (6,30)
 45706 DEFW 23774                              ;
 45708 DEFB 96                                 ;
 45709 DEFB 255                                ; }
 45710 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL0 }
; TABLE#
 45711 DEFB 14                                 ; Attribute
 45712 DEFB 255,255,146,73,182,219,255,255     ; {Graphic data
 45720 DEFB 146,73,182,219,255,255,146,73      ;
 45728 DEFB 182,219,255,255,146,73,182,219     ;
 45736 DEFB 255,255,146,73,182,219,255,255     ; }
 45744 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
 45746 DEFW 26813                              ; Location in the screen buffer
                                               ; at #R24576: (13,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM0 }
; TABLE#
 45748 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 45756 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 45757 DEFB 252                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 45758 DEFB 70                                 ; {Horizontal guardian 1: y=7,
 45759 DEFW 23784                              ; initial x=8, 8<=x<=15,
 45761 DEFB 96                                 ; speed=normal
 45762 DEFB 0                                  ;
 45763 DEFB 232                                ;
 45764 DEFB 239                                ; }
 45765 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 2 (unused)
 45772 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 45779 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 45786 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 45787 DEFB 0,0                                ; Unused
; The next byte is copied to #R32989 and indicates that there are no vertical
; guardians in this cavern.
 45789 DEFB 255                                ; Terminator
; The next two bytes are unused.
 45790 DEFB 0,0                                ; Unused
; The next 32 bytes define the swordfish graphic that appears in #R64512(The
; Final Barrier) when the game is completed.
; .
; #UDGTABLE
; { #UDGARRAY2,69,4,2;45792;45793;45808,70;45809,71(swordfish) }
; TABLE#
@label=SWORDFISH
 45792 DEFB 2,160,5,67,31,228,115,255          ; {Swordfish graphic data
 45800 DEFB 242,248,31,63,255,228,63,195       ;
 45808 DEFB 0,0,1,0,57,252,111,2               ;
 45816 DEFB 81,1,127,254,57,252,1,0            ; }
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE45824,45758(central_cavern_guardian0) |
; #SPRITE45856,45758(central_cavern_guardian1) |
; #SPRITE45888,45758(central_cavern_guardian2) |
; #SPRITE45920,45758(central_cavern_guardian3) |
; #SPRITE45952,45758(central_cavern_guardian4) |
; #SPRITE45984,45758(central_cavern_guardian5) |
; #SPRITE46016,45758(central_cavern_guardian6) |
; #SPRITE46048,45758(central_cavern_guardian7) }
; TABLE#
 45824 DEFB 31,32,57,224,25,224,15,32          ; {Guardian graphic data
 45832 DEFB 159,0,95,128,255,192,94,0          ;
 45840 DEFB 159,192,31,128,14,0,31,0           ;
 45848 DEFB 187,160,113,192,32,128,17,0        ;
 45856 DEFB 7,196,14,124,6,124,35,196          ;
 45864 DEFB 23,192,23,224,63,240,23,240        ;
 45872 DEFB 23,240,39,224,3,128,3,128          ;
 45880 DEFB 6,192,6,192,28,112,6,192           ;
 45888 DEFB 1,242,3,158,1,158,0,242            ;
 45896 DEFB 9,240,5,248,15,252,5,224           ;
 45904 DEFB 9,252,1,248,0,224,0,224            ;
 45912 DEFB 0,224,0,224,0,224,1,240            ;
 45920 DEFB 0,125,0,231,0,103,0,61             ;
 45928 DEFB 0,124,0,127,3,252,0,120            ;
 45936 DEFB 0,124,0,127,0,56,0,56              ;
 45944 DEFB 0,108,0,108,1,199,0,108            ;
 45952 DEFB 190,0,231,0,230,0,188,0            ;
 45960 DEFB 62,0,254,0,63,192,30,0             ;
 45968 DEFB 62,0,254,0,28,0,28,0               ;
 45976 DEFB 54,0,54,0,227,128,54,0             ;
 45984 DEFB 79,128,121,192,121,128,79,0        ;
 45992 DEFB 15,144,31,160,63,240,7,160         ;
 46000 DEFB 63,144,31,128,7,0,7,0              ;
 46008 DEFB 7,0,7,0,7,0,15,128                 ;
 46016 DEFB 35,224,62,112,62,96,35,196         ;
 46024 DEFB 3,232,7,232,15,252,15,232          ;
 46032 DEFB 15,232,7,228,1,192,1,192           ;
 46040 DEFB 3,96,3,96,14,56,3,96               ;
 46048 DEFB 4,248,7,156,7,152,4,240            ;
 46056 DEFB 0,249,1,250,3,255,0,122            ;
 46064 DEFB 3,249,1,248,0,112,0,248            ;
 46072 DEFB 5,221,3,142,1,4,0,136              ; }

; The Cold Room (teleport: 16)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN1(the_cold_room) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN1
b46080 DEFB 22,8,8,8,8,8,8,8                   ; {Attributes
 46088 DEFB 8,8,8,8,8,8,8,8                    ;
 46096 DEFB 8,8,8,22,22,22,22,22               ;
 46104 DEFB 22,22,22,22,22,22,22,22            ;
 46112 DEFB 22,8,8,8,8,8,8,8                   ;
 46120 DEFB 8,8,8,8,8,8,8,8                    ;
 46128 DEFB 8,8,8,8,8,8,8,8                    ;
 46136 DEFB 8,8,8,8,8,8,13,22                  ;
 46144 DEFB 22,8,8,8,8,8,8,8                   ;
 46152 DEFB 8,8,8,8,8,8,8,8                    ;
 46160 DEFB 8,8,8,8,8,8,8,8                    ;
 46168 DEFB 8,8,8,8,8,8,8,22                   ;
 46176 DEFB 22,8,8,8,8,8,8,8                   ;
 46184 DEFB 8,8,8,8,8,8,8,8                    ;
 46192 DEFB 8,8,8,8,8,11,11,11                 ;
 46200 DEFB 75,8,8,8,8,8,8,22                  ;
 46208 DEFB 22,8,8,8,8,8,8,8                   ;
 46216 DEFB 8,8,8,8,8,8,8,8                    ;
 46224 DEFB 8,8,8,8,8,8,8,8                    ;
 46232 DEFB 8,8,8,8,8,8,8,22                   ;
 46240 DEFB 22,75,75,75,75,75,75,75            ;
 46248 DEFB 75,75,75,75,75,75,75,75            ;
 46256 DEFB 75,75,75,75,8,8,8,8                ;
 46264 DEFB 8,8,8,8,22,8,8,22                  ;
 46272 DEFB 22,8,8,8,8,8,8,8                   ;
 46280 DEFB 8,8,8,8,8,8,8,8                    ;
 46288 DEFB 8,8,8,8,8,75,75,75                 ;
 46296 DEFB 75,22,11,11,22,8,8,22              ;
 46304 DEFB 22,75,11,11,11,11,11,8             ;
 46312 DEFB 8,8,8,8,8,8,8,8                    ;
 46320 DEFB 8,8,8,8,8,8,8,8                    ;
 46328 DEFB 8,22,8,8,22,8,8,22                 ;
 46336 DEFB 22,8,8,8,8,8,8,8                   ;
 46344 DEFB 8,8,8,8,8,8,8,8                    ;
 46352 DEFB 8,8,8,8,8,8,8,8                    ;
 46360 DEFB 8,22,11,11,22,8,8,22               ;
 46368 DEFB 22,8,8,8,8,8,8,8                   ;
 46376 DEFB 8,75,75,75,75,75,75,75             ;
 46384 DEFB 8,8,8,8,8,8,8,8                    ;
 46392 DEFB 8,22,11,11,22,8,8,22               ;
 46400 DEFB 22,8,8,8,8,8,8,8                   ;
 46408 DEFB 8,8,8,8,8,8,8,8                    ;
 46416 DEFB 8,8,8,11,11,11,11,8                ;
 46424 DEFB 8,22,11,11,22,8,8,22               ;
 46432 DEFB 22,8,8,14,14,14,14,8               ;
 46440 DEFB 8,8,8,8,8,8,8,8                    ;
 46448 DEFB 8,8,8,8,8,8,8,8                    ;
 46456 DEFB 8,22,11,11,22,8,8,22               ;
 46464 DEFB 22,8,8,8,8,8,8,8                   ;
 46472 DEFB 8,8,8,8,8,8,75,75                  ;
 46480 DEFB 75,75,8,8,8,8,8,8                  ;
 46488 DEFB 8,22,11,11,22,8,8,22               ;
 46496 DEFB 22,8,8,8,8,8,8,8                   ;
 46504 DEFB 11,11,11,11,8,8,8,8                ;
 46512 DEFB 8,8,8,8,8,8,8,8                    ;
 46520 DEFB 8,8,8,8,8,8,8,22                   ;
 46528 DEFB 22,8,8,8,8,8,8,8                   ;
 46536 DEFB 8,8,8,8,8,8,8,8                    ;
 46544 DEFB 8,8,8,8,8,8,8,8                    ;
 46552 DEFB 8,8,8,8,8,8,8,22                   ;
 46560 DEFB 22,75,75,75,75,75,75,75            ;
 46568 DEFB 75,75,75,75,75,75,75,75            ;
 46576 DEFB 75,75,75,75,75,75,75,75            ;
 46584 DEFB 75,75,75,75,75,75,75,22            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 46592 DEFM "          The Cold Room         " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES1 }
; TABLE#
 46624 DEFB 8,0,0,0,0,0,0,0,0                  ; Background
 46633 DEFB 75,255,255,219,110,197,64,0,0      ; Floor
 46642 DEFB 11,255,219,165,36,82,32,8,0        ; Crumbling floor
 46651 DEFB 22,34,255,136,255,34,255,136,255   ; Wall
 46660 DEFB 14,240,102,240,102,0,153,255,0     ; Conveyor
 46669 DEFB 12,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 46678 DEFB 13,255,254,94,108,76,76,8,8        ; Nasty 2
 46687 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 46696 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 46697 DEFB 0                                  ; Animation frame (see #R32873)
 46698 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 46699 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 46700 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 46702 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 46703 DEFB 1                                  ; Direction (right)
 46704 DEFW 30819                              ; Location in the screen buffer
                                               ; at #R28672: (11,3)
 46706 DEFB 4                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 46707 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 46708 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 46709 DEFB 11                                 ; {Item 1 at (1,7)
 46710 DEFW 23591                              ;
 46712 DEFB 96                                 ;
 46713 DEFB 255                                ; }
 46714 DEFB 12                                 ; {Item 2 at (1,24)
 46715 DEFW 23608                              ;
 46717 DEFB 96                                 ;
 46718 DEFB 255                                ; }
 46719 DEFB 13                                 ; {Item 3 at (7,26)
 46720 DEFW 23802                              ;
 46722 DEFB 96                                 ;
 46723 DEFB 255                                ; }
 46724 DEFB 14                                 ; {Item 4 at (9,3)
 46725 DEFW 23843                              ;
 46727 DEFB 104                                ;
 46728 DEFB 255                                ; }
 46729 DEFB 11                                 ; {Item 5 at (12,19)
 46730 DEFW 23955                              ;
 46732 DEFB 104                                ;
 46733 DEFB 255                                ; }
 46734 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL1 }
; TABLE#
 46735 DEFB 83                                 ; Attribute
 46736 DEFB 255,255,146,73,146,73,146,73       ; {Graphic data
 46744 DEFB 146,73,146,73,146,73,146,73        ;
 46752 DEFB 146,73,146,73,146,73,146,73        ;
 46760 DEFB 146,73,146,73,146,73,255,255       ; }
 46768 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
 46770 DEFW 26813                              ; Location in the screen buffer
                                               ; at #R24576: (13,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM1 }
; TABLE#
 46772 DEFB 80,168,84,168,84,44,2,1            ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 46780 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 46781 DEFB 252                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 46782 DEFB 14                                 ; {Horizontal guardian 1: y=3,
 46783 DEFW 23666                              ; initial x=18, 1<=x<=18,
 46785 DEFB 96                                 ; speed=normal
 46786 DEFB 7                                  ;
 46787 DEFB 97                                 ;
 46788 DEFB 114                                ; }
 46789 DEFB 13                                 ; {Horizontal guardian 2: y=13,
 46790 DEFW 23997                              ; initial x=29, 12<=x<=29,
 46792 DEFB 104                                ; speed=normal
 46793 DEFB 7                                  ;
 46794 DEFB 172                                ;
 46795 DEFB 189                                ; }
 46796 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 3 (unused)
 46803 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 46810 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 46811 DEFB 0,0                                ; Unused
; The next byte is copied to #R32989 and indicates that there are no vertical
; guardians in this cavern.
 46813 DEFB 255                                ; Terminator
; The next two bytes are unused.
 46814 DEFB 0,0                                ; Unused
; The next 32 bytes define the plinth graphic that appears on the Game Over
; screen.
; .
; #UDGTABLE
; { #SPRITE46816,71(plinth) }
; TABLE#
@label=PLINTH
 46816 DEFB 255,255,114,78,138,81,170,85       ; {Plinth graphic data
 46824 DEFB 74,82,18,72,34,68,42,84            ;
 46832 DEFB 42,84,42,84,42,84,42,84            ;
 46840 DEFB 42,84,42,84,42,84,42,84            ; }
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE46848,46782(the_cold_room_guardian0) |
; #SPRITE46880,46782(the_cold_room_guardian1) |
; #SPRITE46912,46782(the_cold_room_guardian2) |
; #SPRITE46944,46782(the_cold_room_guardian3) |
; #SPRITE46976,46782(the_cold_room_guardian4) |
; #SPRITE47008,46782(the_cold_room_guardian5) |
; #SPRITE47040,46782(the_cold_room_guardian6) |
; #SPRITE47072,46782(the_cold_room_guardian7) }
; TABLE#
 46848 DEFB 12,0,30,0,27,0,30,192              ; {Guardian graphic data
 46856 DEFB 57,0,50,0,58,0,61,0                ;
 46864 DEFB 109,0,105,0,105,0,97,0             ;
 46872 DEFB 113,0,190,0,8,0,30,0               ;
 46880 DEFB 3,0,7,128,6,192,7,176              ;
 46888 DEFB 14,64,12,128,15,128,13,192         ;
 46896 DEFB 27,64,27,64,22,64,24,64            ;
 46904 DEFB 28,64,47,128,5,64,15,128           ;
 46912 DEFB 0,192,1,224,1,176,1,236            ;
 46920 DEFB 3,144,3,32,3,160,3,208             ;
 46928 DEFB 6,208,6,144,6,144,6,16             ;
 46936 DEFB 7,16,11,232,2,80,7,224             ;
 46944 DEFB 0,48,0,120,0,108,0,123             ;
 46952 DEFB 0,228,0,200,0,232,0,244            ;
 46960 DEFB 1,180,1,148,1,148,1,132            ;
 46968 DEFB 1,196,2,248,0,84,0,248             ;
 46976 DEFB 12,0,30,0,54,0,222,0               ;
 46984 DEFB 39,0,19,0,23,0,47,0                ;
 46992 DEFB 45,128,41,128,41,128,33,128        ;
 47000 DEFB 35,128,31,64,42,0,31,0             ;
 47008 DEFB 3,0,7,128,13,128,55,128            ;
 47016 DEFB 9,192,4,192,5,192,11,192           ;
 47024 DEFB 11,96,9,96,9,96,8,96               ;
 47032 DEFB 8,224,23,208,10,64,7,224           ;
 47040 DEFB 0,192,1,224,3,96,13,224            ;
 47048 DEFB 2,112,1,48,1,240,3,176             ;
 47056 DEFB 2,216,2,216,2,104,2,24             ;
 47064 DEFB 2,56,1,244,2,160,1,240             ;
 47072 DEFB 0,48,0,120,0,216,3,120             ;
 47080 DEFB 0,156,0,76,0,92,0,188              ;
 47088 DEFB 0,182,0,150,0,150,0,134            ;
 47096 DEFB 0,142,0,125,0,16,0,120             ; }

; The Menagerie (teleport: 26)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN2(the_menagerie) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN2
b47104 DEFB 13,0,0,0,0,0,0,0                   ; {Attributes
 47112 DEFB 0,0,67,0,0,0,0,0                   ;
 47120 DEFB 0,0,3,0,0,0,0,0                    ;
 47128 DEFB 0,0,0,67,0,0,0,13                  ;
 47136 DEFB 13,0,0,0,0,0,0,0                   ;
 47144 DEFB 0,0,0,0,0,0,0,0                    ;
 47152 DEFB 0,0,67,0,0,0,0,0                   ;
 47160 DEFB 0,0,0,0,0,0,0,13                   ;
 47168 DEFB 13,0,0,0,0,0,0,0                   ;
 47176 DEFB 0,0,0,0,0,0,0,0                    ;
 47184 DEFB 0,0,0,0,0,0,0,0                    ;
 47192 DEFB 0,0,0,0,0,0,0,13                   ;
 47200 DEFB 13,0,0,0,0,0,0,0                   ;
 47208 DEFB 0,0,0,0,0,0,0,0                    ;
 47216 DEFB 0,0,0,0,0,0,0,0                    ;
 47224 DEFB 0,0,0,0,0,0,0,13                   ;
 47232 DEFB 13,0,0,0,0,0,0,0                   ;
 47240 DEFB 0,0,0,0,0,0,0,0                    ;
 47248 DEFB 0,0,0,0,0,0,0,0                    ;
 47256 DEFB 0,0,0,0,0,0,0,13                   ;
 47264 DEFB 13,69,69,69,69,5,5,5               ;
 47272 DEFB 5,5,5,5,5,5,5,5                    ;
 47280 DEFB 5,5,5,5,5,5,5,5                    ;
 47288 DEFB 5,5,5,5,5,5,5,13                   ;
 47296 DEFB 13,0,0,0,0,0,0,0                   ;
 47304 DEFB 0,0,0,0,0,0,0,0                    ;
 47312 DEFB 0,0,0,0,0,0,0,0                    ;
 47320 DEFB 0,0,0,0,0,0,0,13                   ;
 47328 DEFB 13,69,69,69,69,69,69,0             ;
 47336 DEFB 0,0,0,0,0,0,0,0                    ;
 47344 DEFB 0,0,0,0,0,0,0,0                    ;
 47352 DEFB 0,0,0,69,69,69,69,13               ;
 47360 DEFB 13,3,0,0,0,0,0,0                   ;
 47368 DEFB 0,0,0,0,0,0,0,0                    ;
 47376 DEFB 0,0,0,0,0,0,0,0                    ;
 47384 DEFB 0,0,0,0,0,0,0,13                   ;
 47392 DEFB 13,3,0,0,0,0,2,2                   ;
 47400 DEFB 2,2,2,2,0,0,0,0                    ;
 47408 DEFB 0,0,0,0,0,0,0,0                    ;
 47416 DEFB 0,0,0,0,0,0,0,13                   ;
 47424 DEFB 13,3,0,0,0,0,0,0                   ;
 47432 DEFB 0,0,0,0,0,0,0,0                    ;
 47440 DEFB 0,0,0,0,0,0,0,0                    ;
 47448 DEFB 0,69,69,69,69,69,69,13             ;
 47456 DEFB 13,67,0,0,0,0,0,0                  ;
 47464 DEFB 0,0,0,0,0,0,69,69                  ;
 47472 DEFB 69,69,69,0,0,0,0,0                 ;
 47480 DEFB 0,0,0,0,0,0,0,13                   ;
 47488 DEFB 13,0,0,0,0,69,69,69                ;
 47496 DEFB 69,69,69,0,0,0,0,0                 ;
 47504 DEFB 0,0,0,0,0,0,0,0                    ;
 47512 DEFB 0,0,0,0,0,0,0,13                   ;
 47520 DEFB 13,0,0,0,0,0,0,0                   ;
 47528 DEFB 0,0,0,0,0,0,0,0                    ;
 47536 DEFB 0,0,0,0,0,69,69,69                 ;
 47544 DEFB 69,69,69,69,69,69,69,13            ;
 47552 DEFB 13,0,0,0,0,0,0,0                   ;
 47560 DEFB 0,0,0,0,0,0,0,0                    ;
 47568 DEFB 0,0,0,0,0,0,0,0                    ;
 47576 DEFB 0,0,0,0,0,0,0,13                   ;
 47584 DEFB 13,69,69,69,69,69,69,69            ;
 47592 DEFB 69,69,69,69,69,69,69,69            ;
 47600 DEFB 69,69,69,69,69,69,69,69            ;
 47608 DEFB 69,69,69,69,69,69,69,13            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 47616 DEFM "          The Menagerie         " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES2 }
; TABLE#
 47648 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 47657 DEFB 69,255,255,102,153,102,153,255,0   ; Floor
 47666 DEFB 5,255,255,102,153,66,24,234,0      ; Crumbling floor
 47675 DEFB 13,129,195,165,153,153,165,195,129 ; Wall
 47684 DEFB 2,240,170,240,102,102,0,0,0        ; Conveyor
 47693 DEFB 6,68,40,148,81,53,214,88,16        ; Nasty 1 (unused)
 47702 DEFB 67,16,214,56,214,56,68,198,40      ; Nasty 2
 47711 DEFB 3,16,16,16,16,16,16,16,16          ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 47720 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 47721 DEFB 0                                  ; Animation frame (see #R32873)
 47722 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 47723 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 47724 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 47726 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 47727 DEFB 0                                  ; Direction (left)
 47728 DEFW 30758                              ; Location in the screen buffer
                                               ; at #R28672: (9,6)
 47730 DEFB 6                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 47731 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 47732 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 47733 DEFB 3                                  ; {Item 1 at (0,6)
 47734 DEFW 23558                              ;
 47736 DEFB 96                                 ;
 47737 DEFB 255                                ; }
 47738 DEFB 4                                  ; {Item 2 at (0,15)
 47739 DEFW 23567                              ;
 47741 DEFB 96                                 ;
 47742 DEFB 255                                ; }
 47743 DEFB 5                                  ; {Item 3 at (0,23)
 47744 DEFW 23575                              ;
 47746 DEFB 96                                 ;
 47747 DEFB 255                                ; }
 47748 DEFB 6                                  ; {Item 4 at (6,30)
 47749 DEFW 23774                              ;
 47751 DEFB 96                                 ;
 47752 DEFB 255                                ; }
 47753 DEFB 3                                  ; {Item 5 at (6,21)
 47754 DEFW 23765                              ;
 47756 DEFB 96                                 ;
 47757 DEFB 255                                ; }
 47758 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL2 }
; TABLE#
 47759 DEFB 14                                 ; Attribute
 47760 DEFB 255,255,68,68,153,153,34,34        ; {Graphic data
 47768 DEFB 34,34,153,153,68,68,68,68          ;
 47776 DEFB 153,153,34,34,34,34,153,153        ;
 47784 DEFB 68,68,68,68,153,153,255,255        ; }
 47792 DEFW 23933                              ; Location in the attribute
                                               ; buffer at #R23552: (11,29)
 47794 DEFW 26749                              ; Location in the screen buffer
                                               ; at #R24576: (11,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM2 }
; TABLE#
 47796 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 47804 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 47805 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 47806 DEFB 68                                 ; {Horizontal guardian 1: y=13,
 47807 DEFW 23987                              ; initial x=19, 1<=x<=19,
 47809 DEFB 104                                ; speed=normal
 47810 DEFB 7                                  ;
 47811 DEFB 161                                ;
 47812 DEFB 179                                ; }
 47813 DEFB 67                                 ; {Horizontal guardian 2: y=3,
 47814 DEFW 23664                              ; initial x=16, 1<=x<=16,
 47816 DEFB 96                                 ; speed=normal
 47817 DEFB 7                                  ;
 47818 DEFB 97                                 ;
 47819 DEFB 112                                ; }
 47820 DEFB 66                                 ; {Horizontal guardian 3: y=3,
 47821 DEFW 23666                              ; initial x=18, 18<=x<=29,
 47823 DEFB 96                                 ; speed=normal
 47824 DEFB 0                                  ;
 47825 DEFB 114                                ;
 47826 DEFB 125                                ; }
 47827 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 4 (unused)
 47834 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 47835 DEFB 0,0                                ; Unused
; The next byte is copied to #R32989 and indicates that there are no vertical
; guardians in this cavern.
 47837 DEFB 255                                ; Terminator
; The next two bytes are unused.
 47838 DEFB 0,0                                ; Unused
; The next 32 bytes define the boot graphic that appears on the Game Over
; screen (see #R35210). It also appears at the bottom of the screen next to the
; remaining lives when #FACT#6031769(cheat mode) is activated (see #R34608).
; .
; #UDGTABLE
; { #SPRITE47840,71(boot) }
; TABLE#
@label=BOOT
 47840 DEFB 42,192,53,64,63,192,9,0            ; {Boot graphic data
 47848 DEFB 9,0,31,128,16,128,16,128           ;
 47856 DEFB 17,128,34,64,32,184,89,36          ;
 47864 DEFB 68,66,68,2,68,2,255,255            ; }
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE47872,47806(the_menagerie_guardian0) |
; #SPRITE47904,47806(the_menagerie_guardian1) |
; #SPRITE47936,47806(the_menagerie_guardian2) |
; #SPRITE47968,47806(the_menagerie_guardian3) |
; #SPRITE48000,47806(the_menagerie_guardian4) |
; #SPRITE48032,47806(the_menagerie_guardian5) |
; #SPRITE48064,47806(the_menagerie_guardian6) |
; #SPRITE48096,47806(the_menagerie_guardian7) }
; TABLE#
 47872 DEFB 3,0,6,128,7,192,3,0                ; {Guardian graphic data
 47880 DEFB 1,128,0,192,190,192,227,128        ;
 47888 DEFB 65,0,171,0,127,0,62,0              ;
 47896 DEFB 8,0,8,0,8,0,20,0                   ;
 47904 DEFB 0,192,1,160,1,240,0,192            ;
 47912 DEFB 0,96,0,48,47,176,56,224            ;
 47920 DEFB 24,192,48,192,21,192,10,128        ;
 47928 DEFB 21,0,2,0,5,0,0,0                   ;
 47936 DEFB 0,48,0,104,0,124,0,48              ;
 47944 DEFB 0,24,0,12,11,236,14,56             ;
 47952 DEFB 4,16,10,176,7,240,3,224            ;
 47960 DEFB 0,128,1,64,0,0,0,0                 ;
 47968 DEFB 0,12,0,26,0,31,0,172               ;
 47976 DEFB 1,86,0,171,3,91,3,134              ;
 47984 DEFB 1,12,3,252,1,252,0,248             ;
 47992 DEFB 0,32,0,32,0,80,0,0                 ;
 48000 DEFB 48,0,88,0,248,0,53,0               ;
 48008 DEFB 106,128,213,0,218,192,97,192       ;
 48016 DEFB 48,128,63,192,63,128,31,0          ;
 48024 DEFB 4,0,4,0,10,0,0,0                   ;
 48032 DEFB 12,0,22,0,62,0,12,0                ;
 48040 DEFB 24,0,48,0,55,208,28,112            ;
 48048 DEFB 8,32,13,80,15,224,7,192            ;
 48056 DEFB 1,0,2,128,0,0,0,0                  ;
 48064 DEFB 3,0,5,128,15,128,3,0               ;
 48072 DEFB 6,0,12,0,13,244,7,28               ;
 48080 DEFB 3,24,3,12,3,168,1,80               ;
 48088 DEFB 0,168,0,64,0,160,0,0               ;
 48096 DEFB 0,192,1,96,3,224,0,192             ;
 48104 DEFB 1,128,3,0,3,125,1,199              ;
 48112 DEFB 0,130,0,213,0,254,0,124            ;
 48120 DEFB 0,16,0,16,0,16,0,40                ; }

; Abandoned Uranium Workings (teleport: 126)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN3(abandoned_uranium_workings) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN3
b48128 DEFB 41,0,0,0,0,0,0,5                   ; {Attributes
 48136 DEFB 0,0,0,0,0,0,41,41                  ;
 48144 DEFB 41,41,41,41,41,41,41,41            ;
 48152 DEFB 41,41,41,41,41,41,41,41            ;
 48160 DEFB 41,0,0,0,0,0,0,0                   ;
 48168 DEFB 0,0,0,0,0,0,0,0                    ;
 48176 DEFB 0,0,0,0,0,0,0,0                    ;
 48184 DEFB 0,0,0,0,0,0,0,41                   ;
 48192 DEFB 41,0,0,0,0,0,0,0                   ;
 48200 DEFB 0,0,0,0,0,0,0,0                    ;
 48208 DEFB 0,0,0,0,0,0,0,0                    ;
 48216 DEFB 0,0,0,0,0,0,0,41                   ;
 48224 DEFB 41,0,0,0,0,0,0,0                   ;
 48232 DEFB 0,0,0,0,0,0,0,0                    ;
 48240 DEFB 0,0,0,70,70,70,70,70               ;
 48248 DEFB 70,0,0,0,0,0,0,41                  ;
 48256 DEFB 41,0,0,0,0,0,0,0                   ;
 48264 DEFB 0,0,0,0,0,0,0,0                    ;
 48272 DEFB 0,0,0,0,0,0,0,0                    ;
 48280 DEFB 0,0,0,70,70,70,70,41               ;
 48288 DEFB 41,70,0,0,0,0,0,70                 ;
 48296 DEFB 0,0,0,0,0,0,0,0                    ;
 48304 DEFB 0,70,0,0,0,0,0,0                   ;
 48312 DEFB 0,0,0,0,0,0,0,41                   ;
 48320 DEFB 41,0,0,0,0,0,0,0                   ;
 48328 DEFB 0,0,0,0,70,70,0,0                  ;
 48336 DEFB 0,0,0,0,0,70,70,70                 ;
 48344 DEFB 0,0,0,0,0,0,0,41                   ;
 48352 DEFB 41,6,6,6,0,0,0,0                   ;
 48360 DEFB 0,0,0,0,0,0,0,0                    ;
 48368 DEFB 0,0,0,0,0,0,0,0                    ;
 48376 DEFB 0,0,0,0,0,0,0,41                   ;
 48384 DEFB 41,0,0,0,0,0,0,70                  ;
 48392 DEFB 70,0,0,0,0,0,0,0                   ;
 48400 DEFB 0,0,0,0,0,0,0,0                    ;
 48408 DEFB 0,0,70,70,70,0,0,41                ;
 48416 DEFB 41,0,0,0,0,0,0,0                   ;
 48424 DEFB 0,0,0,0,0,0,0,0                    ;
 48432 DEFB 0,0,70,70,70,0,0,0                 ;
 48440 DEFB 0,0,0,0,0,0,0,41                   ;
 48448 DEFB 41,3,3,3,0,0,0,0                   ;
 48456 DEFB 0,0,0,0,0,0,0,0                    ;
 48464 DEFB 0,0,0,0,0,0,0,0                    ;
 48472 DEFB 0,0,0,0,0,0,70,41                  ;
 48480 DEFB 41,0,0,0,0,0,0,0                   ;
 48488 DEFB 0,0,0,0,70,70,70,0                 ;
 48496 DEFB 0,0,0,0,0,0,70,70                  ;
 48504 DEFB 70,0,0,0,0,0,0,41                  ;
 48512 DEFB 41,0,0,0,0,0,70,70                 ;
 48520 DEFB 0,0,0,0,0,0,0,0                    ;
 48528 DEFB 0,0,0,0,0,0,0,5                    ;
 48536 DEFB 0,0,0,0,70,70,70,41                ;
 48544 DEFB 41,0,0,0,0,0,0,0                   ;
 48552 DEFB 0,0,0,0,0,0,0,0                    ;
 48560 DEFB 0,0,70,70,0,0,0,0                  ;
 48568 DEFB 0,0,0,0,0,0,0,41                   ;
 48576 DEFB 41,0,0,0,0,0,0,0                   ;
 48584 DEFB 0,0,0,0,0,0,0,0                    ;
 48592 DEFB 0,0,0,0,0,0,0,0                    ;
 48600 DEFB 0,0,0,0,0,0,0,41                   ;
 48608 DEFB 41,70,70,70,70,70,70,70            ;
 48616 DEFB 70,70,70,70,70,70,70,70            ;
 48624 DEFB 70,70,70,70,70,70,70,70            ;
 48632 DEFB 70,70,70,70,70,70,70,41            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 48640 DEFM "   Abandoned Uranium Workings   " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES3 }
; TABLE#
 48672 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 48681 DEFB 70,255,255,219,110,197,64,0,0      ; Floor
 48690 DEFB 6,255,219,165,36,82,32,8,0         ; Crumbling floor
 48699 DEFB 41,34,255,136,255,34,255,136,255   ; Wall
 48708 DEFB 3,240,102,240,102,0,153,255,0      ; Conveyor
 48717 DEFB 4,68,40,148,81,53,214,88,16        ; Nasty 1 (unused)
 48726 DEFB 5,16,16,16,84,56,214,56,84         ; Nasty 2
 48735 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 48744 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 48745 DEFB 0                                  ; Animation frame (see #R32873)
 48746 DEFB 1                                  ; Direction and movement flags:
                                               ; facing left (see #R32874)
 48747 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 48748 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
                                               ; (see #R32876)
 48750 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 48751 DEFB 1                                  ; Direction (right)
 48752 DEFW 30785                              ; Location in the screen buffer
                                               ; at #R28672: (10,1)
 48754 DEFB 3                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 48755 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 48756 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 48757 DEFB 3                                  ; {Item 1 at (0,1)
 48758 DEFW 23553                              ;
 48760 DEFB 96                                 ;
 48761 DEFB 255                                ; }
 48762 DEFB 4                                  ; {Item 2 at (1,12)
 48763 DEFW 23596                              ;
 48765 DEFB 96                                 ;
 48766 DEFB 255                                ; }
 48767 DEFB 5                                  ; {Item 3 at (1,25)
 48768 DEFW 23609                              ;
 48770 DEFB 96                                 ;
 48771 DEFB 255                                ; }
 48772 DEFB 6                                  ; {Item 4 at (6,16)
 48773 DEFW 23760                              ;
 48775 DEFB 96                                 ;
 48776 DEFB 255                                ; }
 48777 DEFB 3                                  ; {Item 5 at (6,30)
 48778 DEFW 23774                              ;
 48780 DEFB 96                                 ;
 48781 DEFB 255                                ; }
 48782 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL3 }
; TABLE#
 48783 DEFB 14                                 ; Attribute
 48784 DEFB 34,34,17,17,136,136,68,68          ; {Graphic data
 48792 DEFB 34,34,17,17,136,136,68,68          ;
 48800 DEFB 34,34,17,17,136,136,68,68          ;
 48808 DEFB 34,34,17,17,136,136,68,68          ; }
 48816 DEFW 23613                              ; Location in the attribute
                                               ; buffer at #R23552: (1,29)
 48818 DEFW 24637                              ; Location in the screen buffer
                                               ; at #R24576: (1,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM3 }
; TABLE#
 48820 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 48828 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 48829 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 48830 DEFB 66                                 ; {Horizontal guardian 1: y=13,
 48831 DEFW 23969                              ; initial x=1, 1<=x<=10,
 48833 DEFB 104                                ; speed=normal
 48834 DEFB 0                                  ;
 48835 DEFB 161                                ;
 48836 DEFB 170                                ; }
 48837 DEFB 68                                 ; {Horizontal guardian 2: y=13,
 48838 DEFW 23975                              ; initial x=7, 6<=x<=15,
 48840 DEFB 104                                ; speed=normal
 48841 DEFB 0                                  ;
 48842 DEFB 166                                ;
 48843 DEFB 175                                ; }
 48844 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 3 (unused)
 48851 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 48858 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 48859 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 48861 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 48868 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 48875 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 48882 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 48889 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE48896,48830(abandoned_uranium_workings_guardian0) |
; #SPRITE48928,48830(abandoned_uranium_workings_guardian1) |
; #SPRITE48960,48830(abandoned_uranium_workings_guardian2) |
; #SPRITE48992,48830(abandoned_uranium_workings_guardian3) |
; #SPRITE49024,48830(abandoned_uranium_workings_guardian4) |
; #SPRITE49056,48830(abandoned_uranium_workings_guardian5) |
; #SPRITE49088,48830(abandoned_uranium_workings_guardian6) |
; #SPRITE49120,48830(abandoned_uranium_workings_guardian7) }
; TABLE#
 48896 DEFB 7,0,11,128,19,192,19,192           ; {Guardian graphic data
 48904 DEFB 19,192,11,128,7,0,1,0              ;
 48912 DEFB 7,0,5,0,7,0,7,128                  ;
 48920 DEFB 79,128,95,192,254,192,60,64        ;
 48928 DEFB 1,192,2,224,5,208,5,208            ;
 48936 DEFB 5,208,2,224,1,192,0,64             ;
 48944 DEFB 1,192,1,64,1,192,1,224             ;
 48952 DEFB 35,224,47,240,127,176,31,16        ;
 48960 DEFB 0,112,0,232,1,228,1,228            ;
 48968 DEFB 1,228,0,232,0,112,0,16             ;
 48976 DEFB 0,112,0,80,0,112,0,248             ;
 48984 DEFB 33,248,39,252,127,236,15,196       ;
 48992 DEFB 0,28,0,54,0,99,0,99                ;
 49000 DEFB 0,99,0,54,0,28,0,4                 ;
 49008 DEFB 0,28,0,20,0,28,0,30                ;
 49016 DEFB 4,62,4,255,15,251,3,241            ;
 49024 DEFB 56,0,108,0,198,0,198,0             ;
 49032 DEFB 198,0,108,0,56,0,32,0              ;
 49040 DEFB 56,0,40,0,56,0,120,0               ;
 49048 DEFB 124,32,255,32,223,240,143,192      ;
 49056 DEFB 14,0,23,0,39,128,39,128            ;
 49064 DEFB 39,128,23,0,14,0,8,0               ;
 49072 DEFB 14,0,10,0,14,0,31,0                ;
 49080 DEFB 31,132,63,228,55,254,35,240        ;
 49088 DEFB 3,128,7,64,11,160,11,160           ;
 49096 DEFB 11,160,7,64,3,128,2,0              ;
 49104 DEFB 3,128,2,128,3,128,7,128            ;
 49112 DEFB 7,196,15,244,13,254,8,248          ;
 49120 DEFB 0,224,1,208,3,200,3,200            ;
 49128 DEFB 3,200,1,208,0,224,0,128            ;
 49136 DEFB 0,224,0,160,0,224,1,224            ;
 49144 DEFB 1,242,3,250,3,127,2,60             ; }

; Eugene's Lair (teleport: 36)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN4(eugene's_lair) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN4
b49152 DEFB 46,16,16,16,16,16,16,16            ; {Attributes
 49160 DEFB 16,16,16,16,16,16,16,16            ;
 49168 DEFB 16,16,16,16,19,16,16,16            ;
 49176 DEFB 16,16,16,16,16,16,16,46            ;
 49184 DEFB 46,16,16,16,16,16,16,16            ;
 49192 DEFB 16,16,16,16,16,16,16,16            ;
 49200 DEFB 16,16,16,16,16,16,16,16            ;
 49208 DEFB 16,16,16,16,16,16,16,46            ;
 49216 DEFB 46,16,16,16,16,16,16,16            ;
 49224 DEFB 16,16,16,16,16,16,16,16            ;
 49232 DEFB 16,16,16,16,16,16,16,16            ;
 49240 DEFB 16,16,16,16,16,16,16,46            ;
 49248 DEFB 46,16,16,16,16,16,16,16            ;
 49256 DEFB 16,16,16,16,16,16,16,16            ;
 49264 DEFB 16,16,16,16,16,16,16,16            ;
 49272 DEFB 16,16,16,16,16,16,16,46            ;
 49280 DEFB 46,16,16,16,16,16,16,16            ;
 49288 DEFB 16,16,16,16,16,16,16,16            ;
 49296 DEFB 16,16,16,16,16,16,16,16            ;
 49304 DEFB 22,16,16,16,16,16,16,46            ;
 49312 DEFB 46,21,21,21,21,21,21,21            ;
 49320 DEFB 21,21,21,21,21,21,16,16            ;
 49328 DEFB 16,16,20,20,20,20,21,21            ;
 49336 DEFB 21,21,21,21,16,16,16,46            ;
 49344 DEFB 46,16,16,16,16,16,16,16            ;
 49352 DEFB 16,16,16,16,16,16,16,16            ;
 49360 DEFB 16,16,16,16,16,16,16,16            ;
 49368 DEFB 16,16,16,16,16,21,21,46            ;
 49376 DEFB 46,16,16,16,16,16,16,16            ;
 49384 DEFB 16,16,16,16,16,16,16,16            ;
 49392 DEFB 16,16,16,16,16,22,16,16            ;
 49400 DEFB 16,16,16,16,16,16,16,46            ;
 49408 DEFB 46,16,16,16,16,16,16,16            ;
 49416 DEFB 16,16,16,16,16,16,16,16            ;
 49424 DEFB 16,16,86,86,86,86,86,86            ;
 49432 DEFB 86,86,86,86,16,16,16,46            ;
 49440 DEFB 46,16,16,16,21,21,21,21            ;
 49448 DEFB 21,21,21,21,21,21,16,16            ;
 49456 DEFB 16,16,16,16,16,16,16,16            ;
 49464 DEFB 16,16,16,16,16,16,16,46            ;
 49472 DEFB 46,16,16,16,16,16,16,16            ;
 49480 DEFB 16,16,16,16,16,16,16,16            ;
 49488 DEFB 16,16,16,16,16,16,16,16            ;
 49496 DEFB 16,16,16,16,16,16,16,46            ;
 49504 DEFB 46,20,20,21,21,21,21,21            ;
 49512 DEFB 21,21,21,21,21,21,16,16            ;
 49520 DEFB 16,16,21,21,21,21,21,21            ;
 49528 DEFB 21,16,16,16,16,16,21,46            ;
 49536 DEFB 46,16,16,16,16,16,16,16            ;
 49544 DEFB 46,16,16,16,16,16,16,16            ;
 49552 DEFB 16,16,16,16,16,16,16,16            ;
 49560 DEFB 16,16,16,16,16,16,16,46            ;
 49568 DEFB 46,21,21,16,16,16,16,16            ;
 49576 DEFB 46,16,16,16,16,16,46,16            ;
 49584 DEFB 16,46,16,16,16,16,16,16            ;
 49592 DEFB 16,16,16,16,16,16,16,46            ;
 49600 DEFB 46,16,16,16,16,22,16,16            ;
 49608 DEFB 46,16,16,16,16,16,46,16            ;
 49616 DEFB 16,46,46,46,46,46,46,46            ;
 49624 DEFB 22,22,16,16,16,16,16,46            ;
 49632 DEFB 46,21,21,21,21,21,21,21            ;
 49640 DEFB 46,46,46,46,46,46,46,46            ;
 49648 DEFB 46,46,46,46,46,46,46,46            ;
 49656 DEFB 21,21,21,21,21,21,21,46            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 49664 DEFM "         Eugene's Lair          " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES4 }
; TABLE#
 49696 DEFB 16,0,0,0,0,0,0,0,0                 ; Background
 49705 DEFB 21,255,255,219,110,197,64,0,0      ; Floor
 49714 DEFB 20,255,219,165,36,82,32,8,0        ; Crumbling floor
 49723 DEFB 46,34,255,136,255,34,255,136,255   ; Wall
 49732 DEFB 86,252,102,252,102,0,0,0,0         ; Conveyor
 49741 DEFB 22,68,40,148,81,53,214,88,16       ; Nasty 1
 49750 DEFB 19,126,60,28,24,24,8,8,8           ; Nasty 2
 49759 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 49768 DEFB 48                                 ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 49769 DEFB 0                                  ; Animation frame (see #R32873)
 49770 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 49771 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 49772 DEFW 23649                              ; Location in the attribute
                                               ; buffer at #R23552: (3,1) (see
                                               ; #R32876)
 49774 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 49775 DEFB 0                                  ; Direction (left)
 49776 DEFW 30738                              ; Location in the screen buffer
                                               ; at #R28672: (8,18)
 49778 DEFB 10                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 49779 DEFB 1                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 49780 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 49781 DEFB 19                                 ; {Item 1 at (1,30)
 49782 DEFW 23614                              ;
 49784 DEFB 96                                 ;
 49785 DEFB 255                                ; }
 49786 DEFB 20                                 ; {Item 2 at (6,10)
 49787 DEFW 23754                              ;
 49789 DEFB 96                                 ;
 49790 DEFB 255                                ; }
 49791 DEFB 21                                 ; {Item 3 at (7,29)
 49792 DEFW 23805                              ;
 49794 DEFB 96                                 ;
 49795 DEFB 255                                ; }
 49796 DEFB 22                                 ; {Item 4 at (12,7)
 49797 DEFW 23943                              ;
 49799 DEFB 104                                ;
 49800 DEFB 255                                ; }
 49801 DEFB 19                                 ; {Item 5 at (12,9)
 49802 DEFW 23945                              ;
 49804 DEFB 104                                ;
 49805 DEFB 255                                ; }
 49806 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL4 }
; TABLE#
 49807 DEFB 87                                 ; Attribute
 49808 DEFB 255,255,170,170,170,170,170,170    ; {Graphic data
 49816 DEFB 170,170,170,170,170,170,170,170    ;
 49824 DEFB 170,170,170,170,170,170,170,170    ;
 49832 DEFB 170,170,170,170,170,170,255,255    ; }
 49840 DEFW 23983                              ; Location in the attribute
                                               ; buffer at #R23552: (13,15)
 49842 DEFW 26799                              ; Location in the screen buffer
                                               ; at #R24576: (13,15)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM4 }
; TABLE#
 49844 DEFB 31,35,71,255,143,142,140,248       ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 49852 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 49853 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 49854 DEFB 22                                 ; {Horizontal guardian 1: y=3,
 49855 DEFW 23660                              ; initial x=12, 1<=x<=12,
 49857 DEFB 96                                 ; speed=normal
 49858 DEFB 7                                  ;
 49859 DEFB 97                                 ;
 49860 DEFB 108                                ; }
 49861 DEFB 16                                 ; {Horizontal guardian 2: y=7,
 49862 DEFW 23780                              ; initial x=4, 4<=x<=12,
 49864 DEFB 96                                 ; speed=normal
 49865 DEFB 0                                  ;
 49866 DEFB 228                                ;
 49867 DEFB 236                                ; }
 49868 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 3 (unused)
 49875 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 49882 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 and specify Eugene's
; initial direction and pixel y-coordinate.
 49883 DEFB 0                                  ; Initial direction (down)
 49884 DEFB 0                                  ; Initial pixel y-coordinate
; The next three bytes are unused.
 49885 DEFB 0,0,0                              ; Unused
; The next 32 bytes define the Eugene graphic.
; .
; #UDGTABLE
; { #SPRITE49888,23(eugene) }
; TABLE#
@label=EUGENEG
 49888 DEFB 3,192,15,240,31,248,31,248         ; {Eugene graphic data
 49896 DEFB 49,140,14,112,111,246,174,117      ;
 49904 DEFB 177,141,159,249,155,217,140,49     ;
 49912 DEFB 71,226,2,64,2,64,14,112            ; }
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE49920,49854(eugene's_lair_guardian0) |
; #SPRITE49952,49854(eugene's_lair_guardian1) |
; #SPRITE49984,49854(eugene's_lair_guardian2) |
; #SPRITE50016,49854(eugene's_lair_guardian3) |
; #SPRITE50048,49854(eugene's_lair_guardian4) |
; #SPRITE50080,49854(eugene's_lair_guardian5) |
; #SPRITE50112,49854(eugene's_lair_guardian6) |
; #SPRITE50144,49854(eugene's_lair_guardian7) }
; TABLE#
 49920 DEFB 192,0,192,0,192,0,192,0            ; {Guardian graphic data
 49928 DEFB 192,0,192,0,192,0,223,192          ;
 49936 DEFB 223,192,255,192,31,192,15,128      ;
 49944 DEFB 119,128,255,0,223,0,223,0          ;
 49952 DEFB 48,0,48,0,48,0,48,0                ;
 49960 DEFB 48,32,48,192,51,0,52,0             ;
 49968 DEFB 55,240,63,240,7,240,3,224          ;
 49976 DEFB 29,224,63,192,55,192,55,192        ;
 49984 DEFB 12,0,12,0,12,32,12,64              ;
 49992 DEFB 12,64,12,128,12,128,13,0           ;
 50000 DEFB 13,252,15,252,1,252,0,248          ;
 50008 DEFB 7,120,15,240,13,240,13,240         ;
 50016 DEFB 3,0,3,0,3,0,3,0                    ;
 50024 DEFB 3,2,3,12,3,48,3,64                 ;
 50032 DEFB 3,127,3,255,0,127,0,62             ;
 50040 DEFB 1,222,3,252,3,124,3,124            ;
 50048 DEFB 0,192,0,192,0,192,0,192            ;
 50056 DEFB 64,192,48,192,12,192,2,192         ;
 50064 DEFB 254,192,255,192,254,0,124,0        ;
 50072 DEFB 123,128,63,192,62,192,62,192       ;
 50080 DEFB 0,48,0,48,4,48,2,48                ;
 50088 DEFB 2,48,1,48,1,48,0,176               ;
 50096 DEFB 63,176,63,240,63,128,31,0          ;
 50104 DEFB 30,224,15,240,15,176,15,176        ;
 50112 DEFB 0,12,0,12,0,12,0,12                ;
 50120 DEFB 4,12,3,12,0,204,0,44               ;
 50128 DEFB 15,236,15,252,15,224,7,192         ;
 50136 DEFB 7,184,3,252,3,236,3,236            ;
 50144 DEFB 0,3,0,3,0,3,0,3                    ;
 50152 DEFB 0,3,0,3,0,3,3,251                  ;
 50160 DEFB 3,251,3,255,3,248,1,240            ;
 50168 DEFB 1,238,0,255,0,251,0,251            ; }

; Processing Plant (teleport: 136)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN5(processing_plant) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN5
b50176 DEFB 22,0,0,0,0,0,0,0                   ; {Attributes
 50184 DEFB 0,0,0,0,0,0,0,0                    ;
 50192 DEFB 0,0,0,0,0,0,0,0                    ;
 50200 DEFB 0,0,0,0,0,0,0,22                   ;
 50208 DEFB 22,0,0,0,0,0,0,0                   ;
 50216 DEFB 0,0,0,0,0,0,0,0                    ;
 50224 DEFB 0,0,0,0,0,0,0,0                    ;
 50232 DEFB 0,0,0,0,0,0,0,22                   ;
 50240 DEFB 22,0,0,0,0,0,0,0                   ;
 50248 DEFB 0,0,0,0,0,0,0,0                    ;
 50256 DEFB 0,0,0,0,0,0,0,0                    ;
 50264 DEFB 0,0,0,0,0,0,0,22                   ;
 50272 DEFB 22,0,0,0,0,0,0,0                   ;
 50280 DEFB 0,0,0,0,0,0,0,0                    ;
 50288 DEFB 0,0,0,0,0,0,0,0                    ;
 50296 DEFB 0,0,0,0,0,0,0,22                   ;
 50304 DEFB 22,0,0,0,0,0,0,0                   ;
 50312 DEFB 0,0,0,0,0,0,0,0                    ;
 50320 DEFB 0,0,0,0,0,6,0,0                    ;
 50328 DEFB 0,0,0,0,0,0,0,22                   ;
 50336 DEFB 22,0,0,0,0,0,0,0                   ;
 50344 DEFB 68,68,68,0,0,0,0,68                ;
 50352 DEFB 68,0,0,0,0,68,68,68                ;
 50360 DEFB 68,68,0,0,0,0,0,22                 ;
 50368 DEFB 22,0,0,68,68,0,0,0                 ;
 50376 DEFB 0,0,0,0,0,0,0,0                    ;
 50384 DEFB 22,0,0,0,0,0,0,0                   ;
 50392 DEFB 0,0,0,0,68,68,68,22                ;
 50400 DEFB 22,0,0,0,0,0,0,0                   ;
 50408 DEFB 0,0,0,0,0,0,0,0                    ;
 50416 DEFB 22,0,0,0,0,0,0,0                   ;
 50424 DEFB 0,0,0,0,0,0,0,22                   ;
 50432 DEFB 22,0,0,0,0,0,0,0                   ;
 50440 DEFB 0,0,0,0,0,0,0,0                    ;
 50448 DEFB 0,0,0,0,0,0,0,68                   ;
 50456 DEFB 68,68,68,68,0,0,0,22               ;
 50464 DEFB 22,68,68,0,0,0,0,0                 ;
 50472 DEFB 0,0,0,0,0,0,0,0                    ;
 50480 DEFB 0,0,0,0,0,0,0,0                    ;
 50488 DEFB 0,0,0,0,0,0,0,22                   ;
 50496 DEFB 22,0,0,0,0,0,0,68                  ;
 50504 DEFB 68,68,68,68,68,68,68,68            ;
 50512 DEFB 22,68,68,68,68,68,68,68            ;
 50520 DEFB 68,68,0,0,0,0,0,22                 ;
 50528 DEFB 22,0,0,0,0,0,0,0                   ;
 50536 DEFB 0,0,0,0,0,0,0,0                    ;
 50544 DEFB 22,6,0,0,0,0,0,0                   ;
 50552 DEFB 0,0,0,0,0,0,0,22                   ;
 50560 DEFB 22,0,0,67,0,0,0,0                  ;
 50568 DEFB 0,0,0,0,0,0,0,0                    ;
 50576 DEFB 22,0,0,0,0,0,0,0                   ;
 50584 DEFB 0,0,0,0,68,68,68,22                ;
 50592 DEFB 22,0,0,5,5,5,5,0                   ;
 50600 DEFB 0,0,0,0,0,0,0,0                    ;
 50608 DEFB 0,0,0,0,0,0,68,68                  ;
 50616 DEFB 0,0,0,0,0,0,0,22                   ;
 50624 DEFB 22,0,0,0,0,0,0,0                   ;
 50632 DEFB 0,0,0,0,0,0,0,0                    ;
 50640 DEFB 0,0,0,0,0,0,0,0                    ;
 50648 DEFB 0,0,0,0,0,0,0,22                   ;
 50656 DEFB 22,68,68,68,68,68,68,68            ;
 50664 DEFB 68,68,68,68,68,68,68,68            ;
 50672 DEFB 68,68,68,68,68,68,68,68            ;
 50680 DEFB 68,68,68,68,68,68,68,22            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 50688 DEFM "       Processing Plant         " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES5 }
; TABLE#
 50720 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 50729 DEFB 68,255,255,153,153,255,153,102,0   ; Floor
 50738 DEFB 4,255,219,165,36,82,32,8,0         ; Crumbling floor (unused)
 50747 DEFB 22,255,153,255,102,255,153,255,102 ; Wall
 50756 DEFB 5,240,102,240,102,0,153,255,0      ; Conveyor
 50765 DEFB 67,68,40,148,81,53,214,88,16       ; Nasty 1
 50774 DEFB 6,60,24,189,231,231,189,24,60      ; Nasty 2
 50783 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 50792 DEFB 48                                 ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 50793 DEFB 3                                  ; Animation frame (see #R32873)
 50794 DEFB 1                                  ; Direction and movement flags:
                                               ; facing left (see #R32874)
 50795 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 50796 DEFW 23663                              ; Location in the attribute
                                               ; buffer at #R23552: (3,15) (see
                                               ; #R32876)
 50798 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 50799 DEFB 0                                  ; Direction (left)
 50800 DEFW 30883                              ; Location in the screen buffer
                                               ; at #R28672: (13,3)
 50802 DEFB 4                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 50803 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 50804 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 50805 DEFB 3                                  ; {Item 1 at (6,15)
 50806 DEFW 23759                              ;
 50808 DEFB 96                                 ;
 50809 DEFB 255                                ; }
 50810 DEFB 4                                  ; {Item 2 at (6,17)
 50811 DEFW 23761                              ;
 50813 DEFB 96                                 ;
 50814 DEFB 255                                ; }
 50815 DEFB 5                                  ; {Item 3 at (7,30)
 50816 DEFW 23806                              ;
 50818 DEFB 96                                 ;
 50819 DEFB 255                                ; }
 50820 DEFB 6                                  ; {Item 4 at (10,1)
 50821 DEFW 23873                              ;
 50823 DEFB 104                                ;
 50824 DEFB 255                                ; }
 50825 DEFB 3                                  ; {Item 5 at (11,13)
 50826 DEFW 23917                              ;
 50828 DEFB 104                                ;
 50829 DEFB 255                                ; }
 50830 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL5 }
; TABLE#
 50831 DEFB 14                                 ; Attribute
 50832 DEFB 255,255,129,129,191,253,191,253    ; {Graphic data
 50840 DEFB 176,13,176,13,176,13,240,15        ;
 50848 DEFB 240,15,176,13,176,13,176,13        ;
 50856 DEFB 191,253,191,253,129,129,255,255    ; }
 50864 DEFW 23581                              ; Location in the attribute
                                               ; buffer at #R23552: (0,29)
 50866 DEFW 24605                              ; Location in the screen buffer
                                               ; at #R24576: (0,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM5 }
; TABLE#
 50868 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 50876 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 50877 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 50878 DEFB 70                                 ; {Horizontal guardian 1: y=8,
 50879 DEFW 23814                              ; initial x=6, 6<=x<=13,
 50881 DEFB 104                                ; speed=normal
 50882 DEFB 0                                  ;
 50883 DEFB 6                                  ;
 50884 DEFB 13                                 ; }
 50885 DEFB 67                                 ; {Horizontal guardian 2: y=8,
 50886 DEFW 23822                              ; initial x=14, 14<=x<=21,
 50888 DEFB 104                                ; speed=normal
 50889 DEFB 1                                  ;
 50890 DEFB 14                                 ;
 50891 DEFB 21                                 ; }
 50892 DEFB 69                                 ; {Horizontal guardian 3: y=13,
 50893 DEFW 23976                              ; initial x=8, 8<=x<=20,
 50895 DEFB 104                                ; speed=normal
 50896 DEFB 2                                  ;
 50897 DEFB 168                                ;
 50898 DEFB 180                                ; }
 50899 DEFB 6                                  ; {Horizontal guardian 4: y=13,
 50900 DEFW 23992                              ; initial x=24, 24<=x<=29,
 50902 DEFB 104                                ; speed=normal
 50903 DEFB 3                                  ;
 50904 DEFB 184                                ;
 50905 DEFB 189                                ; }
 50906 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 50907 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 50909 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 50916 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 50923 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 50930 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 50937 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE50944,50878(processing_plant_guardian0) |
; #SPRITE50976,50878(processing_plant_guardian1) |
; #SPRITE51008,50878(processing_plant_guardian2) |
; #SPRITE51040,50878(processing_plant_guardian3) |
; #SPRITE51072,50878(processing_plant_guardian4) |
; #SPRITE51104,50878(processing_plant_guardian5) |
; #SPRITE51136,50878(processing_plant_guardian6) |
; #SPRITE51168,50878(processing_plant_guardian7) }
; TABLE#
 50944 DEFB 31,0,127,192,115,224,243,128       ; {Guardian graphic data
 50952 DEFB 254,0,248,0,254,0,255,128          ;
 50960 DEFB 127,224,127,192,31,0,10,0          ;
 50968 DEFB 10,0,10,0,10,0,31,0                ;
 50976 DEFB 7,192,31,240,30,112,62,120         ;
 50984 DEFB 63,248,62,0,63,248,63,248          ;
 50992 DEFB 31,240,31,240,7,192,2,128          ;
 51000 DEFB 2,128,7,192,0,0,0,0                ;
 51008 DEFB 1,240,7,252,7,62,15,56             ;
 51016 DEFB 15,224,15,128,15,224,15,248        ;
 51024 DEFB 7,254,7,252,1,240,1,240            ;
 51032 DEFB 0,0,0,0,0,0,0,0                    ;
 51040 DEFB 0,124,1,207,1,206,3,252            ;
 51048 DEFB 3,240,3,224,3,240,3,252            ;
 51056 DEFB 1,254,1,255,0,124,0,40             ;
 51064 DEFB 0,40,0,124,0,0,0,0                 ;
 51072 DEFB 62,0,243,128,115,128,63,192        ;
 51080 DEFB 15,192,7,192,15,192,63,192         ;
 51088 DEFB 127,128,255,128,62,0,20,0          ;
 51096 DEFB 20,0,62,0,0,0,0,0                  ;
 51104 DEFB 15,128,63,224,124,224,28,240       ;
 51112 DEFB 7,240,1,240,7,240,31,240           ;
 51120 DEFB 127,224,63,224,15,128,15,128       ;
 51128 DEFB 0,0,0,0,0,0,0,0                    ;
 51136 DEFB 3,224,15,248,14,120,30,124         ;
 51144 DEFB 31,252,0,124,31,252,31,252         ;
 51152 DEFB 15,248,15,248,3,224,1,64           ;
 51160 DEFB 1,64,3,224,0,0,0,0                 ;
 51168 DEFB 0,248,3,254,7,206,1,207            ;
 51176 DEFB 0,127,0,31,0,127,1,255             ;
 51184 DEFB 7,254,3,254,0,248,0,80             ;
 51192 DEFB 0,80,0,80,0,80,0,248               ; }

; The Vat (teleport: 236)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN6(the_vat) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN6
b51200 DEFB 77,0,0,0,0,0,0,0                   ; {Attributes
 51208 DEFB 0,0,0,0,0,0,77,77                  ;
 51216 DEFB 77,77,77,77,77,77,77,77            ;
 51224 DEFB 77,77,77,77,77,77,77,77            ;
 51232 DEFB 77,0,0,0,0,0,0,0                   ;
 51240 DEFB 0,0,0,0,0,0,0,0                    ;
 51248 DEFB 0,0,0,0,0,0,0,0                    ;
 51256 DEFB 0,0,0,0,0,0,0,77                   ;
 51264 DEFB 77,0,0,0,0,0,0,0                   ;
 51272 DEFB 0,0,0,0,0,0,0,0                    ;
 51280 DEFB 0,0,0,0,0,0,0,0                    ;
 51288 DEFB 0,0,0,0,0,0,0,77                   ;
 51296 DEFB 77,0,0,0,0,0,0,0                   ;
 51304 DEFB 0,0,0,0,0,0,0,70                   ;
 51312 DEFB 70,77,2,2,2,2,2,2                  ;
 51320 DEFB 2,2,2,2,2,2,0,77                   ;
 51328 DEFB 77,0,0,0,0,0,0,0                   ;
 51336 DEFB 0,0,0,0,0,0,0,0                    ;
 51344 DEFB 0,77,2,2,2,2,2,2                   ;
 51352 DEFB 2,2,2,2,2,2,2,77                   ;
 51360 DEFB 77,0,0,0,0,0,0,4                   ;
 51368 DEFB 4,4,4,4,0,0,70,70                  ;
 51376 DEFB 70,77,2,2,2,2,2,2                  ;
 51384 DEFB 2,2,2,2,22,2,2,77                  ;
 51392 DEFB 77,70,70,70,0,0,0,0                ;
 51400 DEFB 0,0,0,0,0,0,0,0                    ;
 51408 DEFB 0,77,2,2,0,2,2,2                   ;
 51416 DEFB 2,2,2,2,2,2,2,77                   ;
 51424 DEFB 77,0,0,0,0,0,0,0                   ;
 51432 DEFB 0,0,0,0,0,0,0,0                    ;
 51440 DEFB 0,77,2,2,2,2,2,2                   ;
 51448 DEFB 2,2,2,0,2,2,2,77                   ;
 51456 DEFB 77,70,0,0,0,0,0,0                  ;
 51464 DEFB 0,0,0,0,0,0,0,0                    ;
 51472 DEFB 0,77,2,2,2,2,2,22                  ;
 51480 DEFB 2,2,2,2,2,2,2,77                   ;
 51488 DEFB 77,0,0,0,0,0,0,0                   ;
 51496 DEFB 0,0,0,0,0,0,70,70                  ;
 51504 DEFB 70,77,2,2,2,2,2,2                  ;
 51512 DEFB 2,2,2,2,2,2,2,77                   ;
 51520 DEFB 77,70,70,70,70,70,70,70            ;
 51528 DEFB 70,70,70,70,0,0,0,0                ;
 51536 DEFB 0,77,2,0,2,2,2,2                   ;
 51544 DEFB 2,2,2,2,22,2,2,77                  ;
 51552 DEFB 77,0,0,0,0,0,0,0                   ;
 51560 DEFB 0,0,0,0,0,0,0,0                    ;
 51568 DEFB 0,77,2,2,2,2,2,2                   ;
 51576 DEFB 2,2,2,2,2,2,0,77                   ;
 51584 DEFB 77,0,0,0,0,0,0,0                   ;
 51592 DEFB 0,0,0,0,0,0,77,77                  ;
 51600 DEFB 77,77,2,2,2,2,2,22                 ;
 51608 DEFB 2,2,2,2,2,2,2,77                   ;
 51616 DEFB 77,0,0,0,0,0,0,0                   ;
 51624 DEFB 0,70,70,70,0,0,77,0                ;
 51632 DEFB 0,0,0,0,0,0,0,0                    ;
 51640 DEFB 0,0,0,0,0,0,0,77                   ;
 51648 DEFB 77,0,0,0,0,0,0,0                   ;
 51656 DEFB 0,0,0,0,0,0,77,0                   ;
 51664 DEFB 0,0,0,0,0,0,0,0                    ;
 51672 DEFB 0,0,0,0,0,0,0,77                   ;
 51680 DEFB 77,70,70,70,70,70,70,70            ;
 51688 DEFB 70,70,70,70,70,70,77,77            ;
 51696 DEFB 77,77,77,77,77,77,77,77            ;
 51704 DEFB 77,77,77,77,77,77,77,77            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 51712 DEFM "            The Vat             " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES6 }
; TABLE#
 51744 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 51753 DEFB 70,255,255,219,110,197,64,0,0      ; Floor
 51762 DEFB 2,255,170,85,170,85,170,85,170     ; Crumbling floor
 51771 DEFB 77,34,255,136,255,34,255,136,255   ; Wall
 51780 DEFB 4,244,102,244,0,0,0,0,0            ; Conveyor
 51789 DEFB 21,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 51798 DEFB 22,165,66,60,219,60,126,165,36     ; Nasty 2
 51807 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 51816 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 51817 DEFB 0                                  ; Animation frame (see #R32873)
 51818 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 51819 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 51820 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 51822 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 51823 DEFB 0                                  ; Direction (left)
 51824 DEFW 28839                              ; Location in the screen buffer
                                               ; at #R28672: (5,7)
 51826 DEFB 5                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 51827 DEFB 4                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 51828 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 51829 DEFB 19                                 ; {Item 1 at (3,30)
 51830 DEFW 23678                              ;
 51832 DEFB 96                                 ;
 51833 DEFB 255                                ; }
 51834 DEFB 20                                 ; {Item 2 at (6,20)
 51835 DEFW 23764                              ;
 51837 DEFB 96                                 ;
 51838 DEFB 255                                ; }
 51839 DEFB 21                                 ; {Item 3 at (7,27)
 51840 DEFW 23803                              ;
 51842 DEFB 96                                 ;
 51843 DEFB 255                                ; }
 51844 DEFB 22                                 ; {Item 4 at (10,19)
 51845 DEFW 23891                              ;
 51847 DEFB 104                                ;
 51848 DEFB 255                                ; }
 51849 DEFB 19                                 ; {Item 5 at (11,30)
 51850 DEFW 23934                              ;
 51852 DEFB 104                                ;
 51853 DEFB 255                                ; }
 51854 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL6 }
; TABLE#
 51855 DEFB 11                                 ; Attribute
 51856 DEFB 255,255,129,129,129,129,129,129    ; {Graphic data
 51864 DEFB 129,129,129,129,129,129,255,255    ;
 51872 DEFB 255,255,129,129,129,129,129,129    ;
 51880 DEFB 129,129,129,129,129,129,255,255    ; }
 51888 DEFW 23983                              ; Location in the attribute
                                               ; buffer at #R23552: (13,15)
 51890 DEFW 26799                              ; Location in the screen buffer
                                               ; at #R24576: (13,15)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM6 }
; TABLE#
 51892 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 51900 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 51901 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 51902 DEFB 69                                 ; {Horizontal guardian 1: y=1,
 51903 DEFW 23599                              ; initial x=15, 15<=x<=29,
 51905 DEFB 96                                 ; speed=normal
 51906 DEFB 0                                  ;
 51907 DEFB 47                                 ;
 51908 DEFB 61                                 ; }
 51909 DEFB 67                                 ; {Horizontal guardian 2: y=8,
 51910 DEFW 23818                              ; initial x=10, 2<=x<=10,
 51912 DEFB 104                                ; speed=normal
 51913 DEFB 7                                  ;
 51914 DEFB 2                                  ;
 51915 DEFB 10                                 ; }
 51916 DEFB 6                                  ; {Horizontal guardian 3: y=13,
 51917 DEFW 23985                              ; initial x=17, 17<=x<=29,
 51919 DEFB 104                                ; speed=normal
 51920 DEFB 0                                  ;
 51921 DEFB 177                                ;
 51922 DEFB 189                                ; }
 51923 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 4 (unused)
 51930 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 51931 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 51933 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 51940 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 51947 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 51954 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 51961 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE51968,51902(the_vat_guardian0) |
; #SPRITE52000,51902(the_vat_guardian1) | #SPRITE52032,51902(the_vat_guardian2)
; | #SPRITE52064,51902(the_vat_guardian3) |
; #SPRITE52096,51902(the_vat_guardian4) | #SPRITE52128,51902(the_vat_guardian5)
; | #SPRITE52160,51902(the_vat_guardian6) |
; #SPRITE52192,51902(the_vat_guardian7) }
; TABLE#
 51968 DEFB 24,0,28,0,10,128,15,128            ; {Guardian graphic data
 51976 DEFB 12,0,28,0,30,0,29,0                ;
 51984 DEFB 60,0,62,0,62,0,110,0               ;
 51992 DEFB 68,0,66,0,129,0,0,0                ;
 52000 DEFB 0,0,0,0,6,0,7,0                    ;
 52008 DEFB 2,160,3,224,3,128,7,0              ;
 52016 DEFB 7,128,7,64,15,0,15,128             ;
 52024 DEFB 15,128,27,128,51,0,64,192          ;
 52032 DEFB 0,0,0,0,0,0,0,0                    ;
 52040 DEFB 1,128,1,192,0,168,0,248            ;
 52048 DEFB 0,224,1,192,1,224,1,208            ;
 52056 DEFB 3,192,3,224,7,224,62,248           ;
 52064 DEFB 0,0,0,0,0,96,0,112                 ;
 52072 DEFB 0,42,0,62,0,56,0,112               ;
 52080 DEFB 0,120,0,116,0,240,0,248            ;
 52088 DEFB 1,248,1,176,3,12,4,0               ;
 52096 DEFB 0,0,0,0,6,0,14,0                   ;
 52104 DEFB 84,0,124,0,28,0,14,0               ;
 52112 DEFB 30,0,46,0,15,0,31,0                ;
 52120 DEFB 31,128,13,128,48,192,0,32          ;
 52128 DEFB 0,0,0,0,0,0,0,0                    ;
 52136 DEFB 1,128,3,128,21,0,31,0              ;
 52144 DEFB 7,0,3,128,7,128,11,128             ;
 52152 DEFB 3,192,7,192,7,224,31,124           ;
 52160 DEFB 0,0,0,0,0,96,0,224                 ;
 52168 DEFB 5,64,7,192,1,192,0,224             ;
 52176 DEFB 1,224,2,224,0,240,1,240            ;
 52184 DEFB 1,240,1,216,0,204,3,2              ;
 52192 DEFB 0,24,0,56,1,80,1,240               ;
 52200 DEFB 0,48,0,56,0,120,0,184              ;
 52208 DEFB 0,60,0,124,0,124,0,118             ;
 52216 DEFB 0,34,0,66,0,129,0,0                ; }

; Miner Willy meets the Kong Beast (teleport: 1236)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN7(miner_willy_meets_the_kong_beast) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN7
b52224 DEFB 114,0,5,0,0,0,6,0                  ; {Attributes
 52232 DEFB 0,0,5,0,0,0,0,0                    ;
 52240 DEFB 0,114,6,0,114,0,0,0                ;
 52248 DEFB 0,0,0,0,0,0,0,114                  ;
 52256 DEFB 114,0,0,0,0,0,0,0                  ;
 52264 DEFB 0,0,0,0,0,0,0,0                    ;
 52272 DEFB 0,114,0,0,114,0,0,0                ;
 52280 DEFB 0,0,0,0,0,0,0,114                  ;
 52288 DEFB 114,0,0,0,0,0,0,0                  ;
 52296 DEFB 0,0,0,0,0,0,0,66                   ;
 52304 DEFB 66,114,0,0,0,0,0,0                 ;
 52312 DEFB 0,0,0,0,0,66,66,114                ;
 52320 DEFB 114,0,0,0,0,0,0,0                  ;
 52328 DEFB 0,0,0,0,0,0,0,0                    ;
 52336 DEFB 0,114,0,0,0,0,0,0                  ;
 52344 DEFB 0,0,0,0,0,0,0,114                  ;
 52352 DEFB 114,0,0,0,0,0,0,0                  ;
 52360 DEFB 0,0,0,0,0,0,0,0                    ;
 52368 DEFB 0,114,0,0,0,0,0,0                  ;
 52376 DEFB 0,0,0,0,0,0,0,114                  ;
 52384 DEFB 114,66,66,66,0,0,0,0               ;
 52392 DEFB 0,66,66,66,66,66,66,0              ;
 52400 DEFB 0,114,66,66,0,0,0,0                ;
 52408 DEFB 0,0,0,0,0,0,0,114                  ;
 52416 DEFB 114,0,0,0,0,0,0,0                  ;
 52424 DEFB 0,0,0,0,0,0,0,0                    ;
 52432 DEFB 0,114,0,0,0,66,66,66               ;
 52440 DEFB 66,0,0,0,0,0,66,114                ;
 52448 DEFB 114,0,66,66,66,0,0,0               ;
 52456 DEFB 0,0,0,0,0,0,0,0                    ;
 52464 DEFB 0,114,0,0,0,0,0,0                  ;
 52472 DEFB 0,0,0,66,0,0,0,114                 ;
 52480 DEFB 114,0,0,0,0,0,0,0                  ;
 52488 DEFB 66,66,66,0,0,0,0,0                 ;
 52496 DEFB 0,114,0,0,0,0,0,0                  ;
 52504 DEFB 0,0,0,0,0,0,0,114                  ;
 52512 DEFB 114,0,0,0,0,0,0,0                  ;
 52520 DEFB 0,0,0,0,0,0,0,0                    ;
 52528 DEFB 0,114,66,66,66,66,66,0             ;
 52536 DEFB 0,0,0,0,0,0,0,114                  ;
 52544 DEFB 114,66,0,0,0,0,0,0                 ;
 52552 DEFB 0,0,0,0,66,66,66,0                 ;
 52560 DEFB 0,114,0,0,0,0,0,0                  ;
 52568 DEFB 0,0,0,66,66,66,66,114              ;
 52576 DEFB 114,0,0,0,0,0,0,0                  ;
 52584 DEFB 0,66,66,0,0,0,0,0                  ;
 52592 DEFB 0,114,0,0,0,0,0,0                  ;
 52600 DEFB 0,0,0,0,0,0,0,114                  ;
 52608 DEFB 114,0,0,0,66,66,0,0                ;
 52616 DEFB 0,0,0,0,0,0,0,0                    ;
 52624 DEFB 0,114,0,0,0,0,66,66                ;
 52632 DEFB 66,66,66,0,0,0,0,114               ;
 52640 DEFB 114,0,0,0,0,0,0,0                  ;
 52648 DEFB 0,0,0,68,68,68,114,0               ;
 52656 DEFB 0,114,66,66,0,0,0,0                ;
 52664 DEFB 0,0,0,0,0,0,0,114                  ;
 52672 DEFB 114,0,0,0,0,0,0,0                  ;
 52680 DEFB 0,0,0,0,0,0,114,0                  ;
 52688 DEFB 0,114,0,0,0,0,0,4                  ;
 52696 DEFB 0,0,0,0,0,0,0,114                  ;
 52704 DEFB 114,66,66,66,66,66,66,66           ;
 52712 DEFB 66,66,66,66,66,66,66,66            ;
 52720 DEFB 66,66,66,66,66,66,66,66            ;
 52728 DEFB 66,66,66,66,66,66,66,114           ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 52736 DEFM "Miner Willy meets the Kong Beast" ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES7 }
; TABLE#
 52768 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 52777 DEFB 66,255,255,219,110,197,64,0,0      ; Floor
 52786 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor (unused)
 52795 DEFB 114,34,255,136,255,34,255,136,255  ; Wall
 52804 DEFB 68,240,102,240,170,0,0,0,0         ; Conveyor
 52813 DEFB 4,68,40,148,81,53,214,88,16        ; Nasty 1
 52822 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2
 52831 DEFB 6,255,129,129,66,60,16,96,96       ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 52840 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 52841 DEFB 0                                  ; Animation frame (see #R32873)
 52842 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 52843 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 52844 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 52846 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 52847 DEFB 1                                  ; Direction (right)
 52848 DEFW 30891                              ; Location in the screen buffer
                                               ; at #R28672: (13,11)
 52850 DEFB 3                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 52851 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 52852 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 52853 DEFB 3                                  ; {Item 1 at (2,13)
 52854 DEFW 23629                              ;
 52856 DEFB 96                                 ;
 52857 DEFB 255                                ; }
 52858 DEFB 4                                  ; {Item 2 at (6,14)
 52859 DEFW 23758                              ;
 52861 DEFB 96                                 ;
 52862 DEFB 255                                ; }
 52863 DEFB 5                                  ; {Item 3 at (8,2)
 52864 DEFW 23810                              ;
 52866 DEFB 104                                ;
 52867 DEFB 255                                ; }
 52868 DEFB 6                                  ; {Item 4 at (13,29)
 52869 DEFW 23997                              ;
 52871 DEFB 104                                ;
 52872 DEFB 255                                ; }
 52873 DEFB 255,255,255,255,255                ; Item 5 (unused)
 52878 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL7 }
; TABLE#
 52879 DEFB 14                                 ; Attribute
 52880 DEFB 255,255,128,1,192,3,160,5          ; {Graphic data
 52888 DEFB 144,9,200,19,164,37,146,73         ;
 52896 DEFB 201,147,164,37,146,73,201,147      ;
 52904 DEFB 164,37,201,147,146,73,255,255      ; }
 52912 DEFW 23983                              ; Location in the attribute
                                               ; buffer at #R23552: (13,15)
 52914 DEFW 26799                              ; Location in the screen buffer
                                               ; at #R24576: (13,15)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM7 }
; TABLE#
 52916 DEFB 128,192,236,114,40,84,138,135      ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 52924 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 52925 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 52926 DEFB 68                                 ; {Horizontal guardian 1: y=13,
 52927 DEFW 23977                              ; initial x=9, 1<=x<=9,
 52929 DEFB 104                                ; speed=normal
 52930 DEFB 7                                  ;
 52931 DEFB 161                                ;
 52932 DEFB 169                                ; }
 52933 DEFB 195                                ; {Horizontal guardian 2: y=11,
 52934 DEFW 23915                              ; initial x=11, 11<=x<=15,
 52936 DEFB 104                                ; speed=slow
 52937 DEFB 0                                  ;
 52938 DEFB 107                                ;
 52939 DEFB 111                                ; }
 52940 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 52947 DEFB 5                                  ; {Horizontal guardian 4: y=7,
 52948 DEFW 23794                              ; initial x=18, 18<=x<=21,
 52950 DEFB 96                                 ; speed=normal
 52951 DEFB 0                                  ;
 52952 DEFB 242                                ;
 52953 DEFB 245                                ; }
 52954 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988; the first byte
; specifies the Kong Beast's initial status, but the second byte is not used.
 52955 DEFB 0                                  ; Initial status (on the ledge)
 52956 DEFB 0                                  ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 52957 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 52964 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 52971 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 52978 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 52985 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE52992,37389(miner_willy_meets_the_kong_beast_guardian0) |
; #SPRITE53024,37389(miner_willy_meets_the_kong_beast_guardian1) |
; #SPRITE53056,37389(miner_willy_meets_the_kong_beast_guardian2) |
; #SPRITE53088,37389(miner_willy_meets_the_kong_beast_guardian3) |
; #SPRITE53120,52926(miner_willy_meets_the_kong_beast_guardian4) |
; #SPRITE53152,52926(miner_willy_meets_the_kong_beast_guardian5) |
; #SPRITE53184,52926(miner_willy_meets_the_kong_beast_guardian6) |
; #SPRITE53216,52926(miner_willy_meets_the_kong_beast_guardian7) }
; TABLE#
 52992 DEFB 19,200,29,184,15,240,6,96          ; {Guardian graphic data
 53000 DEFB 5,160,2,64,7,224,15,240            ;
 53008 DEFB 31,248,51,204,99,198,70,98         ;
 53016 DEFB 44,52,6,96,2,64,14,112             ;
 53024 DEFB 11,208,13,176,15,240,6,96          ;
 53032 DEFB 5,160,2,64,3,192,31,248            ;
 53040 DEFB 127,254,231,231,131,193,199,227    ;
 53048 DEFB 6,96,12,48,8,16,56,28              ;
 53056 DEFB 28,56,6,96,12,48,102,102           ;
 53064 DEFB 35,196,103,230,55,236,31,248       ;
 53072 DEFB 15,240,7,224,2,64,5,160            ;
 53080 DEFB 6,96,15,240,13,176,11,208          ;
 53088 DEFB 112,14,24,24,12,48,6,96            ;
 53096 DEFB 99,198,39,228,103,230,55,236       ;
 53104 DEFB 31,248,15,240,2,64,5,160           ;
 53112 DEFB 22,104,15,240,13,176,3,192         ;
 53120 DEFB 8,0,5,0,8,128,37,0                 ;
 53128 DEFB 72,128,33,0,76,0,51,0              ;
 53136 DEFB 68,128,68,128,136,64,132,64        ;
 53144 DEFB 72,128,72,128,51,0,12,0            ;
 53152 DEFB 2,0,17,32,10,64,17,32              ;
 53160 DEFB 10,64,16,32,3,0,12,192             ;
 53168 DEFB 16,32,16,96,34,144,37,16           ;
 53176 DEFB 24,32,16,32,12,192,3,0             ;
 53184 DEFB 0,64,2,32,4,72,2,36                ;
 53192 DEFB 4,72,2,4,0,200,3,48                ;
 53200 DEFB 4,8,4,8,11,68,8,180                ;
 53208 DEFB 4,8,4,8,3,48,0,192                 ;
 53216 DEFB 0,68,1,34,2,68,1,34                ;
 53224 DEFB 2,68,1,2,2,48,0,204                ;
 53232 DEFB 1,66,1,34,2,17,2,33                ;
 53240 DEFB 1,18,1,10,0,204,0,48               ; }

; Wacky Amoebatrons (teleport: 46)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN8(wacky_amoebatrons) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN8
b53248 DEFB 22,0,0,22,0,0,0,0                  ; {Attributes
 53256 DEFB 0,0,0,0,0,0,0,0                    ;
 53264 DEFB 0,0,0,0,0,0,0,0                    ;
 53272 DEFB 0,0,0,0,0,0,0,22                   ;
 53280 DEFB 22,0,0,0,0,0,0,0                   ;
 53288 DEFB 0,0,0,0,0,0,0,0                    ;
 53296 DEFB 0,0,0,0,0,0,0,0                    ;
 53304 DEFB 0,0,0,0,0,0,0,22                   ;
 53312 DEFB 22,0,0,0,0,0,0,0                   ;
 53320 DEFB 0,0,0,0,0,0,0,0                    ;
 53328 DEFB 0,0,0,0,0,0,0,0                    ;
 53336 DEFB 0,0,0,0,0,0,0,22                   ;
 53344 DEFB 22,0,0,0,0,0,0,0                   ;
 53352 DEFB 0,0,0,0,0,0,0,0                    ;
 53360 DEFB 0,0,0,0,0,0,0,0                    ;
 53368 DEFB 0,0,0,0,0,0,0,22                   ;
 53376 DEFB 22,0,0,0,0,0,0,0                   ;
 53384 DEFB 0,0,0,0,0,0,0,0                    ;
 53392 DEFB 0,0,0,0,0,0,0,0                    ;
 53400 DEFB 0,0,0,0,0,0,0,22                   ;
 53408 DEFB 22,6,6,6,6,0,0,6                   ;
 53416 DEFB 6,6,0,0,6,6,6,6                    ;
 53424 DEFB 6,6,6,6,0,0,6,6                    ;
 53432 DEFB 6,0,0,6,6,0,0,22                   ;
 53440 DEFB 22,0,0,0,0,0,0,0                   ;
 53448 DEFB 0,0,0,0,0,0,0,0                    ;
 53456 DEFB 0,0,0,0,0,0,0,0                    ;
 53464 DEFB 0,0,0,0,0,0,0,22                   ;
 53472 DEFB 22,0,0,0,0,0,0,0                   ;
 53480 DEFB 0,0,0,0,0,0,0,0                    ;
 53488 DEFB 0,0,0,0,0,0,0,0                    ;
 53496 DEFB 0,0,0,0,0,6,6,22                   ;
 53504 DEFB 22,0,0,6,6,0,0,6                   ;
 53512 DEFB 6,6,0,0,4,4,4,4                    ;
 53520 DEFB 4,4,4,4,0,0,0,0                    ;
 53528 DEFB 0,0,0,0,0,0,0,22                   ;
 53536 DEFB 22,0,0,0,0,0,0,0                   ;
 53544 DEFB 0,0,0,0,0,0,0,0                    ;
 53552 DEFB 0,0,0,0,0,0,6,6                    ;
 53560 DEFB 6,0,0,6,6,0,0,22                   ;
 53568 DEFB 22,6,6,0,0,0,0,0                   ;
 53576 DEFB 0,0,0,0,0,0,0,0                    ;
 53584 DEFB 0,0,0,0,0,0,0,0                    ;
 53592 DEFB 0,0,0,0,0,0,0,22                   ;
 53600 DEFB 22,0,0,0,0,0,0,0                   ;
 53608 DEFB 0,0,0,0,0,0,0,0                    ;
 53616 DEFB 0,0,0,0,0,0,0,0                    ;
 53624 DEFB 0,0,0,0,0,0,0,22                   ;
 53632 DEFB 22,0,0,6,6,0,0,6                   ;
 53640 DEFB 6,6,0,0,6,6,6,6                    ;
 53648 DEFB 6,6,6,6,0,0,6,6                    ;
 53656 DEFB 6,0,0,6,6,0,0,22                   ;
 53664 DEFB 22,0,0,0,0,0,0,0                   ;
 53672 DEFB 0,0,0,0,0,0,0,0                    ;
 53680 DEFB 0,0,0,0,0,0,0,0                    ;
 53688 DEFB 0,0,0,0,0,6,6,22                   ;
 53696 DEFB 22,0,0,0,0,0,0,0                   ;
 53704 DEFB 0,0,0,0,0,0,0,0                    ;
 53712 DEFB 0,0,0,0,0,0,0,0                    ;
 53720 DEFB 0,0,0,0,0,0,0,22                   ;
 53728 DEFB 22,6,6,6,6,6,6,6                   ;
 53736 DEFB 6,6,6,6,6,6,6,6                    ;
 53744 DEFB 6,6,6,6,6,6,6,6                    ;
 53752 DEFB 6,6,6,6,6,6,6,22                   ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 53760 DEFM "        Wacky Amoebatrons       " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES8 }
; TABLE#
 53792 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 53801 DEFB 6,255,255,219,110,197,64,0,0       ; Floor
 53810 DEFB 66,255,219,165,36,82,32,8,0        ; Crumbling floor (unused)
 53819 DEFB 22,90,90,90,90,90,90,90,90         ; Wall
 53828 DEFB 4,240,102,240,102,0,0,0,0          ; Conveyor
 53837 DEFB 68,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 53846 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2 (unused)
 53855 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 53864 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 53865 DEFB 0                                  ; Animation frame (see #R32873)
 53866 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 53867 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 53868 DEFW 23969                              ; Location in the attribute
                                               ; buffer at #R23552: (13,1) (see
                                               ; #R32876)
 53870 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 53871 DEFB 1                                  ; Direction (right)
 53872 DEFW 30732                              ; Location in the screen buffer
                                               ; at #R28672: (8,12)
 53874 DEFB 8                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 53875 DEFB 1                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 53876 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 53877 DEFB 3                                  ; {Item 1 at (1,16)
 53878 DEFW 23600                              ;
 53880 DEFB 96                                 ;
 53881 DEFB 255                                ; }
 53882 DEFB 255,255,255,255,255                ; Item 2 (unused)
 53887 DEFB 0,255,255,255,255                  ; Item 3 (unused)
 53892 DEFB 0,255,255,255,255                  ; Item 4 (unused)
 53897 DEFB 0,255,255,255,255                  ; Item 5 (unused)
 53902 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL8 }
; TABLE#
 53903 DEFB 14                                 ; Attribute
 53904 DEFB 255,255,128,1,129,129,130,65       ; {Graphic data
 53912 DEFB 132,33,136,17,144,9,161,133        ;
 53920 DEFB 161,133,144,9,136,17,132,33        ;
 53928 DEFB 130,65,129,129,128,1,255,255       ; }
 53936 DEFW 23553                              ; Location in the attribute
                                               ; buffer at #R23552: (0,1)
 53938 DEFW 24577                              ; Location in the screen buffer
                                               ; at #R24576: (0,1)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM8 }
; TABLE#
 53940 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 53948 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 53949 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 53950 DEFB 68                                 ; {Horizontal guardian 1: y=3,
 53951 DEFW 23660                              ; initial x=12, 12<=x<=18,
 53953 DEFB 96                                 ; speed=normal
 53954 DEFB 0                                  ;
 53955 DEFB 108                                ;
 53956 DEFB 114                                ; }
 53957 DEFB 133                                ; {Horizontal guardian 2: y=10,
 53958 DEFW 23888                              ; initial x=16, 12<=x<=18,
 53960 DEFB 104                                ; speed=slow
 53961 DEFB 0                                  ;
 53962 DEFB 76                                 ;
 53963 DEFB 82                                 ; }
 53964 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 53971 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 53978 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 53979 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 53981 DEFB 67                                 ; {Vertical guardian 1: x=5,
 53982 DEFB 0                                  ; initial y=8, 5<=y<100, initial
 53983 DEFB 8                                  ; y-increment=1
 53984 DEFB 5                                  ;
 53985 DEFB 1                                  ;
 53986 DEFB 5                                  ;
 53987 DEFB 100                                ; }
 53988 DEFB 4                                  ; {Vertical guardian 2: x=10,
 53989 DEFB 1                                  ; initial y=8, 5<=y<100, initial
 53990 DEFB 8                                  ; y-increment=2
 53991 DEFB 10                                 ;
 53992 DEFB 2                                  ;
 53993 DEFB 5                                  ;
 53994 DEFB 100                                ; }
 53995 DEFB 5                                  ; {Vertical guardian 3: x=20,
 53996 DEFB 2                                  ; initial y=8, 5<=y<100, initial
 53997 DEFB 8                                  ; y-increment=1
 53998 DEFB 20                                 ;
 53999 DEFB 1                                  ;
 54000 DEFB 5                                  ;
 54001 DEFB 100                                ; }
 54002 DEFB 66                                 ; {Vertical guardian 4: x=25,
 54003 DEFB 3                                  ; initial y=8, 5<=y<100, initial
 54004 DEFB 8                                  ; y-increment=2
 54005 DEFB 25                                 ;
 54006 DEFB 2                                  ;
 54007 DEFB 5                                  ;
 54008 DEFB 100                                ; }
 54009 DEFB 255                                ; Terminator
; The next 6 bytes are unused.
 54010 DEFB 0,0,0,0,0,0                        ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE54016,53981(wacky_amoebatrons_guardian0) |
; #SPRITE54048,53981(wacky_amoebatrons_guardian1) |
; #SPRITE54080,53981(wacky_amoebatrons_guardian2) |
; #SPRITE54112,53981(wacky_amoebatrons_guardian3) |
; #SPRITE54144,53950(wacky_amoebatrons_guardian4) |
; #SPRITE54176,53950(wacky_amoebatrons_guardian5) |
; #SPRITE54208,53950(wacky_amoebatrons_guardian6) |
; #SPRITE54240,53950(wacky_amoebatrons_guardian7) }
; TABLE#
 54016 DEFB 10,32,22,104,1,80,57,98            ; {Guardian graphic data
 54024 DEFB 101,206,3,208,255,238,135,241      ;
 54032 DEFB 119,228,199,255,139,241,50,172     ;
 54040 DEFB 100,166,73,162,18,144,54,152       ;
 54048 DEFB 0,0,5,32,3,64,49,116               ;
 54056 DEFB 29,204,3,208,63,236,7,244          ;
 54064 DEFB 63,224,103,252,11,242,50,172       ;
 54072 DEFB 36,164,11,144,26,216,0,192         ;
 54080 DEFB 0,0,0,0,2,32,9,96                  ;
 54088 DEFB 5,200,3,208,31,224,7,248           ;
 54096 DEFB 31,224,23,248,15,240,18,168        ;
 54104 DEFB 5,160,10,176,0,192,0,0             ;
 54112 DEFB 0,0,5,32,3,64,49,116               ;
 54120 DEFB 29,204,3,208,63,236,7,244          ;
 54128 DEFB 63,224,103,252,11,242,50,172       ;
 54136 DEFB 36,164,11,144,26,216,0,192         ;
 54144 DEFB 12,0,12,0,12,0,12,0                ;
 54152 DEFB 12,0,12,0,12,0,12,0                ;
 54160 DEFB 12,0,12,0,255,192,12,0             ;
 54168 DEFB 97,128,210,192,179,64,97,128       ;
 54176 DEFB 3,0,3,0,3,0,3,0                    ;
 54184 DEFB 3,0,3,0,3,0,3,0                    ;
 54192 DEFB 3,0,3,0,63,240,3,0                 ;
 54200 DEFB 24,96,36,208,60,208,24,96          ;
 54208 DEFB 0,192,0,192,0,192,0,192            ;
 54216 DEFB 0,192,0,192,0,192,0,192            ;
 54224 DEFB 0,192,0,192,15,252,0,192           ;
 54232 DEFB 6,24,11,52,13,44,6,24              ;
 54240 DEFB 0,48,0,48,0,48,0,48                ;
 54248 DEFB 0,48,0,48,0,48,0,48                ;
 54256 DEFB 0,48,0,48,3,255,0,48               ;
 54264 DEFB 1,134,2,77,3,205,1,134             ; }

; The Endorian Forest (teleport: 146)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN9(the_endorian_forest) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN9
b54272 DEFB 22,0,0,0,0,0,0,0                   ; {Attributes
 54280 DEFB 0,0,0,4,0,68,68,68                 ;
 54288 DEFB 22,0,4,0,4,68,68,68                ;
 54296 DEFB 68,68,68,68,68,68,68,22            ;
 54304 DEFB 22,0,0,0,0,0,0,0                   ;
 54312 DEFB 0,0,0,0,0,0,0,0                    ;
 54320 DEFB 22,0,0,0,0,4,0,0                   ;
 54328 DEFB 0,0,0,0,0,0,0,22                   ;
 54336 DEFB 22,68,68,68,68,68,68,0             ;
 54344 DEFB 0,0,0,0,0,0,0,0                    ;
 54352 DEFB 22,0,0,0,0,0,0,0                   ;
 54360 DEFB 0,0,0,68,68,68,68,22               ;
 54368 DEFB 22,0,0,4,0,0,0,0                   ;
 54376 DEFB 0,0,0,0,0,0,0,0                    ;
 54384 DEFB 22,0,0,0,0,0,0,0                   ;
 54392 DEFB 0,0,0,0,0,0,0,22                   ;
 54400 DEFB 22,0,0,0,0,0,0,0                   ;
 54408 DEFB 0,0,0,0,0,0,0,0                    ;
 54416 DEFB 22,68,68,68,68,0,0,0               ;
 54424 DEFB 0,0,0,0,0,0,0,22                   ;
 54432 DEFB 22,0,0,0,0,0,0,0                   ;
 54440 DEFB 68,2,2,2,2,2,2,2                   ;
 54448 DEFB 22,0,0,0,0,0,0,68                  ;
 54456 DEFB 68,68,68,68,68,68,68,22            ;
 54464 DEFB 22,68,68,68,68,0,0,0               ;
 54472 DEFB 0,0,0,0,0,0,0,0                    ;
 54480 DEFB 22,0,0,0,0,0,0,0                   ;
 54488 DEFB 0,0,0,0,0,0,0,22                   ;
 54496 DEFB 22,0,0,0,0,0,0,0                   ;
 54504 DEFB 0,0,0,0,0,0,0,0                    ;
 54512 DEFB 22,68,68,68,68,68,68,68            ;
 54520 DEFB 2,2,2,0,0,0,0,22                   ;
 54528 DEFB 22,68,68,68,68,68,0,0              ;
 54536 DEFB 0,0,0,0,0,0,0,0                    ;
 54544 DEFB 22,0,0,0,0,0,0,0                   ;
 54552 DEFB 0,0,0,0,0,0,0,22                   ;
 54560 DEFB 22,4,0,0,0,0,0,0                   ;
 54568 DEFB 0,68,68,68,68,68,68,68             ;
 54576 DEFB 22,0,0,0,0,0,0,0                   ;
 54584 DEFB 0,0,0,0,0,68,68,22                 ;
 54592 DEFB 22,68,68,68,68,2,2,0               ;
 54600 DEFB 0,0,0,0,0,0,0,0                    ;
 54608 DEFB 22,68,68,68,68,68,68,68            ;
 54616 DEFB 0,0,0,0,0,0,4,22                   ;
 54624 DEFB 22,0,0,0,0,0,0,0                   ;
 54632 DEFB 0,0,0,0,0,0,0,0                    ;
 54640 DEFB 22,0,0,0,0,0,0,4                   ;
 54648 DEFB 2,2,2,0,0,0,0,22                   ;
 54656 DEFB 22,0,0,0,0,0,0,0                   ;
 54664 DEFB 5,5,5,5,5,5,5,5                    ;
 54672 DEFB 5,5,0,0,0,0,0,0                    ;
 54680 DEFB 0,0,0,0,0,0,0,22                   ;
 54688 DEFB 22,68,68,68,0,0,0,0                ;
 54696 DEFB 0,0,0,0,0,0,0,0                    ;
 54704 DEFB 0,0,0,0,0,0,0,0                    ;
 54712 DEFB 0,0,0,0,68,68,68,22                ;
 54720 DEFB 22,0,0,0,0,0,0,0                   ;
 54728 DEFB 0,0,0,0,0,0,0,0                    ;
 54736 DEFB 0,0,0,0,0,0,0,0                    ;
 54744 DEFB 0,0,0,0,0,0,0,22                   ;
 54752 DEFB 5,5,5,5,5,5,5,5                    ;
 54760 DEFB 5,5,5,5,5,5,5,5                    ;
 54768 DEFB 5,5,5,5,5,5,5,5                    ;
 54776 DEFB 5,5,5,5,5,5,5,5                    ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 54784 DEFM "       The Endorian Forest      " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES9 }
; TABLE#
 54816 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 54825 DEFB 68,124,255,239,30,12,8,8,8         ; Floor
 54834 DEFB 2,252,255,135,12,8,8,8,0           ; Crumbling floor
 54843 DEFB 22,74,74,74,82,84,74,42,42         ; Wall
 54852 DEFB 67,240,102,240,102,0,0,0,0         ; Conveyor (unused)
 54861 DEFB 69,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 54870 DEFB 4,72,178,93,18,112,174,169,71      ; Nasty 2
 54879 DEFB 5,255,255,202,101,146,40,130,0     ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 54888 DEFB 64                                 ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 54889 DEFB 0                                  ; Animation frame (see #R32873)
 54890 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 54891 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 54892 DEFW 23681                              ; Location in the attribute
                                               ; buffer at #R23552: (4,1) (see
                                               ; #R32876)
 54894 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the (unused) conveyor.
 54895 DEFB 0                                  ; Direction (left)
 54896 DEFW 28691                              ; Location in the screen buffer
                                               ; at #R28672: (0,19)
 54898 DEFB 1                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 54899 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 54900 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 54901 DEFB 3                                  ; {Item 1 at (2,21)
 54902 DEFW 23637                              ;
 54904 DEFB 96                                 ;
 54905 DEFB 255                                ; }
 54906 DEFB 4                                  ; {Item 2 at (1,14)
 54907 DEFW 23598                              ;
 54909 DEFB 96                                 ;
 54910 DEFB 255                                ; }
 54911 DEFB 5                                  ; {Item 3 at (6,12)
 54912 DEFW 23756                              ;
 54914 DEFB 96                                 ;
 54915 DEFB 255                                ; }
 54916 DEFB 6                                  ; {Item 4 at (8,18)
 54917 DEFW 23826                              ;
 54919 DEFB 104                                ;
 54920 DEFB 255                                ; }
 54921 DEFB 3                                  ; {Item 5 at (1,30)
 54922 DEFW 23614                              ;
 54924 DEFB 96                                 ;
 54925 DEFB 255                                ; }
 54926 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL9 }
; TABLE#
 54927 DEFB 30                                 ; Attribute
 54928 DEFB 255,255,248,143,136,145,170,145    ; {Graphic data
 54936 DEFB 170,149,138,133,144,145,213,185    ;
 54944 DEFB 213,85,209,69,137,57,137,3         ;
 54952 DEFB 168,171,170,171,138,137,255,255    ; }
 54960 DEFW 23980                              ; Location in the attribute
                                               ; buffer at #R23552: (13,12)
 54962 DEFW 26796                              ; Location in the screen buffer
                                               ; at #R24576: (13,12)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM9 }
; TABLE#
 54964 DEFB 8,8,62,95,95,71,97,62              ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 54972 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 54973 DEFB 248                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 54974 DEFB 70                                 ; {Horizontal guardian 1: y=7,
 54975 DEFW 23785                              ; initial x=9, 9<=x<=14,
 54977 DEFB 96                                 ; speed=normal
 54978 DEFB 0                                  ;
 54979 DEFB 233                                ;
 54980 DEFB 238                                ; }
 54981 DEFB 194                                ; {Horizontal guardian 2: y=10,
 54982 DEFW 23884                              ; initial x=12, 8<=x<=14,
 54984 DEFB 104                                ; speed=slow
 54985 DEFB 0                                  ;
 54986 DEFB 72                                 ;
 54987 DEFB 78                                 ; }
 54988 DEFB 67                                 ; {Horizontal guardian 3: y=13,
 54989 DEFW 23976                              ; initial x=8, 4<=x<=26,
 54991 DEFB 104                                ; speed=normal
 54992 DEFB 0                                  ;
 54993 DEFB 164                                ;
 54994 DEFB 186                                ; }
 54995 DEFB 5                                  ; {Horizontal guardian 4: y=5,
 54996 DEFW 23730                              ; initial x=18, 17<=x<=21,
 54998 DEFB 96                                 ; speed=normal
 54999 DEFB 0                                  ;
 55000 DEFB 177                                ;
 55001 DEFB 181                                ; }
 55002 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 55003 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 55005 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 55012 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 55019 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 55026 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 55033 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE55040,54974(the_endorian_forest_guardian0) |
; #SPRITE55072,54974(the_endorian_forest_guardian1) |
; #SPRITE55104,54974(the_endorian_forest_guardian2) |
; #SPRITE55136,54974(the_endorian_forest_guardian3) |
; #SPRITE55168,54974(the_endorian_forest_guardian4) |
; #SPRITE55200,54974(the_endorian_forest_guardian5) |
; #SPRITE55232,54974(the_endorian_forest_guardian6) |
; #SPRITE55264,54974(the_endorian_forest_guardian7) }
; TABLE#
 55040 DEFB 112,0,80,0,124,0,52,0              ; {Guardian graphic data
 55048 DEFB 62,0,62,0,24,0,60,0                ;
 55056 DEFB 126,0,126,0,247,0,251,0            ;
 55064 DEFB 60,0,118,0,110,0,119,0             ;
 55072 DEFB 28,0,20,0,31,0,13,0                ;
 55080 DEFB 15,128,15,128,6,0,15,0             ;
 55088 DEFB 27,128,27,128,27,128,29,128        ;
 55096 DEFB 15,0,6,0,6,0,7,0                   ;
 55104 DEFB 7,0,5,0,7,192,3,64                 ;
 55112 DEFB 3,224,3,224,1,128,3,192            ;
 55120 DEFB 7,224,7,224,15,112,15,176          ;
 55128 DEFB 3,192,7,96,6,224,7,112             ;
 55136 DEFB 1,192,1,64,1,240,0,208             ;
 55144 DEFB 0,248,0,248,0,96,0,240             ;
 55152 DEFB 1,248,3,252,7,254,6,246            ;
 55160 DEFB 0,248,1,218,3,14,3,132             ;
 55168 DEFB 3,128,6,128,15,128,11,0            ;
 55176 DEFB 31,0,31,0,6,0,15,0                 ;
 55184 DEFB 31,128,63,192,127,224,111,96       ;
 55192 DEFB 31,0,91,128,112,192,33,192         ;
 55200 DEFB 0,224,1,160,3,224,2,192            ;
 55208 DEFB 7,192,7,192,1,128,3,192            ;
 55216 DEFB 7,224,7,224,14,240,13,240          ;
 55224 DEFB 3,192,6,224,7,96,14,224            ;
 55232 DEFB 0,56,0,104,0,248,0,176             ;
 55240 DEFB 1,240,1,240,0,96,0,240             ;
 55248 DEFB 1,248,1,216,1,216,1,184            ;
 55256 DEFB 0,240,0,96,0,96,0,224              ;
 55264 DEFB 0,14,0,26,0,62,0,44                ;
 55272 DEFB 0,124,0,124,0,24,0,60              ;
 55280 DEFB 0,126,0,126,0,239,0,223            ;
 55288 DEFB 0,60,0,110,0,118,0,238             ; }

; Attack of the Mutant Telephones (teleport: 246)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN10(attack_of_the_mutant_telephones) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN10
b55296 DEFB 14,14,14,14,14,14,14,0             ; {Attributes
 55304 DEFB 0,0,0,0,0,0,0,0                    ;
 55312 DEFB 0,0,0,66,0,0,0,0                   ;
 55320 DEFB 0,0,0,0,0,0,0,14                   ;
 55328 DEFB 14,0,0,0,0,0,0,0                   ;
 55336 DEFB 0,0,0,0,0,0,0,0                    ;
 55344 DEFB 0,0,0,70,0,0,0,0                   ;
 55352 DEFB 0,0,0,0,0,0,0,14                   ;
 55360 DEFB 14,0,0,0,0,0,0,0                   ;
 55368 DEFB 0,0,0,0,0,0,0,0                    ;
 55376 DEFB 0,0,0,0,0,0,0,0                    ;
 55384 DEFB 0,0,0,0,0,0,0,14                   ;
 55392 DEFB 14,65,65,65,65,0,0,0               ;
 55400 DEFB 0,0,0,0,0,0,0,0                    ;
 55408 DEFB 0,0,0,0,0,0,0,0                    ;
 55416 DEFB 0,0,0,0,0,0,0,14                   ;
 55424 DEFB 14,0,0,0,0,0,0,0                   ;
 55432 DEFB 0,0,0,0,0,0,0,0                    ;
 55440 DEFB 0,0,0,0,0,0,0,0                    ;
 55448 DEFB 0,0,0,0,0,0,0,14                   ;
 55456 DEFB 14,0,0,0,0,65,65,65                ;
 55464 DEFB 65,65,65,0,0,0,0,65                ;
 55472 DEFB 65,69,69,69,69,69,69,69            ;
 55480 DEFB 65,65,0,0,0,0,0,14                 ;
 55488 DEFB 14,0,0,0,0,0,0,0                   ;
 55496 DEFB 0,0,0,0,0,0,0,0                    ;
 55504 DEFB 0,0,0,0,0,0,0,0                    ;
 55512 DEFB 66,0,0,0,0,65,65,14                ;
 55520 DEFB 14,0,0,0,0,0,0,0                   ;
 55528 DEFB 0,0,0,0,0,0,0,0                    ;
 55536 DEFB 0,0,0,0,0,0,0,0                    ;
 55544 DEFB 66,0,0,0,0,0,0,14                  ;
 55552 DEFB 14,65,65,0,0,6,6,0                 ;
 55560 DEFB 0,0,0,0,0,0,0,0                    ;
 55568 DEFB 0,0,0,0,0,0,0,0                    ;
 55576 DEFB 66,0,0,0,0,65,65,14                ;
 55584 DEFB 14,0,0,0,0,0,0,0                   ;
 55592 DEFB 0,0,0,65,65,65,65,65               ;
 55600 DEFB 65,65,65,65,0,0,0,0                ;
 55608 DEFB 70,0,0,0,0,0,0,14                  ;
 55616 DEFB 14,0,0,0,0,0,0,0                   ;
 55624 DEFB 0,0,0,0,66,0,0,0                   ;
 55632 DEFB 0,0,0,66,0,0,0,0                   ;
 55640 DEFB 0,0,0,0,65,0,0,14                  ;
 55648 DEFB 14,0,0,0,0,0,1,1                   ;
 55656 DEFB 1,65,0,0,66,0,0,0                  ;
 55664 DEFB 0,0,0,70,0,0,0,0                   ;
 55672 DEFB 0,0,0,0,0,0,0,14                   ;
 55680 DEFB 14,0,0,0,0,0,0,0                   ;
 55688 DEFB 0,0,0,0,70,0,0,0                   ;
 55696 DEFB 0,0,0,0,0,0,0,0                    ;
 55704 DEFB 0,0,0,0,65,65,65,14                ;
 55712 DEFB 14,65,65,0,0,0,0,0                 ;
 55720 DEFB 0,0,0,0,0,0,0,0                    ;
 55728 DEFB 0,0,0,0,0,0,0,65                   ;
 55736 DEFB 65,65,0,0,0,0,0,14                 ;
 55744 DEFB 14,0,0,0,0,0,0,0                   ;
 55752 DEFB 0,0,0,0,0,0,0,0                    ;
 55760 DEFB 0,0,0,0,0,0,0,0                    ;
 55768 DEFB 0,0,0,0,0,0,0,14                   ;
 55776 DEFB 14,65,65,65,65,65,65,65            ;
 55784 DEFB 65,65,65,65,65,65,65,65            ;
 55792 DEFB 65,65,65,65,65,65,65,65            ;
 55800 DEFB 65,65,65,65,65,65,65,14            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 55808 DEFM "Attack of the Mutant Telephones " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES10 }
; TABLE#
 55840 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 55849 DEFB 65,255,255,219,110,197,64,0,0      ; Floor
 55858 DEFB 1,255,219,165,36,82,32,8,0         ; Crumbling floor
 55867 DEFB 14,170,85,170,85,170,85,170,85     ; Wall
 55876 DEFB 6,254,102,254,0,0,0,0,0            ; Conveyor
 55885 DEFB 70,16,16,214,56,214,56,84,146      ; Nasty 1
 55894 DEFB 66,16,16,16,16,16,16,16,16         ; Nasty 2
 55903 DEFB 69,255,255,255,255,170,0,0,0       ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 55912 DEFB 16                                 ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 55913 DEFB 0                                  ; Animation frame (see #R32873)
 55914 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 55915 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 55916 DEFW 23587                              ; Location in the attribute
                                               ; buffer at #R23552: (1,3) (see
                                               ; #R32876)
 55918 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 55919 DEFB 0                                  ; Direction (left)
 55920 DEFW 30725                              ; Location in the screen buffer
                                               ; at #R28672: (8,5)
 55922 DEFB 2                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 55923 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 55924 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 55925 DEFB 3                                  ; {Item 1 at (0,24)
 55926 DEFW 23576                              ;
 55928 DEFB 96                                 ;
 55929 DEFB 255                                ; }
 55930 DEFB 4                                  ; {Item 2 at (1,30)
 55931 DEFW 23614                              ;
 55933 DEFB 96                                 ;
 55934 DEFB 255                                ; }
 55935 DEFB 5                                  ; {Item 3 at (4,1)
 55936 DEFW 23681                              ;
 55938 DEFB 96                                 ;
 55939 DEFB 255                                ; }
 55940 DEFB 6                                  ; {Item 4 at (6,19)
 55941 DEFW 23763                              ;
 55943 DEFB 96                                 ;
 55944 DEFB 255                                ; }
 55945 DEFB 3                                  ; {Item 5 at (13,30)
 55946 DEFW 23998                              ;
 55948 DEFB 104                                ;
 55949 DEFB 255                                ; }
 55950 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL10 }
; TABLE#
 55951 DEFB 86                                 ; Attribute
 55952 DEFB 255,255,218,171,234,107,255,255    ; {Graphic data
 55960 DEFB 144,9,144,9,255,255,144,9          ;
 55968 DEFB 144,9,255,255,144,9,144,9          ;
 55976 DEFB 255,255,144,9,144,9,255,255        ; }
 55984 DEFW 23585                              ; Location in the attribute
                                               ; buffer at #R23552: (1,1)
 55986 DEFW 24609                              ; Location in the screen buffer
                                               ; at #R24576: (1,1)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM10 }
; TABLE#
 55988 DEFB 60,90,149,213,213,213,90,60        ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 55996 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 55997 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 55998 DEFB 70                                 ; {Horizontal guardian 1: y=3,
 55999 DEFW 23663                              ; initial x=15, 15<=x<=24,
 56001 DEFB 96                                 ; speed=normal
 56002 DEFB 0                                  ;
 56003 DEFB 111                                ;
 56004 DEFB 120                                ; }
 56005 DEFB 196                                ; {Horizontal guardian 2: y=7,
 56006 DEFW 23790                              ; initial x=14, 14<=x<=18,
 56008 DEFB 96                                 ; speed=slow
 56009 DEFB 0                                  ;
 56010 DEFB 238                                ;
 56011 DEFB 242                                ; }
 56012 DEFB 66                                 ; {Horizontal guardian 3: y=13,
 56013 DEFW 23983                              ; initial x=15, 5<=x<=19,
 56015 DEFB 104                                ; speed=normal
 56016 DEFB 7                                  ;
 56017 DEFB 165                                ;
 56018 DEFB 179                                ; }
 56019 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 4 (unused)
 56026 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 56027 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 56029 DEFB 67                                 ; {Vertical guardian 1: x=12,
 56030 DEFB 0                                  ; initial y=8, 2<=y<56, initial
 56031 DEFB 8                                  ; y-increment=2
 56032 DEFB 12                                 ;
 56033 DEFB 2                                  ;
 56034 DEFB 2                                  ;
 56035 DEFB 56                                 ; }
 56036 DEFB 4                                  ; {Vertical guardian 2: x=3,
 56037 DEFB 1                                  ; initial y=32, 32<=y<100,
 56038 DEFB 32                                 ; initial y-increment=1
 56039 DEFB 3                                  ;
 56040 DEFB 1                                  ;
 56041 DEFB 32                                 ;
 56042 DEFB 100                                ; }
 56043 DEFB 6                                  ; {Vertical guardian 3: x=21,
 56044 DEFB 2                                  ; initial y=48, 48<=y<100,
 56045 DEFB 48                                 ; initial y-increment=1
 56046 DEFB 21                                 ;
 56047 DEFB 1                                  ;
 56048 DEFB 48                                 ;
 56049 DEFB 100                                ; }
 56050 DEFB 66                                 ; {Vertical guardian 4: x=26,
 56051 DEFB 3                                  ; initial y=48, 4<=y<100,
 56052 DEFB 48                                 ; initial y-increment=-3
 56053 DEFB 26                                 ;
 56054 DEFB 253                                ;
 56055 DEFB 4                                  ;
 56056 DEFB 100                                ; }
 56057 DEFB 255                                ; Terminator
; The next 6 bytes are unused.
 56058 DEFB 0,0,0,0,0,0                        ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE56064,56029(attack_of_the_mutant_telephones_guardian0) |
; #SPRITE56096,56029(attack_of_the_mutant_telephones_guardian1) |
; #SPRITE56128,56029(attack_of_the_mutant_telephones_guardian2) |
; #SPRITE56160,56029(attack_of_the_mutant_telephones_guardian3) |
; #SPRITE56192,55998(attack_of_the_mutant_telephones_guardian4) |
; #SPRITE56224,55998(attack_of_the_mutant_telephones_guardian5) |
; #SPRITE56256,55998(attack_of_the_mutant_telephones_guardian6) |
; #SPRITE56288,55998(attack_of_the_mutant_telephones_guardian7) }
; TABLE#
 56064 DEFB 0,0,0,0,63,252,99,198              ; {Guardian graphic data
 56072 DEFB 235,215,232,23,15,240,7,224        ;
 56080 DEFB 12,48,11,208,27,216,28,56          ;
 56088 DEFB 63,252,63,252,63,252,63,252        ;
 56096 DEFB 60,0,127,192,127,248,99,198        ;
 56104 DEFB 8,87,8,23,15,247,7,224             ;
 56112 DEFB 12,48,11,208,27,216,28,56          ;
 56120 DEFB 63,252,63,252,63,252,63,252        ;
 56128 DEFB 0,0,0,0,63,252,99,198              ;
 56136 DEFB 235,215,232,23,15,240,7,224        ;
 56144 DEFB 12,48,11,208,27,216,28,56          ;
 56152 DEFB 63,252,63,252,63,252,63,252        ;
 56160 DEFB 0,60,3,254,31,254,99,198           ;
 56168 DEFB 234,16,232,16,239,240,7,224        ;
 56176 DEFB 12,48,11,208,27,216,28,56          ;
 56184 DEFB 63,252,63,252,63,252,63,252        ;
 56192 DEFB 12,0,22,0,45,0,76,128              ;
 56200 DEFB 140,64,140,64,76,128,45,0          ;
 56208 DEFB 22,0,12,0,55,0,76,0                ;
 56216 DEFB 127,192,255,192,64,128,46,0        ;
 56224 DEFB 3,0,3,0,5,128,7,128                ;
 56232 DEFB 11,64,11,64,7,128,5,128            ;
 56240 DEFB 3,0,3,0,14,192,3,32                ;
 56248 DEFB 63,224,63,240,16,32,7,64           ;
 56256 DEFB 0,192,0,192,0,192,0,192            ;
 56264 DEFB 0,128,0,128,0,192,0,192            ;
 56272 DEFB 0,192,0,192,1,208,4,200            ;
 56280 DEFB 15,252,15,248,0,8,3,176            ;
 56288 DEFB 0,48,0,104,0,180,0,180             ;
 56296 DEFB 1,50,1,50,0,180,0,180              ;
 56304 DEFB 0,104,0,48,0,184,1,50              ;
 56312 DEFB 3,255,1,255,1,0,0,220              ; }

; Return of the Alien Kong Beast (teleport: 1246)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN11(return_of_the_alien_kong_beast) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN11
b56320 DEFB 101,0,5,0,0,0,6,0                  ; {Attributes
 56328 DEFB 0,0,5,0,0,0,0,0                    ;
 56336 DEFB 0,101,6,0,0,101,0,0                ;
 56344 DEFB 0,0,0,0,0,0,0,101                  ;
 56352 DEFB 101,0,0,0,0,0,0,0                  ;
 56360 DEFB 0,0,0,0,0,0,0,0                    ;
 56368 DEFB 0,0,0,0,0,0,0,0                    ;
 56376 DEFB 0,0,0,0,0,0,0,101                  ;
 56384 DEFB 101,0,0,0,0,0,0,0                  ;
 56392 DEFB 0,0,0,0,0,0,0,3                    ;
 56400 DEFB 3,0,0,0,0,0,0,0                    ;
 56408 DEFB 0,0,0,0,0,0,0,101                  ;
 56416 DEFB 101,0,0,0,0,0,0,0                  ;
 56424 DEFB 0,0,0,0,0,0,0,0                    ;
 56432 DEFB 0,0,0,0,0,0,0,0                    ;
 56440 DEFB 0,0,0,0,0,0,0,101                  ;
 56448 DEFB 101,0,0,0,0,0,0,0                  ;
 56456 DEFB 0,0,0,0,0,0,0,0                    ;
 56464 DEFB 0,0,0,0,0,0,0,0                    ;
 56472 DEFB 0,0,0,0,0,0,0,101                  ;
 56480 DEFB 101,67,67,67,0,0,0,0               ;
 56488 DEFB 0,3,3,3,3,3,101,0                  ;
 56496 DEFB 0,101,3,3,3,3,3,3                  ;
 56504 DEFB 67,67,0,0,0,0,0,101                ;
 56512 DEFB 101,0,0,0,0,0,0,0                  ;
 56520 DEFB 0,0,0,0,0,0,101,0                  ;
 56528 DEFB 0,101,0,0,0,0,0,0                  ;
 56536 DEFB 0,0,0,0,0,0,67,101                 ;
 56544 DEFB 101,0,0,0,0,0,67,67                ;
 56552 DEFB 0,0,0,0,0,0,101,0                  ;
 56560 DEFB 0,101,0,0,0,0,0,0                  ;
 56568 DEFB 0,0,0,0,0,0,0,101                  ;
 56576 DEFB 101,0,0,67,0,0,0,0                 ;
 56584 DEFB 0,0,0,0,0,0,101,0                  ;
 56592 DEFB 0,101,0,0,0,0,0,0                  ;
 56600 DEFB 0,67,67,67,67,67,67,101            ;
 56608 DEFB 101,0,0,0,0,0,0,0                  ;
 56616 DEFB 0,0,67,67,67,67,101,0              ;
 56624 DEFB 0,101,0,0,0,0,0,0                  ;
 56632 DEFB 0,0,0,0,0,0,0,101                  ;
 56640 DEFB 101,0,0,0,0,0,67,0                 ;
 56648 DEFB 0,0,0,0,0,0,0,0                    ;
 56656 DEFB 0,101,67,67,67,0,0,0               ;
 56664 DEFB 0,0,0,0,0,0,0,101                  ;
 56672 DEFB 101,0,0,0,0,0,0,0                  ;
 56680 DEFB 0,0,0,0,0,0,0,0                    ;
 56688 DEFB 0,101,0,0,0,0,0,0                  ;
 56696 DEFB 0,67,67,0,0,0,0,101                ;
 56704 DEFB 101,67,67,67,67,67,67,0            ;
 56712 DEFB 0,0,0,0,0,0,0,0                    ;
 56720 DEFB 0,101,0,0,0,0,0,4                  ;
 56728 DEFB 0,0,0,0,4,0,0,101                  ;
 56736 DEFB 101,0,0,0,0,0,0,0                  ;
 56744 DEFB 0,0,0,67,67,67,101,0               ;
 56752 DEFB 0,101,70,70,70,70,70,70            ;
 56760 DEFB 70,70,70,70,70,0,0,101             ;
 56768 DEFB 101,0,0,0,0,0,0,0                  ;
 56776 DEFB 0,0,0,0,0,0,101,0                  ;
 56784 DEFB 0,101,0,0,0,0,0,0                  ;
 56792 DEFB 0,0,0,0,0,0,0,101                  ;
 56800 DEFB 101,67,67,67,67,67,67,67           ;
 56808 DEFB 67,67,67,67,67,67,101,101          ;
 56816 DEFB 101,101,67,67,67,67,67,67          ;
 56824 DEFB 67,67,67,67,67,67,67,101           ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 56832 DEFM " Return of the Alien Kong Beast " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES11 }
; TABLE#
 56864 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 56873 DEFB 67,255,255,219,110,197,64,0,0      ; Floor
 56882 DEFB 3,255,219,165,36,82,32,8,0         ; Crumbling floor
 56891 DEFB 101,34,255,136,255,34,255,136,255  ; Wall
 56900 DEFB 70,240,102,240,170,0,0,0,0         ; Conveyor
 56909 DEFB 4,68,40,148,81,53,214,88,16        ; Nasty 1
 56918 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2
 56927 DEFB 6,255,129,129,66,60,16,96,96       ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 56936 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 56937 DEFB 0                                  ; Animation frame (see #R32873)
 56938 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 56939 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 56940 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 56942 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 56943 DEFB 1                                  ; Direction (right)
 56944 DEFW 30898                              ; Location in the screen buffer
                                               ; at #R28672: (13,18)
 56946 DEFB 11                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 56947 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 56948 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 56949 DEFB 3                                  ; {Item 1 at (3,15)
 56950 DEFW 23663                              ;
 56952 DEFB 96                                 ;
 56953 DEFB 255                                ; }
 56954 DEFB 4                                  ; {Item 2 at (7,16)
 56955 DEFW 23792                              ;
 56957 DEFB 96                                 ;
 56958 DEFB 255                                ; }
 56959 DEFB 5                                  ; {Item 3 at (6,2)
 56960 DEFW 23746                              ;
 56962 DEFB 96                                 ;
 56963 DEFB 255                                ; }
 56964 DEFB 6                                  ; {Item 4 at (13,29)
 56965 DEFW 23997                              ;
 56967 DEFB 104                                ;
 56968 DEFB 255                                ; }
 56969 DEFB 3                                  ; {Item 5 at (5,26)
 56970 DEFW 23738                              ;
 56972 DEFB 96                                 ;
 56973 DEFB 255                                ; }
 56974 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL11 }
; TABLE#
 56975 DEFB 94                                 ; Attribute
 56976 DEFB 255,255,128,1,143,241,143,241      ; {Graphic data
 56984 DEFB 143,241,143,241,143,241,140,49     ;
 56992 DEFB 140,49,143,241,143,241,143,241     ;
 57000 DEFB 143,241,143,241,128,1,255,255      ; }
 57008 DEFW 23983                              ; Location in the attribute
                                               ; buffer at #R23552: (13,15)
 57010 DEFW 26799                              ; Location in the screen buffer
                                               ; at #R24576: (13,15)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM11 }
; TABLE#
 57012 DEFB 128,192,236,114,40,84,138,135      ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 57020 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 57021 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 57022 DEFB 68                                 ; {Horizontal guardian 1: y=13,
 57023 DEFW 23977                              ; initial x=9, 1<=x<=9,
 57025 DEFB 104                                ; speed=normal
 57026 DEFB 7                                  ;
 57027 DEFB 161                                ;
 57028 DEFB 169                                ; }
 57029 DEFB 198                                ; {Horizontal guardian 2: y=11,
 57030 DEFW 23915                              ; initial x=11, 11<=x<=15,
 57032 DEFB 104                                ; speed=slow
 57033 DEFB 0                                  ;
 57034 DEFB 107                                ;
 57035 DEFB 111                                ; }
 57036 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 57043 DEFB 5                                  ; {Horizontal guardian 4: y=6,
 57044 DEFW 23769                              ; initial x=25, 25<=x<=28,
 57046 DEFB 96                                 ; speed=normal
 57047 DEFB 0                                  ;
 57048 DEFB 217                                ;
 57049 DEFB 220                                ; }
 57050 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988; the first byte
; specifies the Kong Beast's initial status, but the second byte is not used.
 57051 DEFB 0                                  ; Initial status (on the ledge)
 57052 DEFB 0                                  ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 57053 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 57060 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 57067 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 57074 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 57081 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE57088,37389(return_of_the_alien_kong_beast_guardian0) |
; #SPRITE57120,37389(return_of_the_alien_kong_beast_guardian1) |
; #SPRITE57152,37389(return_of_the_alien_kong_beast_guardian2) |
; #SPRITE57184,37389(return_of_the_alien_kong_beast_guardian3) |
; #SPRITE57216,57022(return_of_the_alien_kong_beast_guardian4) |
; #SPRITE57248,57022(return_of_the_alien_kong_beast_guardian5) |
; #SPRITE57280,57022(return_of_the_alien_kong_beast_guardian6) |
; #SPRITE57312,57022(return_of_the_alien_kong_beast_guardian7) }
; TABLE#
 57088 DEFB 19,200,29,184,15,240,6,96          ; {Guardian graphic data
 57096 DEFB 5,160,2,64,7,224,15,240            ;
 57104 DEFB 31,248,51,204,99,198,70,98         ;
 57112 DEFB 44,52,6,96,2,64,14,112             ;
 57120 DEFB 11,208,13,176,15,240,6,96          ;
 57128 DEFB 5,160,2,64,3,192,31,248            ;
 57136 DEFB 127,254,231,231,131,193,199,227    ;
 57144 DEFB 6,96,12,48,8,16,56,28              ;
 57152 DEFB 28,56,6,96,12,48,102,102           ;
 57160 DEFB 35,196,103,230,55,236,31,248       ;
 57168 DEFB 15,240,7,224,2,64,5,160            ;
 57176 DEFB 6,96,15,240,13,176,11,208          ;
 57184 DEFB 112,14,24,24,12,48,6,96            ;
 57192 DEFB 99,198,39,228,103,230,55,236       ;
 57200 DEFB 31,248,15,240,2,64,5,160           ;
 57208 DEFB 22,104,15,240,13,176,3,192         ;
 57216 DEFB 8,0,5,0,8,128,37,0                 ;
 57224 DEFB 72,128,33,0,76,0,51,0              ;
 57232 DEFB 68,128,68,128,136,64,132,64        ;
 57240 DEFB 72,128,72,128,51,0,12,0            ;
 57248 DEFB 2,0,17,32,10,64,17,32              ;
 57256 DEFB 10,64,16,32,3,0,12,192             ;
 57264 DEFB 16,32,16,96,34,144,37,16           ;
 57272 DEFB 24,32,16,32,12,192,3,0             ;
 57280 DEFB 0,64,2,32,4,72,2,36                ;
 57288 DEFB 4,72,2,4,0,200,3,48                ;
 57296 DEFB 4,8,4,8,11,68,8,180                ;
 57304 DEFB 4,8,4,8,3,48,0,192                 ;
 57312 DEFB 0,68,1,34,2,68,1,34                ;
 57320 DEFB 2,68,1,2,2,48,0,204                ;
 57328 DEFB 1,66,1,34,2,17,2,33                ;
 57336 DEFB 1,18,1,10,0,204,0,48               ; }

; Ore Refinery (teleport: 346)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN12(ore_refinery) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN12
b57344 DEFB 22,22,22,22,22,22,22,22            ; {Attributes
 57352 DEFB 22,22,22,22,22,22,22,22            ;
 57360 DEFB 22,22,22,22,22,22,22,22            ;
 57368 DEFB 22,22,22,22,22,22,22,22            ;
 57376 DEFB 22,0,0,6,0,0,0,0                   ;
 57384 DEFB 0,0,0,0,0,0,0,0                    ;
 57392 DEFB 0,0,0,0,0,0,0,0                    ;
 57400 DEFB 0,0,0,0,0,0,0,22                   ;
 57408 DEFB 22,0,0,6,0,0,0,0                   ;
 57416 DEFB 0,0,0,0,0,0,0,0                    ;
 57424 DEFB 0,0,0,0,0,0,0,0                    ;
 57432 DEFB 0,0,0,0,0,0,0,22                   ;
 57440 DEFB 22,0,0,6,0,0,0,5                   ;
 57448 DEFB 5,5,5,5,5,5,5,5                    ;
 57456 DEFB 5,5,5,5,5,5,5,5                    ;
 57464 DEFB 5,0,0,5,5,5,5,22                   ;
 57472 DEFB 22,0,0,6,0,0,0,0                   ;
 57480 DEFB 0,0,0,0,0,0,0,0                    ;
 57488 DEFB 0,0,0,0,0,0,0,0                    ;
 57496 DEFB 0,0,0,0,0,0,0,22                   ;
 57504 DEFB 22,0,0,6,0,0,0,0                   ;
 57512 DEFB 0,0,0,0,0,0,0,0                    ;
 57520 DEFB 0,0,0,0,0,0,0,0                    ;
 57528 DEFB 0,0,0,0,0,0,0,22                   ;
 57536 DEFB 22,0,0,6,0,0,0,5                   ;
 57544 DEFB 5,0,0,5,5,5,5,0                    ;
 57552 DEFB 0,5,5,5,5,5,0,0                    ;
 57560 DEFB 5,5,5,5,0,0,5,22                   ;
 57568 DEFB 22,0,0,6,0,0,0,0                   ;
 57576 DEFB 0,0,0,0,0,0,0,0                    ;
 57584 DEFB 0,0,0,0,0,0,0,0                    ;
 57592 DEFB 0,0,0,0,0,0,0,22                   ;
 57600 DEFB 22,0,0,6,0,0,0,0                   ;
 57608 DEFB 0,0,0,0,0,0,0,0                    ;
 57616 DEFB 0,0,0,0,0,0,0,0                    ;
 57624 DEFB 0,0,0,0,0,0,0,22                   ;
 57632 DEFB 22,0,0,6,0,0,0,5                   ;
 57640 DEFB 5,5,5,5,0,0,5,5                    ;
 57648 DEFB 5,0,0,0,5,5,5,5                    ;
 57656 DEFB 5,0,0,5,5,5,5,22                   ;
 57664 DEFB 22,0,0,6,0,0,0,0                   ;
 57672 DEFB 0,0,0,0,0,0,0,0                    ;
 57680 DEFB 0,0,0,0,0,0,0,0                    ;
 57688 DEFB 0,0,0,0,0,0,0,22                   ;
 57696 DEFB 22,0,0,6,0,0,0,0                   ;
 57704 DEFB 0,0,0,0,0,0,0,0                    ;
 57712 DEFB 0,0,0,0,0,0,0,0                    ;
 57720 DEFB 0,0,0,0,0,0,0,22                   ;
 57728 DEFB 22,0,0,6,0,0,0,5                   ;
 57736 DEFB 5,5,0,0,5,5,5,0                    ;
 57744 DEFB 0,5,5,5,5,0,0,5                    ;
 57752 DEFB 5,5,5,0,0,5,5,22                   ;
 57760 DEFB 22,0,0,6,0,0,0,0                   ;
 57768 DEFB 0,0,0,0,0,0,0,0                    ;
 57776 DEFB 0,0,0,0,0,0,0,0                    ;
 57784 DEFB 0,0,0,0,0,0,0,22                   ;
 57792 DEFB 22,0,0,6,0,0,0,0                   ;
 57800 DEFB 0,0,0,0,0,0,0,0                    ;
 57808 DEFB 0,0,0,0,0,0,0,0                    ;
 57816 DEFB 0,0,0,0,0,0,0,22                   ;
 57824 DEFB 22,5,5,4,4,4,4,4                   ;
 57832 DEFB 4,4,4,4,4,4,4,4                    ;
 57840 DEFB 4,4,4,4,4,4,4,4                    ;
 57848 DEFB 4,4,4,4,4,5,5,22                   ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 57856 DEFM "          Ore Refinery          " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES12 }
; TABLE#
 57888 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 57897 DEFB 5,255,255,17,34,68,136,255,255     ; Floor
 57906 DEFB 66,255,219,165,36,82,32,8,0        ; Crumbling floor (unused)
 57915 DEFB 22,90,90,90,90,90,90,90,90         ; Wall
 57924 DEFB 4,240,102,240,102,0,0,0,0          ; Conveyor
 57933 DEFB 68,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 57942 DEFB 69,126,60,28,24,24,8,8,8           ; Nasty 2 (unused)
 57951 DEFB 6,255,129,129,129,129,129,129,129  ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 57960 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 57961 DEFB 0                                  ; Animation frame (see #R32873)
 57962 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 57963 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 57964 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
                                               ; (see #R32876)
 57966 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 57967 DEFB 1                                  ; Direction (right)
 57968 DEFW 30947                              ; Location in the screen buffer
                                               ; at #R28672: (15,3)
 57970 DEFB 26                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 57971 DEFB 1                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 57972 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 57973 DEFB 3                                  ; {Item 1 at (3,26)
 57974 DEFW 23674                              ;
 57976 DEFB 96                                 ;
 57977 DEFB 255                                ; }
 57978 DEFB 4                                  ; {Item 2 at (6,10)
 57979 DEFW 23754                              ;
 57981 DEFB 96                                 ;
 57982 DEFB 255                                ; }
 57983 DEFB 5                                  ; {Item 3 at (9,19)
 57984 DEFW 23859                              ;
 57986 DEFB 104                                ;
 57987 DEFB 255                                ; }
 57988 DEFB 6                                  ; {Item 4 at (9,26)
 57989 DEFW 23866                              ;
 57991 DEFB 104                                ;
 57992 DEFB 255                                ; }
 57993 DEFB 3                                  ; {Item 5 at (12,11)
 57994 DEFW 23947                              ;
 57996 DEFB 104                                ;
 57997 DEFB 255                                ; }
 57998 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL12 }
; TABLE#
 57999 DEFB 79                                 ; Attribute
 58000 DEFB 3,192,7,224,15,240,9,144           ; {Graphic data
 58008 DEFB 9,144,7,224,5,160,2,64             ;
 58016 DEFB 97,134,248,31,254,127,5,224        ;
 58024 DEFB 7,160,254,127,248,31,96,6          ; }
 58032 DEFW 23969                              ; Location in the attribute
                                               ; buffer at #R23552: (13,1)
 58034 DEFW 26785                              ; Location in the screen buffer
                                               ; at #R24576: (13,1)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM12 }
; TABLE#
 58036 DEFB 24,110,66,219,201,98,126,24        ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 58044 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 58045 DEFB 252                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 58046 DEFB 67                                 ; {Horizontal guardian 1: y=1,
 58047 DEFW 23591                              ; initial x=7, 7<=x<=29,
 58049 DEFB 96                                 ; speed=normal
 58050 DEFB 0                                  ;
 58051 DEFB 39                                 ;
 58052 DEFB 61                                 ; }
 58053 DEFB 196                                ; {Horizontal guardian 2: y=4,
 58054 DEFW 23696                              ; initial x=16, 7<=x<=29,
 58056 DEFB 96                                 ; speed=slow
 58057 DEFB 0                                  ;
 58058 DEFB 135                                ;
 58059 DEFB 157                                ; }
 58060 DEFB 70                                 ; {Horizontal guardian 3: y=7,
 58061 DEFW 23796                              ; initial x=20, 10<=x<=26,
 58063 DEFB 96                                 ; speed=normal
 58064 DEFB 7                                  ;
 58065 DEFB 234                                ;
 58066 DEFB 250                                ; }
 58067 DEFB 194                                ; {Horizontal guardian 4: y=10,
 58068 DEFW 23890                              ; initial x=18, 7<=x<=29,
 58070 DEFB 104                                ; speed=slow
 58071 DEFB 0                                  ;
 58072 DEFB 71                                 ;
 58073 DEFB 93                                 ; }
 58074 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 58075 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 58077 DEFB 71                                 ; {Vertical guardian 1: x=5,
 58078 DEFB 0                                  ; initial y=8, 8<=y<100, initial
 58079 DEFB 8                                  ; y-increment=2
 58080 DEFB 5                                  ;
 58081 DEFB 2                                  ;
 58082 DEFB 8                                  ;
 58083 DEFB 100                                ; }
 58084 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 2 (unused)
 58091 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 58098 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 58105 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE58112,58077(ore_refinery_guardian0) |
; #SPRITE58144,58077(ore_refinery_guardian1) |
; #SPRITE58176,58077(ore_refinery_guardian2) |
; #SPRITE58208,58077(ore_refinery_guardian3) |
; #SPRITE58240,58046(ore_refinery_guardian4) |
; #SPRITE58272,58046(ore_refinery_guardian5) |
; #SPRITE58304,58046(ore_refinery_guardian6) |
; #SPRITE58336,58046(ore_refinery_guardian7) }
; TABLE#
 58112 DEFB 0,0,0,0,0,0,3,192                  ; {Guardian graphic data
 58120 DEFB 12,48,16,8,32,4,64,2               ;
 58128 DEFB 128,1,64,2,32,4,208,11             ;
 58136 DEFB 44,52,75,210,18,72,2,64            ;
 58144 DEFB 0,0,0,0,0,0,3,192                  ;
 58152 DEFB 12,48,16,8,32,4,64,2               ;
 58160 DEFB 248,31,87,234,43,212,18,72         ;
 58168 DEFB 12,48,3,192,0,0,0,0                ;
 58176 DEFB 4,32,4,32,18,72,75,210             ;
 58184 DEFB 44,52,147,201,167,229,70,98        ;
 58192 DEFB 134,97,71,226,35,196,16,8          ;
 58200 DEFB 12,48,3,192,0,0,0,0                ;
 58208 DEFB 0,0,0,0,0,0,3,192                  ;
 58216 DEFB 12,48,18,72,42,84,95,250           ;
 58224 DEFB 246,127,71,226,35,196,16,8         ;
 58232 DEFB 12,48,3,192,0,0,0,0                ;
 58240 DEFB 97,128,178,64,179,192,97,128       ;
 58248 DEFB 12,0,255,192,82,128,18,0           ;
 58256 DEFB 18,0,30,0,12,0,12,0                ;
 58264 DEFB 12,0,12,0,30,0,63,0                ;
 58272 DEFB 24,96,36,208,60,208,24,96          ;
 58280 DEFB 3,0,63,240,20,160,4,128            ;
 58288 DEFB 4,128,7,128,3,0,3,0                ;
 58296 DEFB 7,128,15,192,0,0,0,0               ;
 58304 DEFB 6,24,13,60,13,36,6,24              ;
 58312 DEFB 0,192,15,252,5,40,1,32             ;
 58320 DEFB 1,32,1,224,1,224,3,240             ;
 58328 DEFB 0,0,0,0,0,0,0,0                    ;
 58336 DEFB 1,134,3,203,2,75,1,134             ;
 58344 DEFB 0,48,3,255,1,74,0,72               ;
 58352 DEFB 0,72,0,120,0,48,0,48               ;
 58360 DEFB 0,120,0,252,0,0,0,0                ; }

; Skylab Landing Bay (teleport: 1346)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN13(skylab_landing_bay) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN13
b58368 DEFB 104,8,8,8,8,8,8,8                  ; {Attributes
 58376 DEFB 8,8,8,8,8,8,8,8                    ;
 58384 DEFB 8,8,8,8,8,8,8,8                    ;
 58392 DEFB 8,8,8,8,8,8,8,104                  ;
 58400 DEFB 104,8,8,8,8,8,8,8                  ;
 58408 DEFB 8,8,8,8,8,8,8,8                    ;
 58416 DEFB 8,8,8,8,8,8,8,8                    ;
 58424 DEFB 8,8,8,8,8,8,8,104                  ;
 58432 DEFB 104,8,8,8,8,8,8,8                  ;
 58440 DEFB 8,8,8,8,8,8,8,8                    ;
 58448 DEFB 8,8,8,8,8,8,8,8                    ;
 58456 DEFB 8,8,8,8,8,8,8,104                  ;
 58464 DEFB 104,8,8,8,8,8,8,8                  ;
 58472 DEFB 8,8,8,8,8,8,8,8                    ;
 58480 DEFB 8,8,8,8,8,8,8,8                    ;
 58488 DEFB 8,8,8,8,8,8,8,104                  ;
 58496 DEFB 104,8,8,8,8,8,8,8                  ;
 58504 DEFB 8,8,8,8,8,8,8,8                    ;
 58512 DEFB 8,8,8,8,8,8,8,8                    ;
 58520 DEFB 8,8,8,8,8,8,8,104                  ;
 58528 DEFB 104,8,8,8,8,8,8,8                  ;
 58536 DEFB 8,8,8,8,8,8,8,76                   ;
 58544 DEFB 12,8,8,8,8,8,8,8                   ;
 58552 DEFB 8,8,8,8,8,8,8,104                  ;
 58560 DEFB 104,8,8,76,12,8,8,8                ;
 58568 DEFB 8,8,8,76,12,8,8,8                  ;
 58576 DEFB 8,8,8,76,12,8,8,8                  ;
 58584 DEFB 8,8,8,76,12,8,8,104                ;
 58592 DEFB 104,8,8,8,8,8,8,76                 ;
 58600 DEFB 12,8,8,8,8,8,8,8                   ;
 58608 DEFB 8,8,8,8,8,8,8,76                   ;
 58616 DEFB 12,8,8,8,8,8,8,104                 ;
 58624 DEFB 104,8,8,8,8,8,8,8                  ;
 58632 DEFB 8,8,8,8,8,8,8,8                    ;
 58640 DEFB 8,8,8,8,8,8,8,8                    ;
 58648 DEFB 8,8,8,8,8,8,8,104                  ;
 58656 DEFB 104,8,8,8,8,76,12,8                ;
 58664 DEFB 8,8,8,8,8,76,12,8                  ;
 58672 DEFB 8,8,8,8,8,76,12,8                  ;
 58680 DEFB 8,8,8,8,8,76,12,104                ;
 58688 DEFB 104,8,8,8,8,8,8,8                  ;
 58696 DEFB 8,8,8,8,8,8,8,8                    ;
 58704 DEFB 8,8,8,8,8,8,8,8                    ;
 58712 DEFB 8,8,8,8,8,8,8,104                  ;
 58720 DEFB 104,76,12,8,8,8,8,8                ;
 58728 DEFB 8,76,12,8,8,8,8,75                 ;
 58736 DEFB 75,75,75,75,75,8,8,8               ;
 58744 DEFB 8,76,12,8,8,8,8,104                ;
 58752 DEFB 104,8,8,8,8,8,8,8                  ;
 58760 DEFB 8,8,8,8,8,8,8,8                    ;
 58768 DEFB 8,8,8,8,8,8,8,8                    ;
 58776 DEFB 8,8,8,8,8,8,8,104                  ;
 58784 DEFB 104,8,8,8,8,8,8,76                 ;
 58792 DEFB 12,8,8,8,8,8,8,8                   ;
 58800 DEFB 8,8,8,8,8,8,8,8                    ;
 58808 DEFB 8,8,8,8,8,8,8,104                  ;
 58816 DEFB 104,8,8,8,8,8,8,8                  ;
 58824 DEFB 8,8,8,8,8,8,8,8                    ;
 58832 DEFB 8,8,8,8,8,8,8,8                    ;
 58840 DEFB 8,8,8,8,8,8,8,104                  ;
 58848 DEFB 104,104,104,104,104,104,104,104    ;
 58856 DEFB 104,104,104,104,104,104,104,104    ;
 58864 DEFB 104,104,104,104,104,104,104,104    ;
 58872 DEFB 104,104,104,104,104,104,104,104    ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 58880 DEFM "       Skylab Landing Bay       " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES13 }
; TABLE#
; .
; #HTML(The patterns of the two unused nasty tiles are hidden in these images
; because they have black INK and PAPER. Here are the patterns revealed using
; green INK:)
; .
; #UDGTABLE
; { #UDG58958,4(nasty1_13_green) | #UDG58967,4(nasty2_13_green) }
; TABLE#
 58912 DEFB 8,0,0,0,0,0,0,0,0                  ; Background
 58921 DEFB 76,255,255,98,100,120,112,96,96    ; Floor
 58930 DEFB 2,252,255,255,135,255,8,8,0        ; Crumbling floor (unused)
 58939 DEFB 104,1,130,196,232,224,216,188,126  ; Wall
 58948 DEFB 75,240,102,240,102,0,0,0,0         ; Conveyor
 58957 DEFB 0,68,40,148,81,53,214,88,16        ; Nasty 1 (unused)
 58966 DEFB 0,72,178,93,18,112,174,169,71      ; Nasty 2 (unused)
 58975 DEFB 12,255,255,70,38,30,14,6,6         ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 58984 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 58985 DEFB 0                                  ; Animation frame (see #R32873)
 58986 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 58987 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 58988 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
                                               ; (see #R32876)
 58990 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 58991 DEFB 0                                  ; Direction (left)
 58992 DEFW 30831                              ; Location in the screen buffer
                                               ; at #R28672: (11,15)
 58994 DEFB 6                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 58995 DEFB 6                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 58996 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 58997 DEFB 11                                 ; {Item 1 at (2,23)
 58998 DEFW 23639                              ;
 59000 DEFB 96                                 ;
 59001 DEFB 255                                ; }
 59002 DEFB 12                                 ; {Item 2 at (8,3)
 59003 DEFW 23811                              ;
 59005 DEFB 104                                ;
 59006 DEFB 255                                ; }
 59007 DEFB 13                                 ; {Item 3 at (7,27)
 59008 DEFW 23803                              ;
 59010 DEFB 96                                 ;
 59011 DEFB 255                                ; }
 59012 DEFB 14                                 ; {Item 4 at (7,16)
 59013 DEFW 23792                              ;
 59015 DEFB 96                                 ;
 59016 DEFB 255                                ; }
 59017 DEFB 0,255,255,255,255                  ; Item 5 (unused)
 59022 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL13 }
; TABLE#
 59023 DEFB 30                                 ; Attribute
 59024 DEFB 255,255,255,255,252,63,248,31      ; {Graphic data
 59032 DEFB 240,15,224,7,193,131,194,67        ;
 59040 DEFB 194,67,193,131,224,7,240,15        ;
 59048 DEFB 248,31,252,63,255,255,255,255      ; }
 59056 DEFW 23567                              ; Location in the attribute
                                               ; buffer at #R23552: (0,15)
 59058 DEFW 24591                              ; Location in the screen buffer
                                               ; at #R24576: (0,15)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM13 }
; TABLE#
 59060 DEFB 170,170,254,254,254,254,170,170    ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 59068 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 59069 DEFB 248                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 59070 DEFB 255                                ; {Horizontal guardian 1: y=7,
 59071 DEFW 23785                              ; initial x=9, 9<=x<=14,
 59073 DEFB 96                                 ; speed=slow (unused)
 59074 DEFB 0                                  ;
 59075 DEFB 233                                ;
 59076 DEFB 238                                ; }
 59077 DEFB 194                                ; {Horizontal guardian 2: y=10,
 59078 DEFW 23884                              ; initial x=12, 8<=x<=14,
 59080 DEFB 104                                ; speed=slow (unused)
 59081 DEFB 0                                  ;
 59082 DEFB 72                                 ;
 59083 DEFB 78                                 ; }
 59084 DEFB 67                                 ; {Horizontal guardian 3: y=13,
 59085 DEFW 23976                              ; initial x=8, 4<=x<=26,
 59087 DEFB 104                                ; speed=normal (unused)
 59088 DEFB 0                                  ;
 59089 DEFB 164                                ;
 59090 DEFB 186                                ; }
 59091 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 59098 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 59099 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 59101 DEFB 15                                 ; {Vertical guardian 1: x=1,
 59102 DEFB 0                                  ; initial y=0, 0<=y<=72,
 59103 DEFB 0                                  ; y-increment=4
 59104 DEFB 1                                  ;
 59105 DEFB 4                                  ;
 59106 DEFB 0                                  ;
 59107 DEFB 72                                 ; }
 59108 DEFB 13                                 ; {Vertical guardian 2: x=11,
 59109 DEFB 0                                  ; initial y=0, 0<=y<=32,
 59110 DEFB 0                                  ; y-increment=1
 59111 DEFB 11                                 ;
 59112 DEFB 1                                  ;
 59113 DEFB 0                                  ;
 59114 DEFB 32                                 ; }
 59115 DEFB 14                                 ; {Vertical guardian 3: x=21,
 59116 DEFB 0                                  ; initial y=2, 2<=y<=56,
 59117 DEFB 2                                  ; y-increment=3
 59118 DEFB 21                                 ;
 59119 DEFB 3                                  ;
 59120 DEFB 2                                  ;
 59121 DEFB 56                                 ; }
 59122 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 59129 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE59136,59101(skylab_landing_bay_guardian0) |
; #SPRITE59168,59101(skylab_landing_bay_guardian1) |
; #SPRITE59200,59101(skylab_landing_bay_guardian2) |
; #SPRITE59232,59101(skylab_landing_bay_guardian3) |
; #SPRITE59264,59101(skylab_landing_bay_guardian4) |
; #SPRITE59296,59101(skylab_landing_bay_guardian5) |
; #SPRITE59328,59101(skylab_landing_bay_guardian6) |
; #SPRITE59360,59101(skylab_landing_bay_guardian7) }
; TABLE#
 59136 DEFB 3,192,255,255,171,213,255,255      ; {Guardian graphic data
 59144 DEFB 19,200,41,148,21,168,11,208        ;
 59152 DEFB 5,160,3,192,3,192,5,160            ;
 59160 DEFB 10,80,20,40,40,20,16,8             ;
 59168 DEFB 0,0,0,0,3,192,255,255              ;
 59176 DEFB 171,213,255,255,19,200,41,148      ;
 59184 DEFB 21,168,11,208,5,160,3,192          ;
 59192 DEFB 3,192,37,160,74,84,20,42           ;
 59200 DEFB 0,0,0,0,0,0,0,7                    ;
 59208 DEFB 3,253,255,215,171,248,255,192      ;
 59216 DEFB 3,192,1,128,21,164,75,210          ;
 59224 DEFB 5,164,35,194,11,208,37,168         ;
 59232 DEFB 0,0,0,0,0,0,0,32                   ;
 59240 DEFB 2,2,0,21,3,206,15,212              ;
 59248 DEFB 203,200,183,194,227,200,49,129     ;
 59256 DEFB 7,228,195,200,23,194,35,252        ;
 59264 DEFB 0,0,1,0,0,0,8,32                   ;
 59272 DEFB 0,0,0,0,33,2,0,17                  ;
 59280 DEFB 3,138,14,144,75,192,55,2           ;
 59288 DEFB 98,192,49,1,5,226,195,68           ;
 59296 DEFB 0,0,0,0,0,0,0,0                    ;
 59304 DEFB 0,0,2,0,0,0,0,32                   ;
 59312 DEFB 16,8,10,132,0,32,101,0             ;
 59320 DEFB 34,104,8,160,3,208,23,224          ;
 59328 DEFB 0,0,0,0,0,0,0,0                    ;
 59336 DEFB 0,0,0,0,0,0,0,0                    ;
 59344 DEFB 2,0,0,32,16,0,0,0                  ;
 59352 DEFB 5,16,0,104,34,160,13,208           ;
 59360 DEFB 0,0,0,0,0,0,0,0                    ;
 59368 DEFB 0,0,0,0,0,0,0,0                    ;
 59376 DEFB 0,0,0,0,0,0,0,128                  ;
 59384 DEFB 0,32,8,0,2,192,7,96                ; }

; The Bank (teleport: 2346)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN14(the_bank) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN14
b59392 DEFB 14,0,0,0,0,0,14,14                 ; {Attributes
 59400 DEFB 14,14,14,14,14,14,14,14            ;
 59408 DEFB 14,14,14,14,14,14,14,14            ;
 59416 DEFB 14,14,14,14,14,14,14,14            ;
 59424 DEFB 14,0,0,0,0,0,0,0                   ;
 59432 DEFB 0,0,0,0,0,0,0,0                    ;
 59440 DEFB 0,0,0,0,0,0,0,0                    ;
 59448 DEFB 0,0,0,0,0,6,6,14                   ;
 59456 DEFB 14,0,0,0,0,0,0,0                   ;
 59464 DEFB 0,0,0,0,0,0,0,0                    ;
 59472 DEFB 0,0,0,0,0,0,0,0                    ;
 59480 DEFB 0,0,0,0,0,6,6,14                   ;
 59488 DEFB 14,0,0,0,0,0,0,0                   ;
 59496 DEFB 69,69,69,69,69,69,69,69            ;
 59504 DEFB 69,69,69,69,69,69,69,69            ;
 59512 DEFB 65,65,65,65,65,6,6,14              ;
 59520 DEFB 14,0,0,0,0,0,0,0                   ;
 59528 DEFB 66,0,0,0,0,0,0,0                   ;
 59536 DEFB 0,0,0,0,0,0,0,0                    ;
 59544 DEFB 0,0,0,0,66,6,6,14                  ;
 59552 DEFB 14,65,65,65,65,65,0,0              ;
 59560 DEFB 70,0,0,0,0,0,0,0                   ;
 59568 DEFB 0,0,0,0,0,0,0,0                    ;
 59576 DEFB 0,0,0,0,66,6,6,14                  ;
 59584 DEFB 14,0,0,0,0,0,0,0                   ;
 59592 DEFB 0,0,0,0,0,0,0,0                    ;
 59600 DEFB 0,0,0,0,0,0,0,0                    ;
 59608 DEFB 65,65,0,0,66,6,6,14                ;
 59616 DEFB 14,0,0,0,0,0,0,1                   ;
 59624 DEFB 0,0,0,0,65,65,0,0                  ;
 59632 DEFB 0,0,0,0,0,0,0,0                    ;
 59640 DEFB 0,0,0,0,66,6,6,14                  ;
 59648 DEFB 14,0,0,65,65,0,0,0                 ;
 59656 DEFB 0,0,0,0,0,0,0,0                    ;
 59664 DEFB 0,0,65,65,0,0,0,0                  ;
 59672 DEFB 0,0,0,0,66,6,6,14                  ;
 59680 DEFB 14,0,0,0,0,0,0,0                   ;
 59688 DEFB 0,0,0,0,0,0,0,0                    ;
 59696 DEFB 0,0,0,0,0,0,0,0                    ;
 59704 DEFB 0,65,65,0,66,6,6,14                ;
 59712 DEFB 14,65,65,0,0,0,0,0                 ;
 59720 DEFB 0,0,0,0,65,65,0,0                  ;
 59728 DEFB 0,0,0,0,0,0,0,0                    ;
 59736 DEFB 0,0,0,0,70,6,6,14                  ;
 59744 DEFB 14,0,0,0,0,0,0,0                   ;
 59752 DEFB 0,0,0,0,0,0,0,0                    ;
 59760 DEFB 0,0,65,65,0,0,0,0                  ;
 59768 DEFB 0,0,0,0,0,6,6,14                   ;
 59776 DEFB 14,0,0,0,0,65,65,65                ;
 59784 DEFB 0,0,0,0,0,0,0,0                    ;
 59792 DEFB 0,0,0,0,0,0,0,65                   ;
 59800 DEFB 65,0,0,0,0,6,6,14                  ;
 59808 DEFB 14,0,0,0,0,0,0,0                   ;
 59816 DEFB 0,0,0,0,65,65,0,0                  ;
 59824 DEFB 0,0,0,0,0,0,0,0                    ;
 59832 DEFB 0,0,0,0,0,6,6,14                   ;
 59840 DEFB 14,0,0,0,0,0,0,0                   ;
 59848 DEFB 0,0,0,0,0,0,0,0                    ;
 59856 DEFB 0,0,0,0,0,0,0,0                    ;
 59864 DEFB 0,0,0,0,0,6,6,14                   ;
 59872 DEFB 14,65,65,65,65,65,65,65            ;
 59880 DEFB 65,65,65,65,65,65,65,65            ;
 59888 DEFB 65,65,65,65,65,65,65,65            ;
 59896 DEFB 65,65,65,65,65,65,65,14            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 59904 DEFM "            The Bank            " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES14 }
; TABLE#
 59936 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 59945 DEFB 65,255,255,221,119,170,85,34,0     ; Floor
 59954 DEFB 1,255,219,165,36,82,32,8,0         ; Crumbling floor
 59963 DEFB 14,170,85,170,85,170,85,170,85     ; Wall
 59972 DEFB 69,254,102,254,0,0,0,0,0           ; Conveyor
 59981 DEFB 70,16,16,214,56,214,56,84,146      ; Nasty 1
 59990 DEFB 66,16,16,16,16,16,16,16,16         ; Nasty 2
 59999 DEFB 6,255,255,24,24,24,24,24,24        ; Extra
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 60008 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 60009 DEFB 0                                  ; Animation frame (see #R32873)
 60010 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 60011 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 60012 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 60014 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 60015 DEFB 0                                  ; Direction (left)
 60016 DEFW 28776                              ; Location in the screen buffer
                                               ; at #R28672: (3,8)
 60018 DEFB 16                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 60019 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 60020 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 60021 DEFB 3                                  ; {Item 1 at (2,25)
 60022 DEFW 23641                              ;
 60024 DEFB 96                                 ;
 60025 DEFB 255                                ; }
 60026 DEFB 4                                  ; {Item 2 at (6,12)
 60027 DEFW 23756                              ;
 60029 DEFB 96                                 ;
 60030 DEFB 255                                ; }
 60031 DEFB 5                                  ; {Item 3 at (14,26)
 60032 DEFW 24026                              ;
 60034 DEFB 104                                ;
 60035 DEFB 255                                ; }
 60036 DEFB 255                                ; {Item 4 at (6,19) (unused)
 60037 DEFW 23763                              ;
 60039 DEFB 96                                 ;
 60040 DEFB 255                                ; }
 60041 DEFB 3                                  ; {Item 5 at (13,30) (unused)
 60042 DEFW 23998                              ;
 60044 DEFB 104                                ;
 60045 DEFB 255                                ; }
 60046 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL14 }
; TABLE#
 60047 DEFB 86                                 ; Attribute
 60048 DEFB 255,255,128,1,128,1,128,1          ; {Graphic data
 60056 DEFB 128,1,136,1,170,1,156,61           ;
 60064 DEFB 255,71,156,1,170,1,136,1           ;
 60072 DEFB 128,1,128,1,128,1,255,255          ; }
 60080 DEFW 23649                              ; Location in the attribute
                                               ; buffer at #R23552: (3,1)
 60082 DEFW 24673                              ; Location in the screen buffer
                                               ; at #R24576: (3,1)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM14 }
; TABLE#
 60084 DEFB 124,56,100,222,142,222,130,124     ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 60092 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 60093 DEFB 252                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 60094 DEFB 69                                 ; {Horizontal guardian 1: y=13,
 60095 DEFW 23985                              ; initial x=17, 17<=x<=19,
 60097 DEFB 104                                ; speed=normal
 60098 DEFB 0                                  ;
 60099 DEFB 177                                ;
 60100 DEFB 179                                ; }
 60101 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 2 (unused)
 60108 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 60115 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 60122 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 60123 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 60125 DEFB 6                                  ; {Vertical guardian 1: x=9,
 60126 DEFB 0                                  ; initial y=40, 36<=y<102,
 60127 DEFB 40                                 ; initial y-increment=2
 60128 DEFB 9                                  ;
 60129 DEFB 2                                  ;
 60130 DEFB 36                                 ;
 60131 DEFB 102                                ; }
 60132 DEFB 7                                  ; {Vertical guardian 2: x=15,
 60133 DEFB 1                                  ; initial y=64, 36<=y<102,
 60134 DEFB 64                                 ; initial y-increment=1
 60135 DEFB 15                                 ;
 60136 DEFB 1                                  ;
 60137 DEFB 36                                 ;
 60138 DEFB 102                                ; }
 60139 DEFB 68                                 ; {Vertical guardian 3: x=21,
 60140 DEFB 3                                  ; initial y=80, 32<=y<104,
 60141 DEFB 80                                 ; initial y-increment=-3
 60142 DEFB 21                                 ;
 60143 DEFB 253                                ;
 60144 DEFB 32                                 ;
 60145 DEFB 104                                ; }
 60146 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 4 (unused)
 60153 DEFB 255                                ; Terminator
; The next 6 bytes are unused.
 60154 DEFB 0,0,0,0,0,0                        ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE60160,60125(the_bank_guardian0) |
; #SPRITE60192,60125(the_bank_guardian1) |
; #SPRITE60224,60125(the_bank_guardian2) |
; #SPRITE60256,60125(the_bank_guardian3) |
; #SPRITE60288,60094(the_bank_guardian4) |
; #SPRITE60320,60094(the_bank_guardian5) |
; #SPRITE60352,60094(the_bank_guardian6) |
; #SPRITE60384,60094(the_bank_guardian7) }
; TABLE#
 60160 DEFB 97,134,159,249,159,249,97,134      ; {Guardian graphic data
 60168 DEFB 3,192,255,255,128,1,170,169        ;
 60176 DEFB 159,253,181,89,144,13,181,89       ;
 60184 DEFB 159,253,170,169,128,1,255,255      ;
 60192 DEFB 29,184,34,244,34,244,29,184        ;
 60200 DEFB 3,192,255,255,213,85,191,255       ;
 60208 DEFB 234,173,176,7,229,77,176,7         ;
 60216 DEFB 234,173,191,255,213,85,255,255     ;
 60224 DEFB 7,224,8,16,8,16,7,224              ;
 60232 DEFB 3,192,255,255,255,255,213,87       ;
 60240 DEFB 224,3,202,167,231,243,202,167      ;
 60248 DEFB 224,3,213,87,255,255,255,255       ;
 60256 DEFB 29,184,47,68,47,68,29,184          ;
 60264 DEFB 3,192,255,255,170,171,192,1        ;
 60272 DEFB 149,83,207,249,154,179,207,249     ;
 60280 DEFB 149,83,192,1,170,171,255,255       ;
 60288 DEFB 0,0,0,0,0,0,0,0                    ;
 60296 DEFB 0,0,0,0,0,0,0,0                    ;
 60304 DEFB 0,0,0,0,255,192,129,192            ;
 60312 DEFB 255,192,130,64,254,64,255,192      ;
 60320 DEFB 0,0,0,0,0,0,0,0                    ;
 60328 DEFB 0,0,0,0,63,240,32,112              ;
 60336 DEFB 63,240,32,144,63,144,63,240        ;
 60344 DEFB 0,0,0,0,0,0,0,0                    ;
 60352 DEFB 0,0,0,0,0,0,0,0                    ;
 60360 DEFB 15,252,8,28,15,252,8,36            ;
 60368 DEFB 15,228,15,252,0,0,0,0              ;
 60376 DEFB 0,0,0,0,0,0,0,0                    ;
 60384 DEFB 0,0,0,0,0,0,0,0                    ;
 60392 DEFB 0,0,0,0,3,255,2,7                  ;
 60400 DEFB 3,255,2,9,3,249,3,255              ;
 60408 DEFB 0,0,0,0,0,0,0,0                    ; }

; The Sixteenth Cavern (teleport: 12346)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN15(the_sixteenth_cavern) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN15
b60416 DEFB 101,0,0,0,0,0,0,0                  ; {Attributes
 60424 DEFB 0,0,0,0,0,0,0,0                    ;
 60432 DEFB 0,0,0,0,0,0,0,0                    ;
 60440 DEFB 0,0,0,0,0,0,0,101                  ;
 60448 DEFB 101,0,0,0,0,0,0,0                  ;
 60456 DEFB 0,0,0,0,0,0,0,0                    ;
 60464 DEFB 0,0,0,0,0,0,0,0                    ;
 60472 DEFB 0,0,0,0,0,0,0,101                  ;
 60480 DEFB 101,0,0,0,0,0,0,0                  ;
 60488 DEFB 0,0,0,0,0,0,0,0                    ;
 60496 DEFB 0,0,0,0,0,0,0,0                    ;
 60504 DEFB 0,0,0,0,0,0,0,101                  ;
 60512 DEFB 101,0,0,0,0,0,0,0                  ;
 60520 DEFB 0,0,0,0,0,0,0,0                    ;
 60528 DEFB 0,0,0,0,0,0,0,0                    ;
 60536 DEFB 0,0,0,0,0,0,0,101                  ;
 60544 DEFB 101,0,0,0,0,0,0,0                  ;
 60552 DEFB 0,0,0,0,0,0,0,0                    ;
 60560 DEFB 0,0,0,0,0,0,0,0                    ;
 60568 DEFB 0,0,0,0,0,0,0,101                  ;
 60576 DEFB 101,66,0,0,0,0,66,0                ;
 60584 DEFB 0,0,0,101,0,0,101,0                ;
 60592 DEFB 0,0,0,0,0,0,66,66                  ;
 60600 DEFB 66,0,0,0,0,0,0,101                 ;
 60608 DEFB 101,0,0,0,0,0,0,0                  ;
 60616 DEFB 0,0,0,101,0,0,101,101              ;
 60624 DEFB 0,0,0,0,0,0,0,0                    ;
 60632 DEFB 0,0,0,0,0,0,0,101                  ;
 60640 DEFB 101,0,0,0,66,0,0,0                 ;
 60648 DEFB 0,0,0,101,0,0,101,101              ;
 60656 DEFB 101,0,0,0,0,0,0,0                  ;
 60664 DEFB 0,66,66,66,66,66,66,101            ;
 60672 DEFB 101,0,0,0,0,0,0,0                  ;
 60680 DEFB 0,0,0,101,0,0,101,101              ;
 60688 DEFB 101,101,0,0,0,0,0,0                ;
 60696 DEFB 0,0,0,0,0,0,0,101                  ;
 60704 DEFB 101,2,2,70,70,70,70,70             ;
 60712 DEFB 70,70,70,70,70,70,70,70            ;
 60720 DEFB 70,70,70,70,70,70,70,70            ;
 60728 DEFB 70,70,70,0,0,0,0,101               ;
 60736 DEFB 101,0,0,0,0,0,0,0                  ;
 60744 DEFB 0,0,0,0,0,0,0,0                    ;
 60752 DEFB 0,0,0,0,0,0,0,0                    ;
 60760 DEFB 0,0,0,0,0,0,0,101                  ;
 60768 DEFB 101,0,0,0,0,0,0,0                  ;
 60776 DEFB 0,0,101,101,66,66,0,0              ;
 60784 DEFB 0,0,0,0,0,0,0,0                    ;
 60792 DEFB 0,0,66,0,0,0,0,101                 ;
 60800 DEFB 101,66,66,66,66,66,66,66           ;
 60808 DEFB 66,66,0,0,0,0,0,0                  ;
 60816 DEFB 0,0,0,0,0,0,0,0                    ;
 60824 DEFB 0,0,0,0,0,0,0,101                  ;
 60832 DEFB 101,0,0,0,0,0,0,0                  ;
 60840 DEFB 0,0,0,0,0,0,0,0                    ;
 60848 DEFB 0,0,0,0,66,0,0,0                   ;
 60856 DEFB 0,0,66,0,0,0,0,101                 ;
 60864 DEFB 101,0,0,0,0,0,0,0                  ;
 60872 DEFB 0,0,0,0,0,0,0,0                    ;
 60880 DEFB 0,0,0,0,0,0,0,4                    ;
 60888 DEFB 4,4,0,0,0,0,0,101                  ;
 60896 DEFB 101,66,66,66,66,66,66,66           ;
 60904 DEFB 66,66,66,66,66,66,66,66            ;
 60912 DEFB 66,66,66,66,66,66,66,66            ;
 60920 DEFB 66,66,66,66,66,66,66,101           ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 60928 DEFM "      The Sixteenth Cavern      " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES15 }
; TABLE#
 60960 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 60969 DEFB 66,255,255,219,110,197,64,0,0      ; Floor
 60978 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor
 60987 DEFB 101,73,249,79,73,255,72,120,207    ; Wall
 60996 DEFB 70,240,102,240,170,0,0,0,0         ; Conveyor
 61005 DEFB 4,68,68,68,68,102,238,238,255      ; Nasty 1
 61014 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2 (unused)
 61023 DEFB 6,255,129,129,66,60,16,96,96       ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 61032 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 61033 DEFB 0                                  ; Animation frame (see #R32873)
 61034 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 61035 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 61036 DEFW 23970                              ; Location in the attribute
                                               ; buffer at #R23552: (13,2) (see
                                               ; #R32876)
 61038 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 61039 DEFB 0                                  ; Direction (left)
 61040 DEFW 30755                              ; Location in the screen buffer
                                               ; at #R28672: (9,3)
 61042 DEFB 24                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 61043 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 61044 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 61045 DEFB 3                                  ; {Item 1 at (2,30)
 61046 DEFW 23646                              ;
 61048 DEFB 96                                 ;
 61049 DEFB 255                                ; }
 61050 DEFB 4                                  ; {Item 2 at (7,13)
 61051 DEFW 23789                              ;
 61053 DEFB 96                                 ;
 61054 DEFB 255                                ; }
 61055 DEFB 5                                  ; {Item 3 at (0,1)
 61056 DEFW 23553                              ;
 61058 DEFB 96                                 ;
 61059 DEFB 255                                ; }
 61060 DEFB 6                                  ; {Item 4 at (10,17)
 61061 DEFW 23889                              ;
 61063 DEFB 104                                ;
 61064 DEFB 255                                ; }
 61065 DEFB 255                                ; {Item 5 at (5,26) (unused)
 61066 DEFW 23738                              ;
 61068 DEFB 96                                 ;
 61069 DEFB 255                                ; }
 61070 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL15 }
; TABLE#
 61071 DEFB 94                                 ; Attribute
 61072 DEFB 255,255,129,129,129,129,255,255    ; {Graphic data
 61080 DEFB 129,129,129,129,255,255,129,129    ;
 61088 DEFB 129,129,255,255,129,129,129,129    ;
 61096 DEFB 255,255,129,129,129,129,255,255    ; }
 61104 DEFW 23724                              ; Location in the attribute
                                               ; buffer at #R23552: (5,12)
 61106 DEFW 24748                              ; Location in the screen buffer
                                               ; at #R24576: (5,12)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM15 }
; TABLE#
 61108 DEFB 15,9,61,39,244,156,144,240         ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 61116 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 61117 DEFB 248                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 61118 DEFB 68                                 ; {Horizontal guardian 1: y=13,
 61119 DEFW 23977                              ; initial x=9, 1<=x<=18,
 61121 DEFB 104                                ; speed=normal
 61122 DEFB 0                                  ;
 61123 DEFB 161                                ;
 61124 DEFB 178                                ; }
 61125 DEFB 6                                  ; {Horizontal guardian 2: y=10,
 61126 DEFW 23873                              ; initial x=1, 1<=x<=7,
 61128 DEFB 104                                ; speed=normal
 61129 DEFB 0                                  ;
 61130 DEFB 65                                 ;
 61131 DEFB 71                                 ; }
 61132 DEFB 67                                 ; {Horizontal guardian 3: y=7,
 61133 DEFW 23794                              ; initial x=18, 18<=x<=23,
 61135 DEFB 96                                 ; speed=normal
 61136 DEFB 0                                  ;
 61137 DEFB 242                                ;
 61138 DEFB 247                                ; }
 61139 DEFB 133                                ; {Horizontal guardian 4: y=5,
 61140 DEFW 23738                              ; initial x=26, 25<=x<=29,
 61142 DEFB 96                                 ; speed=slow
 61143 DEFB 0                                  ;
 61144 DEFB 185                                ;
 61145 DEFB 189                                ; }
 61146 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 61147 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 61149 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 1 (unused)
 61156 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 2 (unused)
 61163 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 61170 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 61177 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE61184,61118(the_sixteenth_cavern_guardian0) |
; #SPRITE61216,61118(the_sixteenth_cavern_guardian1) |
; #SPRITE61248,61118(the_sixteenth_cavern_guardian2) |
; #SPRITE61280,61118(the_sixteenth_cavern_guardian3) |
; #SPRITE61312,61118(the_sixteenth_cavern_guardian4) |
; #SPRITE61344,61118(the_sixteenth_cavern_guardian5) |
; #SPRITE61376,61118(the_sixteenth_cavern_guardian6) |
; #SPRITE61408,61118(the_sixteenth_cavern_guardian7) }
; TABLE#
 61184 DEFB 0,0,8,0,20,0,42,0                  ; {Guardian graphic data
 61192 DEFB 85,0,74,0,132,0,128,192            ;
 61200 DEFB 128,192,65,0,127,128,63,192        ;
 61208 DEFB 31,128,15,0,10,128,18,64           ;
 61216 DEFB 42,0,21,0,42,0,21,0                ;
 61224 DEFB 32,0,32,0,32,0,32,48               ;
 61232 DEFB 32,48,16,64,31,224,15,240          ;
 61240 DEFB 7,224,3,192,2,160,4,144            ;
 61248 DEFB 0,0,16,0,40,0,84,0                 ;
 61256 DEFB 170,0,81,0,33,0,1,12               ;
 61264 DEFB 2,12,2,16,3,248,3,252              ;
 61272 DEFB 1,248,0,240,0,168,1,36             ;
 61280 DEFB 5,64,10,128,5,64,10,128            ;
 61288 DEFB 0,64,0,64,0,64,0,67                ;
 61296 DEFB 0,131,0,132,0,254,0,255            ;
 61304 DEFB 0,126,0,60,0,42,0,73               ;
 61312 DEFB 2,160,1,80,2,160,1,80              ;
 61320 DEFB 2,0,2,0,2,0,194,0                  ;
 61328 DEFB 193,0,33,0,127,0,255,0             ;
 61336 DEFB 126,0,60,0,84,0,146,0              ;
 61344 DEFB 0,0,0,8,0,20,0,42                  ;
 61352 DEFB 0,85,0,138,0,132,48,128            ;
 61360 DEFB 48,64,8,64,31,192,63,192           ;
 61368 DEFB 31,128,15,0,21,0,36,128            ;
 61376 DEFB 0,84,0,168,0,84,0,168              ;
 61384 DEFB 0,4,0,4,0,4,12,4                   ;
 61392 DEFB 12,4,2,8,7,248,15,240              ;
 61400 DEFB 7,224,3,192,5,64,9,32              ;
 61408 DEFB 0,0,0,16,0,40,0,84                 ;
 61416 DEFB 0,170,0,82,0,33,3,1                ;
 61424 DEFB 3,1,0,130,1,254,3,252              ;
 61432 DEFB 1,248,0,240,1,80,2,72              ; }

; The Warehouse (teleport: 56)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN16(the_warehouse) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN16
b61440 DEFB 22,0,0,0,0,0,0,0                   ; {Attributes
 61448 DEFB 0,0,0,0,0,0,0,0                    ;
 61456 DEFB 0,0,0,0,0,0,0,0                    ;
 61464 DEFB 0,0,0,0,0,22,22,22                 ;
 61472 DEFB 22,0,0,0,0,0,0,0                   ;
 61480 DEFB 0,0,0,0,0,0,0,0                    ;
 61488 DEFB 0,0,0,0,0,0,0,0                    ;
 61496 DEFB 0,0,0,0,0,0,0,22                   ;
 61504 DEFB 22,0,0,0,0,0,0,0                   ;
 61512 DEFB 0,0,0,0,0,0,0,0                    ;
 61520 DEFB 0,0,0,0,0,0,0,0                    ;
 61528 DEFB 0,0,0,0,0,0,0,22                   ;
 61536 DEFB 22,0,0,0,0,0,0,0                   ;
 61544 DEFB 0,0,0,0,0,0,0,0                    ;
 61552 DEFB 0,0,0,0,0,0,0,0                    ;
 61560 DEFB 0,0,0,0,0,0,0,22                   ;
 61568 DEFB 22,0,0,0,0,0,6,0                   ;
 61576 DEFB 0,6,0,0,0,6,0,0                    ;
 61584 DEFB 6,0,0,0,0,0,6,0                    ;
 61592 DEFB 6,0,0,0,0,0,0,22                   ;
 61600 DEFB 22,4,4,68,68,68,68,68              ;
 61608 DEFB 68,68,0,0,68,68,68,68              ;
 61616 DEFB 68,68,68,0,0,68,68,68              ;
 61624 DEFB 0,68,68,0,0,4,4,22                 ;
 61632 DEFB 22,68,68,33,68,68,68,68            ;
 61640 DEFB 68,68,0,0,68,68,68,68              ;
 61648 DEFB 68,68,68,0,0,68,68,68              ;
 61656 DEFB 68,68,68,0,0,68,68,22              ;
 61664 DEFB 22,68,68,68,68,68,68,68            ;
 61672 DEFB 68,68,0,0,68,68,68,0               ;
 61680 DEFB 68,68,68,0,0,68,68,68              ;
 61688 DEFB 68,68,33,0,0,68,68,22              ;
 61696 DEFB 22,68,68,0,0,68,68,68              ;
 61704 DEFB 68,68,0,0,68,68,32,32              ;
 61712 DEFB 32,32,32,0,0,68,68,68              ;
 61720 DEFB 68,68,68,0,0,68,68,22              ;
 61728 DEFB 22,0,68,0,0,68,68,68               ;
 61736 DEFB 68,68,0,0,68,68,68,68              ;
 61744 DEFB 68,68,68,0,0,68,68,68              ;
 61752 DEFB 68,68,68,0,0,68,68,22              ;
 61760 DEFB 22,68,68,0,0,68,68,68              ;
 61768 DEFB 68,68,0,0,68,68,68,68              ;
 61776 DEFB 68,68,68,0,68,68,33,68             ;
 61784 DEFB 68,68,68,0,0,68,68,22              ;
 61792 DEFB 22,68,68,0,0,68,68,68              ;
 61800 DEFB 68,33,0,0,68,68,68,68              ;
 61808 DEFB 68,68,68,68,68,68,68,68            ;
 61816 DEFB 68,68,0,0,0,68,68,22               ;
 61824 DEFB 22,68,68,0,0,68,68,68              ;
 61832 DEFB 68,68,0,0,68,68,68,68              ;
 61840 DEFB 68,68,68,68,68,68,68,68            ;
 61848 DEFB 68,68,68,0,0,68,68,22              ;
 61856 DEFB 22,0,0,0,0,0,0,0                   ;
 61864 DEFB 0,0,0,0,0,0,0,0                    ;
 61872 DEFB 0,0,0,0,0,0,0,0                    ;
 61880 DEFB 0,0,0,0,0,0,0,22                   ;
 61888 DEFB 22,0,0,0,0,0,0,0                   ;
 61896 DEFB 0,0,0,0,0,0,0,0                    ;
 61904 DEFB 0,0,0,0,0,0,0,0                    ;
 61912 DEFB 0,0,0,4,4,4,4,22                   ;
 61920 DEFB 22,4,4,4,4,4,4,4                   ;
 61928 DEFB 4,4,4,4,4,4,4,4                    ;
 61936 DEFB 4,4,4,4,4,4,4,4                    ;
 61944 DEFB 4,4,4,4,4,4,4,22                   ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 61952 DEFM "         The Warehouse          " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES16 }
; TABLE#
 61984 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 61993 DEFB 4,255,255,219,110,197,64,0,0       ; Floor
 62002 DEFB 68,255,170,85,170,85,170,85,170    ; Crumbling floor
 62011 DEFB 22,255,153,187,255,255,153,187,255 ; Wall
 62020 DEFB 32,240,102,240,102,0,0,0,0         ; Conveyor
 62029 DEFB 6,68,40,148,81,53,214,88,16        ; Nasty 1
 62038 DEFB 33,66,215,254,101,166,125,238,215  ; Nasty 2
 62047 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 62056 DEFB 48                                 ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 62057 DEFB 3                                  ; Animation frame (see #R32873)
 62058 DEFB 1                                  ; Direction and movement flags:
                                               ; facing left (see #R32874)
 62059 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 62060 DEFW 23649                              ; Location in the attribute
                                               ; buffer at #R23552: (3,1) (see
                                               ; #R32876)
 62062 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 62063 DEFB 1                                  ; Direction (right)
 62064 DEFW 30734                              ; Location in the screen buffer
                                               ; at #R28672: (8,14)
 62066 DEFB 5                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 62067 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 62068 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 62069 DEFB 35                                 ; {Item 1 at (5,24)
 62070 DEFW 23736                              ;
 62072 DEFB 96                                 ;
 62073 DEFB 255                                ; }
 62074 DEFB 36                                 ; {Item 2 at (7,15)
 62075 DEFW 23791                              ;
 62077 DEFB 96                                 ;
 62078 DEFB 255                                ; }
 62079 DEFB 37                                 ; {Item 3 at (9,1)
 62080 DEFW 23841                              ;
 62082 DEFB 104                                ;
 62083 DEFB 255                                ; }
 62084 DEFB 38                                 ; {Item 4 at (10,19)
 62085 DEFW 23891                              ;
 62087 DEFB 104                                ;
 62088 DEFB 255                                ; }
 62089 DEFB 35                                 ; {Item 5 at (11,26)
 62090 DEFW 23930                              ;
 62092 DEFB 104                                ;
 62093 DEFB 255                                ; }
 62094 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL16 }
; TABLE#
 62095 DEFB 76                                 ; Attribute
 62096 DEFB 255,255,128,1,191,253,160,5        ; {Graphic data
 62104 DEFB 165,165,165,165,165,165,165,165    ;
 62112 DEFB 165,165,165,165,175,245,165,165    ;
 62120 DEFB 165,165,165,165,165,165,255,255    ; }
 62128 DEFW 23613                              ; Location in the attribute
                                               ; buffer at #R23552: (1,29)
 62130 DEFW 24637                              ; Location in the screen buffer
                                               ; at #R24576: (1,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM16 }
; TABLE#
 62132 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 62140 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 62141 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 62142 DEFB 194                                ; {Horizontal guardian 1: y=13,
 62143 DEFW 23973                              ; initial x=5, 5<=x<=8,
 62145 DEFB 104                                ; speed=slow
 62146 DEFB 0                                  ;
 62147 DEFB 165                                ;
 62148 DEFB 168                                ; }
 62149 DEFB 5                                  ; {Horizontal guardian 2: y=13,
 62150 DEFW 23980                              ; initial x=12, 12<=x<=25,
 62152 DEFB 104                                ; speed=normal
 62153 DEFB 0                                  ;
 62154 DEFB 172                                ;
 62155 DEFB 185                                ; }
 62156 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 3 (unused)
 62163 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 62170 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 62171 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 62173 DEFB 65                                 ; {Vertical guardian 1: x=3,
 62174 DEFB 0                                  ; initial y=64, 64<=y<102,
 62175 DEFB 64                                 ; initial y-increment=2
 62176 DEFB 3                                  ;
 62177 DEFB 2                                  ;
 62178 DEFB 64                                 ;
 62179 DEFB 102                                ; }
 62180 DEFB 6                                  ; {Vertical guardian 2: x=10,
 62181 DEFB 1                                  ; initial y=64, 3<=y<96, initial
 62182 DEFB 64                                 ; y-increment=-3
 62183 DEFB 10                                 ;
 62184 DEFB 253                                ;
 62185 DEFB 3                                  ;
 62186 DEFB 96                                 ; }
 62187 DEFB 71                                 ; {Vertical guardian 3: x=19,
 62188 DEFB 2                                  ; initial y=48, 0<=y<64, initial
 62189 DEFB 48                                 ; y-increment=1
 62190 DEFB 19                                 ;
 62191 DEFB 1                                  ;
 62192 DEFB 0                                  ;
 62193 DEFB 64                                 ; }
 62194 DEFB 67                                 ; {Vertical guardian 4: x=27,
 62195 DEFB 3                                  ; initial y=0, 4<=y<96, initial
 62196 DEFB 0                                  ; y-increment=4
 62197 DEFB 27                                 ;
 62198 DEFB 4                                  ;
 62199 DEFB 4                                  ;
 62200 DEFB 96                                 ; }
 62201 DEFB 255                                ; Terminator
; The next 6 bytes are unused.
 62202 DEFB 0,0,0,0,0,0                        ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE62208,62173(the_warehouse_guardian0) |
; #SPRITE62240,62173(the_warehouse_guardian1) |
; #SPRITE62272,62173(the_warehouse_guardian2) |
; #SPRITE62304,62173(the_warehouse_guardian3) |
; #SPRITE62336,62142(the_warehouse_guardian4) |
; #SPRITE62368,62142(the_warehouse_guardian5) |
; #SPRITE62400,62142(the_warehouse_guardian6) |
; #SPRITE62432,62142(the_warehouse_guardian7) }
; TABLE#
 62208 DEFB 85,85,255,255,255,255,8,16         ; {Guardian graphic data
 62216 DEFB 8,16,8,16,248,31,85,85             ;
 62224 DEFB 255,255,255,255,8,16,8,16          ;
 62232 DEFB 8,16,88,21,255,255,255,255         ;
 62240 DEFB 0,0,85,85,255,255,255,255          ;
 62248 DEFB 8,16,248,31,8,16,63,254            ;
 62256 DEFB 56,30,8,16,95,245,255,255          ;
 62264 DEFB 255,255,0,0,255,255,0,0            ;
 62272 DEFB 0,0,0,0,255,255,85,85              ;
 62280 DEFB 255,255,255,255,8,16,56,30         ;
 62288 DEFB 63,254,8,16,248,31,95,245          ;
 62296 DEFB 255,255,255,255,0,0,0,0            ;
 62304 DEFB 0,0,85,85,255,255,248,31           ;
 62312 DEFB 8,16,85,85,255,255,255,255         ;
 62320 DEFB 120,29,248,31,248,31,8,16          ;
 62328 DEFB 85,85,255,255,255,255,0,0          ;
 62336 DEFB 126,0,153,0,255,0,219,0            ;
 62344 DEFB 231,0,126,0,36,0,36,0              ;
 62352 DEFB 36,0,66,0,66,0,66,0                ;
 62360 DEFB 129,0,129,0,195,0,195,0            ;
 62368 DEFB 0,0,31,128,38,64,63,192            ;
 62376 DEFB 54,192,57,192,31,128,16,128        ;
 62384 DEFB 32,64,32,64,64,32,64,32            ;
 62392 DEFB 128,16,128,48,192,48,192,0         ;
 62400 DEFB 0,0,0,0,0,0,7,224                  ;
 62408 DEFB 9,144,15,240,13,176,14,112         ;
 62416 DEFB 7,224,8,16,16,8,32,4               ;
 62424 DEFB 64,2,128,1,192,3,192,3             ;
 62432 DEFB 0,0,1,248,2,100,3,252              ;
 62440 DEFB 3,108,3,156,1,248,1,8              ;
 62448 DEFB 2,4,2,4,4,2,4,2                    ;
 62456 DEFB 8,1,12,1,12,3,0,3                  ; }

; Amoebatrons' Revenge (teleport: 156)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN17(amoebatrons'_revenge) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN17
b62464 DEFB 22,0,0,0,0,0,0,0                   ; {Attributes
 62472 DEFB 0,0,0,0,0,0,0,0                    ;
 62480 DEFB 0,0,0,0,0,0,0,0                    ;
 62488 DEFB 0,0,0,0,22,0,0,22                  ;
 62496 DEFB 22,0,0,0,0,0,0,0                   ;
 62504 DEFB 0,0,0,0,0,0,0,0                    ;
 62512 DEFB 0,0,0,0,0,0,0,0                    ;
 62520 DEFB 0,0,0,0,0,0,0,22                   ;
 62528 DEFB 22,0,0,0,0,0,0,0                   ;
 62536 DEFB 0,0,0,0,0,0,0,0                    ;
 62544 DEFB 0,0,0,0,0,0,0,0                    ;
 62552 DEFB 0,0,0,0,0,0,0,22                   ;
 62560 DEFB 22,0,0,0,0,0,0,0                   ;
 62568 DEFB 0,0,0,0,0,0,0,0                    ;
 62576 DEFB 0,0,0,0,0,0,0,0                    ;
 62584 DEFB 0,0,0,0,0,0,0,22                   ;
 62592 DEFB 22,0,0,0,0,0,0,0                   ;
 62600 DEFB 0,0,0,0,0,0,0,0                    ;
 62608 DEFB 0,0,0,0,0,0,0,0                    ;
 62616 DEFB 0,0,0,0,0,0,0,22                   ;
 62624 DEFB 22,0,0,66,66,0,0,66                ;
 62632 DEFB 66,66,0,0,66,66,66,66              ;
 62640 DEFB 66,66,66,66,0,0,66,66              ;
 62648 DEFB 66,0,0,66,66,66,66,22              ;
 62656 DEFB 22,0,0,0,0,0,0,0                   ;
 62664 DEFB 0,0,0,0,0,0,0,0                    ;
 62672 DEFB 0,0,0,0,0,0,0,0                    ;
 62680 DEFB 0,0,0,0,0,0,0,22                   ;
 62688 DEFB 22,66,66,0,0,0,0,0                 ;
 62696 DEFB 0,0,0,0,0,0,0,0                    ;
 62704 DEFB 0,0,0,0,0,0,0,0                    ;
 62712 DEFB 0,0,0,0,0,0,0,22                   ;
 62720 DEFB 22,0,0,0,0,0,0,0                   ;
 62728 DEFB 0,0,0,0,66,66,66,66                ;
 62736 DEFB 66,66,66,66,0,0,66,66              ;
 62744 DEFB 66,0,0,66,66,0,0,22                ;
 62752 DEFB 22,0,0,66,66,0,0,66                ;
 62760 DEFB 66,66,0,0,0,0,0,0                  ;
 62768 DEFB 0,0,0,0,0,0,0,0                    ;
 62776 DEFB 0,0,0,0,0,0,0,22                   ;
 62784 DEFB 22,0,0,0,0,0,0,0                   ;
 62792 DEFB 0,0,0,0,0,0,0,0                    ;
 62800 DEFB 0,0,0,0,0,0,0,0                    ;
 62808 DEFB 0,0,0,0,0,66,66,22                 ;
 62816 DEFB 22,0,0,0,0,0,0,0                   ;
 62824 DEFB 0,0,0,0,0,0,0,0                    ;
 62832 DEFB 0,0,0,0,0,0,0,0                    ;
 62840 DEFB 0,0,0,0,0,0,0,22                   ;
 62848 DEFB 22,0,0,66,66,0,0,66                ;
 62856 DEFB 66,66,0,0,66,66,66,66              ;
 62864 DEFB 66,66,66,66,0,0,66,66              ;
 62872 DEFB 66,0,0,66,66,0,0,22                ;
 62880 DEFB 22,66,66,0,0,0,0,0                 ;
 62888 DEFB 0,0,0,0,0,0,0,0                    ;
 62896 DEFB 0,0,0,0,0,0,0,0                    ;
 62904 DEFB 0,0,0,0,0,0,0,22                   ;
 62912 DEFB 22,0,0,0,0,0,0,0                   ;
 62920 DEFB 0,0,0,0,0,0,0,0                    ;
 62928 DEFB 0,0,0,0,0,0,0,0                    ;
 62936 DEFB 0,0,0,0,0,0,0,22                   ;
 62944 DEFB 66,66,66,66,66,66,66,66            ;
 62952 DEFB 66,66,66,66,66,66,66,66            ;
 62960 DEFB 66,66,66,66,66,66,66,66            ;
 62968 DEFB 66,66,66,66,66,66,66,66            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 62976 DEFM "      Amoebatrons' Revenge      " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES17 }
; TABLE#
 63008 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 63017 DEFB 66,255,255,219,110,197,64,0,0      ; Floor
 63026 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor (unused)
 63035 DEFB 22,255,129,129,255,255,129,129,255 ; Wall
 63044 DEFB 4,240,102,240,102,0,153,255,0      ; Conveyor (unused)
 63053 DEFB 68,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 63062 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2 (unused)
 63071 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 63080 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 63081 DEFB 3                                  ; Animation frame (see #R32873)
 63082 DEFB 1                                  ; Direction and movement flags:
                                               ; facing left (see #R32874)
 63083 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 63084 DEFW 23997                              ; Location in the attribute
                                               ; buffer at #R23552: (13,29)
                                               ; (see #R32876)
 63086 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the (unused) conveyor.
 63087 DEFB 1                                  ; Direction (right)
 63088 DEFW 30759                              ; Location in the screen buffer
                                               ; at #R28672: (9,7)
 63090 DEFB 3                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 63091 DEFB 1                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 63092 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 63093 DEFB 3                                  ; {Item 1 at (1,16)
 63094 DEFW 23600                              ;
 63096 DEFB 96                                 ;
 63097 DEFB 255                                ; }
 63098 DEFB 255,255,255,255,255                ; Item 2 (unused)
 63103 DEFB 0,255,255,255,255                  ; Item 3 (unused)
 63108 DEFB 0,255,255,255,255                  ; Item 4 (unused)
 63113 DEFB 0,255,255,255,255                  ; Item 5 (unused)
 63118 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL17 }
; TABLE#
 63119 DEFB 14                                 ; Attribute
 63120 DEFB 255,255,128,1,176,13,160,5         ; {Graphic data
 63128 DEFB 170,85,170,85,170,85,170,85        ;
 63136 DEFB 170,85,170,85,170,85,170,85        ;
 63144 DEFB 160,5,176,13,128,1,255,255         ; }
 63152 DEFW 23581                              ; Location in the attribute
                                               ; buffer at #R23552: (0,29)
 63154 DEFW 24605                              ; Location in the screen buffer
                                               ; at #R24576: (0,29)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM17 }
; TABLE#
 63156 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 63164 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 63165 DEFB 128                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 63166 DEFB 196                                ; {Horizontal guardian 1: y=3,
 63167 DEFW 23660                              ; initial x=12, 12<=x<=18,
 63169 DEFB 96                                 ; speed=slow
 63170 DEFB 0                                  ;
 63171 DEFB 108                                ;
 63172 DEFB 114                                ; }
 63173 DEFB 133                                ; {Horizontal guardian 2: y=10,
 63174 DEFW 23888                              ; initial x=16, 12<=x<=17,
 63176 DEFB 104                                ; speed=slow
 63177 DEFB 0                                  ;
 63178 DEFB 76                                 ;
 63179 DEFB 81                                 ; }
 63180 DEFB 67                                 ; {Horizontal guardian 3: y=6,
 63181 DEFW 23760                              ; initial x=16, 12<=x<=17,
 63183 DEFB 96                                 ; speed=normal
 63184 DEFB 0                                  ;
 63185 DEFB 204                                ;
 63186 DEFB 209                                ; }
 63187 DEFB 6                                  ; {Horizontal guardian 4: y=13,
 63188 DEFW 23984                              ; initial x=16, 12<=x<=18,
 63190 DEFB 104                                ; speed=normal
 63191 DEFB 7                                  ;
 63192 DEFB 172                                ;
 63193 DEFB 178                                ; }
 63194 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 63195 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 63197 DEFB 67                                 ; {Vertical guardian 1: x=5,
 63198 DEFB 0                                  ; initial y=8, 5<=y<104, initial
 63199 DEFB 8                                  ; y-increment=3
 63200 DEFB 5                                  ;
 63201 DEFB 3                                  ;
 63202 DEFB 5                                  ;
 63203 DEFB 104                                ; }
 63204 DEFB 4                                  ; {Vertical guardian 2: x=10,
 63205 DEFB 1                                  ; initial y=8, 5<=y<104, initial
 63206 DEFB 8                                  ; y-increment=2
 63207 DEFB 10                                 ;
 63208 DEFB 2                                  ;
 63209 DEFB 5                                  ;
 63210 DEFB 104                                ; }
 63211 DEFB 5                                  ; {Vertical guardian 3: x=20,
 63212 DEFB 2                                  ; initial y=8, 5<=y<104, initial
 63213 DEFB 8                                  ; y-increment=4
 63214 DEFB 20                                 ;
 63215 DEFB 4                                  ;
 63216 DEFB 5                                  ;
 63217 DEFB 104                                ; }
 63218 DEFB 6                                  ; {Vertical guardian 4: x=25,
 63219 DEFB 3                                  ; initial y=8, 5<=y<104, initial
 63220 DEFB 8                                  ; y-increment=1
 63221 DEFB 25                                 ;
 63222 DEFB 1                                  ;
 63223 DEFB 5                                  ;
 63224 DEFB 104                                ; }
 63225 DEFB 255                                ; Terminator
; The next 6 bytes are unused.
 63226 DEFB 0,0,0,0,0,0                        ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE63232,63197(amoebatrons'_revenge_guardian0) |
; #SPRITE63264,63197(amoebatrons'_revenge_guardian1) |
; #SPRITE63296,63197(amoebatrons'_revenge_guardian2) |
; #SPRITE63328,63197(amoebatrons'_revenge_guardian3) |
; #SPRITE63360,63166(amoebatrons'_revenge_guardian4) |
; #SPRITE63392,63166(amoebatrons'_revenge_guardian5) |
; #SPRITE63424,63166(amoebatrons'_revenge_guardian6) |
; #SPRITE63456,63166(amoebatrons'_revenge_guardian7) }
; TABLE#
 63232 DEFB 3,192,14,112,19,200,49,140         ; {Guardian graphic data
 63240 DEFB 57,156,95,250,141,178,132,164      ;
 63248 DEFB 73,36,41,18,36,137,66,73           ;
 63256 DEFB 130,82,4,144,8,136,0,64            ;
 63264 DEFB 3,192,14,112,19,200,49,140         ;
 63272 DEFB 57,156,95,250,77,177,133,17        ;
 63280 DEFB 132,146,72,164,41,36,41,18         ;
 63288 DEFB 68,137,2,72,2,80,4,0               ;
 63296 DEFB 3,192,14,112,19,200,49,140         ;
 63304 DEFB 57,156,95,250,77,177,68,145        ;
 63312 DEFB 130,73,130,74,68,148,37,36         ;
 63320 DEFB 41,34,8,144,4,72,0,64              ;
 63328 DEFB 3,192,14,112,19,200,49,140         ;
 63336 DEFB 57,156,95,250,77,178,41,18         ;
 63344 DEFB 36,145,66,73,130,74,132,74         ;
 63352 DEFB 72,145,9,32,9,0,0,128              ;
 63360 DEFB 12,0,12,0,12,0,12,0                ;
 63368 DEFB 12,0,12,0,12,0,12,0                ;
 63376 DEFB 12,0,12,0,255,192,12,0             ;
 63384 DEFB 97,128,210,192,179,64,97,128       ;
 63392 DEFB 3,0,3,0,3,0,3,0                    ;
 63400 DEFB 3,0,3,0,3,0,3,0                    ;
 63408 DEFB 3,0,3,0,63,240,3,0                 ;
 63416 DEFB 24,96,36,208,60,208,24,96          ;
 63424 DEFB 0,192,0,192,0,192,0,192            ;
 63432 DEFB 0,192,0,192,0,192,0,192            ;
 63440 DEFB 0,192,0,192,15,252,0,192           ;
 63448 DEFB 6,24,11,52,13,44,6,24              ;
 63456 DEFB 0,48,0,48,0,48,0,48                ;
 63464 DEFB 0,48,0,48,0,48,0,48                ;
 63472 DEFB 0,48,0,48,3,255,0,48               ;
 63480 DEFB 1,134,2,77,3,205,1,134             ; }

; Solar Power Generator (teleport: 256)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN18(solar_power_generator) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
@label=CAVERN18
b63488 DEFB 22,22,22,36,36,36,36,36            ; {Attributes
 63496 DEFB 36,36,36,36,36,36,36,36            ;
 63504 DEFB 36,36,36,36,36,36,36,36            ;
 63512 DEFB 36,36,36,36,36,36,36,22            ;
 63520 DEFB 22,36,36,36,36,36,36,36            ;
 63528 DEFB 36,36,36,36,36,36,36,36            ;
 63536 DEFB 36,36,36,36,36,36,36,36            ;
 63544 DEFB 36,36,36,36,36,36,36,22            ;
 63552 DEFB 22,36,36,36,36,36,36,36            ;
 63560 DEFB 36,36,36,36,36,36,36,36            ;
 63568 DEFB 36,36,36,36,36,36,36,36            ;
 63576 DEFB 36,36,36,36,36,36,36,22            ;
 63584 DEFB 22,36,36,36,36,36,36,36            ;
 63592 DEFB 36,36,36,36,36,36,36,36            ;
 63600 DEFB 36,36,36,36,36,36,36,36            ;
 63608 DEFB 36,36,36,36,36,36,36,22            ;
 63616 DEFB 22,36,36,36,36,36,36,36            ;
 63624 DEFB 36,36,36,36,36,36,36,36            ;
 63632 DEFB 36,36,36,36,36,36,36,36            ;
 63640 DEFB 36,36,36,36,36,36,36,22            ;
 63648 DEFB 22,36,36,32,32,36,36,36            ;
 63656 DEFB 36,32,32,32,32,32,32,36            ;
 63664 DEFB 36,36,36,36,36,36,36,36            ;
 63672 DEFB 32,32,32,32,32,32,32,22            ;
 63680 DEFB 22,36,36,36,36,36,36,36            ;
 63688 DEFB 36,36,36,36,36,36,36,36            ;
 63696 DEFB 36,36,36,36,36,36,36,36            ;
 63704 DEFB 36,36,36,36,36,36,36,22            ;
 63712 DEFB 22,36,36,36,36,36,36,36            ;
 63720 DEFB 36,36,36,36,36,36,36,36            ;
 63728 DEFB 36,36,36,32,32,32,36,36            ;
 63736 DEFB 36,36,36,36,36,36,36,22            ;
 63744 DEFB 22,32,32,36,36,36,36,36            ;
 63752 DEFB 36,36,36,36,36,32,32,32            ;
 63760 DEFB 36,36,36,36,36,36,36,36            ;
 63768 DEFB 32,32,32,32,32,32,32,22            ;
 63776 DEFB 22,36,36,36,36,36,36,36            ;
 63784 DEFB 36,36,36,36,36,36,36,36            ;
 63792 DEFB 36,36,36,36,36,36,36,36            ;
 63800 DEFB 36,36,36,36,36,36,36,22            ;
 63808 DEFB 22,36,36,36,36,36,36,36            ;
 63816 DEFB 36,36,36,36,36,36,36,36            ;
 63824 DEFB 36,36,36,32,32,36,36,36            ;
 63832 DEFB 36,36,36,36,36,36,36,22            ;
 63840 DEFB 22,32,32,32,32,36,36,36            ;
 63848 DEFB 36,36,36,36,36,36,36,36            ;
 63856 DEFB 36,36,36,36,36,36,36,36            ;
 63864 DEFB 32,32,32,32,32,32,32,22            ;
 63872 DEFB 22,36,36,36,36,36,36,38            ;
 63880 DEFB 38,38,38,36,36,36,32,32            ;
 63888 DEFB 32,32,32,36,36,36,36,36            ;
 63896 DEFB 36,36,36,36,36,36,36,22            ;
 63904 DEFB 22,36,36,36,36,36,36,36            ;
 63912 DEFB 36,36,36,36,36,36,36,36            ;
 63920 DEFB 36,36,36,36,36,36,36,36            ;
 63928 DEFB 36,36,36,36,36,36,36,22            ;
 63936 DEFB 22,22,22,36,36,36,36,36            ;
 63944 DEFB 36,36,36,36,36,36,36,36            ;
 63952 DEFB 36,36,36,36,36,36,36,36            ;
 63960 DEFB 36,36,36,36,36,36,36,22            ;
 63968 DEFB 22,22,22,32,32,32,32,32            ;
 63976 DEFB 32,32,32,32,32,32,32,32            ;
 63984 DEFB 32,32,32,32,32,32,32,22            ;
 63992 DEFB 32,32,32,32,32,32,32,22            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 64000 DEFM "     Solar Power Generator      " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES18 }
; TABLE#
 64032 DEFB 36,0,0,0,0,0,0,0,0                 ; Background
 64041 DEFB 32,255,255,219,110,197,64,0,0      ; Floor
 64050 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor (unused)
 64059 DEFB 22,34,255,136,255,34,255,136,255   ; Wall
 64068 DEFB 38,240,102,240,102,0,153,255,0     ; Conveyor
 64077 DEFB 68,68,40,148,81,53,214,88,16       ; Nasty 1 (unused)
 64086 DEFB 5,126,60,28,24,24,8,8,8            ; Nasty 2 (unused)
 64095 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 64104 DEFB 160                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 64105 DEFB 0                                  ; Animation frame (see #R32873)
 64106 DEFB 0                                  ; Direction and movement flags:
                                               ; facing right (see #R32874)
 64107 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 64108 DEFW 23886                              ; Location in the attribute
                                               ; buffer at #R23552: (10,14)
                                               ; (see #R32876)
 64110 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 64111 DEFB 0                                  ; Direction (left)
 64112 DEFW 30855                              ; Location in the screen buffer
                                               ; at #R28672: (12,7)
 64114 DEFB 4                                  ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 64115 DEFB 3                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 64116 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 64117 DEFB 35                                 ; {Item 1 at (1,30)
 64118 DEFW 23614                              ;
 64120 DEFB 96                                 ;
 64121 DEFB 255                                ; }
 64122 DEFB 36                                 ; {Item 2 at (5,1)
 64123 DEFW 23713                              ;
 64125 DEFB 96                                 ;
 64126 DEFB 255                                ; }
 64127 DEFB 37                                 ; {Item 3 at (12,30)
 64128 DEFW 23966                              ;
 64130 DEFB 104                                ;
 64131 DEFB 255                                ; }
 64132 DEFB 255,255,255,255,255                ; Item 4 (unused)
 64137 DEFB 0,255,255,255,255                  ; Item 5 (unused)
 64142 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL18 }
; TABLE#
 64143 DEFB 78                                 ; Attribute
 64144 DEFB 255,255,128,1,191,253,160,5        ; {Graphic data
 64152 DEFB 175,245,168,21,171,213,170,85      ;
 64160 DEFB 170,85,171,213,168,21,175,245      ;
 64168 DEFB 160,5,191,253,128,1,255,255        ; }
 64176 DEFW 23585                              ; Location in the attribute
                                               ; buffer at #R23552: (1,1)
 64178 DEFW 24609                              ; Location in the screen buffer
                                               ; at #R24576: (1,1)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM18 }
; TABLE#
 64180 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 64188 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 64189 DEFB 240                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 64190 DEFB 38                                 ; {Horizontal guardian 1: y=3,
 64191 DEFW 23672                              ; initial x=24, 23<=x<=29,
 64193 DEFB 96                                 ; speed=normal
 64194 DEFB 0                                  ;
 64195 DEFB 119                                ;
 64196 DEFB 125                                ; }
 64197 DEFB 33                                 ; {Horizontal guardian 2: y=6,
 64198 DEFW 23772                              ; initial x=28, 22<=x<=29,
 64200 DEFB 96                                 ; speed=normal
 64201 DEFB 0                                  ;
 64202 DEFB 214                                ;
 64203 DEFB 221                                ; }
 64204 DEFB 162                                ; {Horizontal guardian 3: y=9,
 64205 DEFW 23869                              ; initial x=29, 23<=x<=29,
 64207 DEFB 104                                ; speed=slow
 64208 DEFB 7                                  ;
 64209 DEFB 55                                 ;
 64210 DEFB 61                                 ; }
 64211 DEFB 38                                 ; {Horizontal guardian 4: y=13,
 64212 DEFW 23984                              ; initial x=16, 13<=x<=29,
 64214 DEFB 104                                ; speed=normal
 64215 DEFB 0                                  ;
 64216 DEFB 173                                ;
 64217 DEFB 189                                ; }
 64218 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 64219 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 64221 DEFB 38                                 ; {Vertical guardian 1: x=5,
 64222 DEFB 0                                  ; initial y=64, 2<=y<102,
 64223 DEFB 64                                 ; initial y-increment=3
 64224 DEFB 5                                  ;
 64225 DEFB 3                                  ;
 64226 DEFB 2                                  ;
 64227 DEFB 102                                ; }
 64228 DEFB 34                                 ; {Vertical guardian 2: x=11,
 64229 DEFB 1                                  ; initial y=56, 48<=y<102,
 64230 DEFB 56                                 ; initial y-increment=-2
 64231 DEFB 11                                 ;
 64232 DEFB 254                                ;
 64233 DEFB 48                                 ;
 64234 DEFB 102                                ; }
 64235 DEFB 33                                 ; {Vertical guardian 3: x=16,
 64236 DEFB 2                                  ; initial y=80, 4<=y<80, initial
 64237 DEFB 80                                 ; y-increment=1
 64238 DEFB 16                                 ;
 64239 DEFB 1                                  ;
 64240 DEFB 4                                  ;
 64241 DEFB 80                                 ; }
 64242 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 64249 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE64256,64221(solar_power_generator_guardian0) |
; #SPRITE64288,64221(solar_power_generator_guardian1) |
; #SPRITE64320,64221(solar_power_generator_guardian2) |
; #SPRITE64352,64221(solar_power_generator_guardian3) |
; #SPRITE64384,64190(solar_power_generator_guardian4) |
; #SPRITE64416,64190(solar_power_generator_guardian5) |
; #SPRITE64448,64190(solar_power_generator_guardian6) |
; #SPRITE64480,64190(solar_power_generator_guardian7) }
; TABLE#
 64256 DEFB 3,64,15,112,63,60,63,76            ; {Guardian graphic data
 64264 DEFB 95,102,95,118,159,127,0,127        ;
 64272 DEFB 142,0,142,255,70,254,64,242        ;
 64280 DEFB 32,4,48,12,12,48,2,192             ;
 64288 DEFB 3,192,15,240,63,172,63,204         ;
 64296 DEFB 95,198,71,182,153,191,158,127      ;
 64304 DEFB 142,127,141,159,69,230,65,242      ;
 64312 DEFB 32,4,48,12,12,48,3,192             ;
 64320 DEFB 3,192,15,240,47,188,55,200         ;
 64328 DEFB 91,230,93,230,158,223,158,63       ;
 64336 DEFB 140,127,139,127,71,190,65,194      ;
 64344 DEFB 0,4,48,4,12,48,3,192               ;
 64352 DEFB 3,192,11,240,61,188,61,204         ;
 64360 DEFB 93,230,94,244,158,227,158,31       ;
 64368 DEFB 136,127,135,127,7,126,65,178       ;
 64376 DEFB 32,4,48,12,12,16,3,192             ;
 64384 DEFB 6,0,12,0,24,0,56,0                 ;
 64392 DEFB 116,0,202,128,133,192,3,192        ;
 64400 DEFB 6,64,206,192,216,64,255,192        ;
 64408 DEFB 226,0,200,128,213,64,8,128         ;
 64416 DEFB 1,128,3,0,6,0,14,0                 ;
 64424 DEFB 29,0,50,160,33,112,0,240           ;
 64432 DEFB 1,144,99,176,102,16,127,240        ;
 64440 DEFB 120,128,98,32,101,80,2,32          ;
 64448 DEFB 0,96,0,192,1,128,3,128             ;
 64456 DEFB 7,64,12,168,8,92,0,60              ;
 64464 DEFB 0,100,48,236,49,132,63,252         ;
 64472 DEFB 62,32,48,136,49,84,0,136           ;
 64480 DEFB 0,24,0,48,0,96,0,224               ;
 64488 DEFB 1,208,3,42,2,23,0,15               ;
 64496 DEFB 0,25,6,59,6,97,7,255               ;
 64504 DEFB 7,136,6,34,6,85,0,34               ; }

; The Final Barrier (teleport: 1256)
;
; Used by the routine at #R34436.
; .
; #UDGTABLE
; { #CAVERN19(the_final_barrier) }
; TABLE#
; .
; The first 512 bytes are the attributes that define the layout of the cavern.
; The first 256 bytes here are also used by the routine at #R34252 when
; preparing the top third of the title screen.
@label=CAVERN19
b64512 DEFB 44,34,34,34,34,34,44,40            ; {Attributes
 64520 DEFB 40,40,40,40,47,47,47,47            ;
 64528 DEFB 47,40,40,40,40,40,46,50            ;
 64536 DEFB 50,46,40,40,40,40,40,40            ;
 64544 DEFB 44,34,34,34,34,34,44,40            ;
 64552 DEFB 40,47,40,40,47,47,47,47            ;
 64560 DEFB 47,40,40,40,40,40,58,56            ;
 64568 DEFB 56,58,40,40,40,42,42,42            ;
 64576 DEFB 44,34,34,22,34,44,46,46            ;
 64584 DEFB 46,46,46,46,47,47,47,47            ;
 64592 DEFB 47,46,43,46,43,46,58,56            ;
 64600 DEFB 56,58,47,47,47,42,42,42            ;
 64608 DEFB 40,44,44,22,44,46,46,46            ;
 64616 DEFB 46,46,46,46,46,40,40,40            ;
 64624 DEFB 44,44,44,44,44,44,58,58            ;
 64632 DEFB 58,58,47,47,47,40,42,40            ;
 64640 DEFB 40,47,40,22,40,46,46,46            ;
 64648 DEFB 46,46,46,46,46,44,44,44            ;
 64656 DEFB 38,38,38,38,38,38,38,38            ;
 64664 DEFB 38,38,38,38,38,38,38,38            ;
 64672 DEFB 40,44,44,22,44,46,46,46            ;
 64680 DEFB 46,46,46,46,46,39,38,38            ;
 64688 DEFB 38,38,38,0,0,38,0,0                ;
 64696 DEFB 0,0,0,0,0,0,0,38                   ;
 64704 DEFB 12,38,38,38,38,33,33,33            ;
 64712 DEFB 14,14,33,33,33,39,38,38            ;
 64720 DEFB 38,38,38,0,0,38,0,0                ;
 64728 DEFB 0,0,0,0,0,0,0,38                   ;
 64736 DEFB 38,38,38,38,38,38,38,38            ;
 64744 DEFB 38,38,38,38,38,38,38,38            ;
 64752 DEFB 38,38,38,0,0,38,0,0                ;
 64760 DEFB 0,0,0,0,0,0,0,38                   ;
 64768 DEFB 38,0,0,0,0,0,0,0                   ;
 64776 DEFB 0,0,0,0,0,0,0,0                    ;
 64784 DEFB 0,0,0,0,0,0,0,0                    ;
 64792 DEFB 0,0,0,0,0,66,66,38                 ;
 64800 DEFB 38,0,0,0,0,0,0,0                   ;
 64808 DEFB 0,0,0,0,0,0,0,0                    ;
 64816 DEFB 0,0,0,0,0,0,0,0                    ;
 64824 DEFB 0,0,0,0,0,0,0,38                   ;
 64832 DEFB 38,5,5,5,5,5,5,5                   ;
 64840 DEFB 5,5,5,5,5,5,5,5                    ;
 64848 DEFB 5,5,5,5,5,5,5,0                    ;
 64856 DEFB 0,0,2,0,0,0,0,38                   ;
 64864 DEFB 38,0,0,0,0,0,0,0                   ;
 64872 DEFB 0,68,0,0,68,0,0,0                  ;
 64880 DEFB 0,68,0,0,0,68,0,0                  ;
 64888 DEFB 0,0,0,0,66,0,0,38                  ;
 64896 DEFB 38,66,66,0,0,0,0,0                 ;
 64904 DEFB 0,0,0,0,0,0,0,0                    ;
 64912 DEFB 0,0,0,0,0,0,0,0                    ;
 64920 DEFB 0,0,0,0,0,0,0,38                   ;
 64928 DEFB 38,0,0,0,0,66,66,0                 ;
 64936 DEFB 0,0,0,0,0,0,0,0                    ;
 64944 DEFB 0,0,0,0,0,0,0,0                    ;
 64952 DEFB 0,0,0,0,0,0,0,38                   ;
 64960 DEFB 38,0,0,0,0,0,0,0                   ;
 64968 DEFB 0,0,0,0,0,0,0,0                    ;
 64976 DEFB 0,0,0,0,0,0,0,0                    ;
 64984 DEFB 0,0,0,0,0,0,0,38                   ;
 64992 DEFB 38,66,66,66,66,66,66,66            ;
 65000 DEFB 66,66,66,66,66,66,66,66            ;
 65008 DEFB 66,66,66,66,66,66,66,66            ;
 65016 DEFB 66,66,66,66,66,66,66,38            ; }
; The next 32 bytes are copied to #R32768 and specify the cavern name.
 65024 DEFM "        The Final Barrier       " ; Cavern name
; The next 72 bytes are copied to #R32800 and contain the attributes and
; graphic data for the tiles used to build the cavern.
; .
; #UDGTABLE
; { #TILES19 }
; TABLE#
 65056 DEFB 0,0,0,0,0,0,0,0,0                  ; Background
 65065 DEFB 66,255,255,219,110,197,64,0,0      ; Floor
 65074 DEFB 2,255,219,165,36,82,32,8,0         ; Crumbling floor
 65083 DEFB 38,34,255,136,255,34,255,136,255   ; Wall
 65092 DEFB 5,240,102,240,102,0,153,255,0      ; Conveyor
 65101 DEFB 68,16,16,214,56,214,56,84,146      ; Nasty 1
 65110 DEFB 10,126,60,28,24,24,8,8,8           ; Nasty 2 (unused)
 65119 DEFB 0,0,0,0,0,0,0,0,0                  ; Extra (unused)
@ignoreua
; The next seven bytes are copied to #GBUF32872,32878 and specify Miner Willy's
; initial location and appearance in the cavern.
 65128 DEFB 208                                ; Pixel y-coordinate * 2 (see
                                               ; #R32872)
 65129 DEFB 0                                  ; Animation frame (see #R32873)
 65130 DEFB 1                                  ; Direction and movement flags:
                                               ; facing left (see #R32874)
 65131 DEFB 0                                  ; Airborne status indicator (see
                                               ; #R32875)
 65132 DEFW 23995                              ; Location in the attribute
                                               ; buffer at #R23552: (13,27)
                                               ; (see #R32876)
 65134 DEFB 0                                  ; Jumping animation counter (see
                                               ; #R32878)
; The next four bytes are copied to #R32879 and specify the direction, location
; and length of the conveyor.
 65135 DEFB 1                                  ; Direction (right)
 65136 DEFW 30785                              ; Location in the screen buffer
                                               ; at #R28672: (10,1)
 65138 DEFB 22                                 ; Length
; The next byte is copied to #R32883 and specifies the border colour.
 65139 DEFB 2                                  ; Border colour
; The next byte is copied to #R32884, but is not used.
 65140 DEFB 0                                  ; Unused
; The next 25 bytes are copied to #R32885 and specify the location and initial
; colour of the items in the cavern.
 65141 DEFB 3                                  ; {Item 1 at (5,23)
 65142 DEFW 23735                              ;
 65144 DEFB 96                                 ;
 65145 DEFB 255                                ; }
 65146 DEFB 4                                  ; {Item 2 at (6,30)
 65147 DEFW 23774                              ;
 65149 DEFB 96                                 ;
 65150 DEFB 255                                ; }
 65151 DEFB 5                                  ; {Item 3 at (11,10)
 65152 DEFW 23914                              ;
 65154 DEFB 104                                ;
 65155 DEFB 255                                ; }
 65156 DEFB 6                                  ; {Item 4 at (11,14)
 65157 DEFW 23918                              ;
 65159 DEFB 104                                ;
 65160 DEFB 255                                ; }
 65161 DEFB 3                                  ; {Item 5 at (11,19)
 65162 DEFW 23923                              ;
 65164 DEFB 104                                ;
 65165 DEFB 255                                ; }
 65166 DEFB 255                                ; Terminator
; The next 37 bytes are copied to #R32911 and define the portal graphic and its
; location.
; .
; #UDGTABLE
; { #PORTAL19 }
; TABLE#
 65167 DEFB 30                                 ; Attribute
 65168 DEFB 0,0,7,224,24,24,35,196             ; {Graphic data
 65176 DEFB 68,34,72,18,72,18,72,18            ;
 65184 DEFB 68,34,34,68,26,88,74,82            ;
 65192 DEFB 122,94,66,66,126,126,0,0           ; }
 65200 DEFW 23731                              ; Location in the attribute
                                               ; buffer at #R23552: (5,19)
 65202 DEFW 24755                              ; Location in the screen buffer
                                               ; at #R24576: (5,19)
; The next eight bytes are copied to #R32948 and define the item graphic.
; .
; #UDGTABLE
; { #ITEM19 }
; TABLE#
 65204 DEFB 48,72,136,144,104,4,10,4           ; Item graphic data
; The next byte is copied to #R32956 and specifies the initial air supply in
; the cavern.
 65212 DEFB 63                                 ; Air
; The next byte is copied to #R32957 and initialises the game clock.
 65213 DEFB 252                                ; Game clock
; The next 28 bytes are copied to #R32958 and define the horizontal guardians.
 65214 DEFB 70                                 ; {Horizontal guardian 1: y=13,
 65215 DEFW 23975                              ; initial x=7, 7<=x<=22,
 65217 DEFB 104                                ; speed=normal
 65218 DEFB 0                                  ;
 65219 DEFB 167                                ;
 65220 DEFB 182                                ; }
 65221 DEFB 255,0,0,0,0,0,0                    ; Horizontal guardian 2 (unused)
 65228 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 3 (unused)
 65235 DEFB 0,0,0,0,0,0,0                      ; Horizontal guardian 4 (unused)
 65242 DEFB 255                                ; Terminator
; The next two bytes are copied to #R32987 and #R32988 but are not used.
 65243 DEFB 0,0                                ; Unused
; The next 28 bytes are copied to #R32989 and define the vertical guardians.
 65245 DEFB 7                                  ; {Vertical guardian 1: x=24,
 65246 DEFB 0                                  ; initial y=48, 40<=y<103,
 65247 DEFB 48                                 ; initial y-increment=1
 65248 DEFB 24                                 ;
 65249 DEFB 1                                  ;
 65250 DEFB 40                                 ;
 65251 DEFB 103                                ; }
 65252 DEFB 255,0,0,0,0,0,0                    ; Vertical guardian 2 (unused)
 65259 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 3 (unused)
 65266 DEFB 0,0,0,0,0,0,0                      ; Vertical guardian 4 (unused)
; The next 7 bytes are unused.
 65273 DEFB 0,0,0,0,0,0,0                      ; Unused
; The next 256 bytes are copied to #R33024 and define the guardian graphics.
; .
; #UDGTABLE
; { #SPRITE65280,65245(the_final_barrier_guardian0) |
; #SPRITE65312,65245(the_final_barrier_guardian1) |
; #SPRITE65344,65245(the_final_barrier_guardian2) |
; #SPRITE65376,65245(the_final_barrier_guardian3) |
; #SPRITE65408,65214(the_final_barrier_guardian4) |
; #SPRITE65440,65214(the_final_barrier_guardian5) |
; #SPRITE65472,65214(the_final_barrier_guardian6) |
; #SPRITE65504,65214(the_final_barrier_guardian7) }
; TABLE#
 65280 DEFB 0,0,0,0,0,0,3,192                  ; {Guardian graphic data
 65288 DEFB 12,48,16,8,32,4,64,2               ;
 65296 DEFB 128,1,64,2,32,4,208,11             ;
 65304 DEFB 44,52,75,210,18,72,2,64            ;
 65312 DEFB 0,0,0,0,0,0,3,192                  ;
 65320 DEFB 12,48,16,8,32,4,64,2               ;
 65328 DEFB 248,31,87,234,43,212,18,72         ;
 65336 DEFB 12,48,3,192,0,0,0,0                ;
 65344 DEFB 4,32,4,32,18,72,75,210             ;
 65352 DEFB 44,52,147,201,167,229,70,98        ;
 65360 DEFB 134,97,71,226,35,196,16,8          ;
 65368 DEFB 12,48,3,192,0,0,0,0                ;
 65376 DEFB 0,0,0,0,0,0,3,192                  ;
 65384 DEFB 12,48,18,72,42,84,95,250           ;
 65392 DEFB 246,127,71,226,35,196,16,8         ;
 65400 DEFB 12,48,3,192,0,0,0,0                ;
 65408 DEFB 18,0,12,0,30,0,191,64              ;
 65416 DEFB 115,128,115,128,191,64,94,128      ;
 65424 DEFB 76,128,82,128,127,128,12,0         ;
 65432 DEFB 97,128,146,192,178,64,97,128       ;
 65440 DEFB 3,0,7,128,7,128,28,224             ;
 65448 DEFB 59,112,59,112,28,224,23,160        ;
 65456 DEFB 23,160,19,32,31,224,3,0            ;
 65464 DEFB 24,96,36,144,52,176,24,96          ;
 65472 DEFB 1,224,1,224,1,32,14,220            ;
 65480 DEFB 13,236,13,236,14,220,5,40          ;
 65488 DEFB 5,232,5,232,7,248,0,192            ;
 65496 DEFB 6,24,13,36,9,52,6,24               ;
 65504 DEFB 0,120,0,72,0,48,3,123              ;
 65512 DEFB 2,253,2,253,3,123,1,50             ;
 65520 DEFB 1,74,1,122,1,254,0,48              ;
 65528 DEFB 1,134,2,205,2,73,1,134             ; }
